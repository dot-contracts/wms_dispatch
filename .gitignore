# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio files
.vs/
*.suo
*.user
*.userosscache
*.sln.docstates

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# Android/Xamarin specific
*.apk
*.aab
*.ap_
*.dex
*.class
.gradle/
local.properties
proguard/
build/

# macOS-specific files
.DS_Store

# Windows-specific files
Thumbs.db
ehthumbs.db
Desktop.ini

# Ignore build artifacts and binaries
*/bin/
*/obj/
*.dll
*.pdb
*.apk
*.idsig

# Standard .NET/Android ignores
**/bin/
**/obj/
*.apk
*.aab

# User-specific files (macOS, Windows, Linux)
.DS_Store
Thumbs.db
.idea/
.vs/
*.suo
*.user

# Rider specific files
*.sln.iml
*.iml
*_i.c
*_p.c
*_i.h
*_p.h
*.bundle.*

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio Team Services generated files
# (this pattern is specific to VS Team Services projects)
*.vspscc

# Visual Studio Code files
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Rider specific files
.idea/*
!.idea/workspace.xml # Allow committing workspace.xml for shared settings
!.idea/.idea.* # Allow committing specific .idea files if necessary for project structure

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# BenchmarkDotNet results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vsix
*.vxlog
*.vspscc
*.vssscc
.builds

# CMake cache files
CMakeCache.txt
CMakeFiles/
CMakeScripts/

# CMake Visual Studio files
CMakeProjects/
Testing/

# Visual Studio C++ general files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiling files
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.instranco
*.dib

# Guidance Automation Toolkit
*.gpState

# ReSharper is a Visual Studio extension that provides on-the-fly code analysis
# and warning. It keeps its caches folder within the project folder.
# More info: https://www.jetbrains.com/resharper/
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a continuous integration server.
# More info: https://www.jetbrains.com/teamcity/
_TeamCity*

# DotCover is a .NET code coverage tool.
# More info: https://www.jetbrains.com/dotcover/
*.dotCover

# AxoCover is a .NET code coverage tool
.axocover/*
!.axocover/settings.json

# Visual Studio FxCop results
FxCopReport.xml

# Test files
*.testsettings

# Visual Studio database projects
*.dbmdl
*.dacpac

# Sandcastle Help File Builder
[Ss]andcastle*/

# DocProject is a documentation generator for .NET
DocProject.shfbproj

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# NuGet
# Allow NuGet packages folder, but ignore Produced NuGets
*.nupkg
# except in packages folder
!**/packages/*.nupkg
# Ignore Symbol Packages
*.snupkg

# NuGet v3 Caching
## More info: https://docs.nuget.org/consume/nuget-config-defaults
# NuGet.Config files are committed, but not the caches folder it generates.
# NuGet local global packages folder : .nuget/packages, also %userprofile%\.nuget\packages
# NuGet local http-cache folder : .nuget/v3-cache, also %temp%\NuGetScratch (which is covered by the Windows temp folder pattern)
.nuget/packages/*
.nuget/plugins/*
# except files that are performance critical for builds. See issue #633
# Note: This is a broad pattern, if there are specific files that are critical to your build,
# you may want to refine this to be more specific.
!.nuget/packages/Microsoft.NETCore.App.Ref/
!.nuget/packages/Microsoft.AspNetCore.App.Ref/
!.nuget/packages/Microsoft.WindowsDesktop.App.Ref/
!.nuget/packages/NETStandard.Library.Ref/
!.nuget/packages/System.ComponentModel.Annotations/
!.nuget/packages/System.Memory/
!.nuget/packages/System.Numerics.Vectors/
!.nuget/packages/System.Runtime.CompilerServices.Unsafe/
!.nuget/packages/System.Buffers/
!.nuget/packages/System.Text.Json/
!.nuget.props
!.nuget.targets

# Portable Class Library project templates
*.portable.csproj
*.shproj

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# JetBrains Rider
*.sln.iml

# End of https://www.gitignore.io/api/visualstudio

# NuProj
*.nuproj

# Paket
.paket/paket.exe
paket-files/

# FAKE
.fake/

# Ionide
.ionide/

# OctoPack
# OctoPack temporary files
OctoPack.precompile.*.config
OctoPack.temp.*/

# Added by VS Code
.DS_Store
.AppleDouble

# Environments
.env
.env*.local
!.env.example

# Terraform
.terraform/
*.tfstate
*.tfstate.backup
*.tfvars
*.tfvars.json
*.tfplan
*.tfr

# MyGet
# myget.org documentation says to ignore the entire packages folder.
# However, this may break some builds, so it's commented out by default.
# For more info, see: https://docs.myget.org/docs/reference/package-restore-from-myget
# packages/*

# node.js
node_modules/
npm-debug.log
yarn-error.log
package-lock.json # Often committed, but can be ignored if using yarn.lock or similar
yarn.lock # Often committed, but can be ignored if using package-lock.json or similar

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
*.egg-info/
dist/
build/
*.egg

# Rider JIT Temp files
%TEMP%/rider-jit eeuw.*
