// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250524163401_AddDispatchEntity")]
    partial class AddDispatchEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DispatchParcel", b =>
                {
                    b.Property<Guid>("DispatchId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ParcelsId")
                        .HasColumnType("uuid");

                    b.HasKey("DispatchId", "ParcelsId");

                    b.HasIndex("ParcelsId");

                    b.ToTable("DispatchParcels", (string)null);
                });

            modelBuilder.Entity("wms_android.shared.Models.Dispatch", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DispatchTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Driver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<Guid>>("ParcelIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<string>("SourceBranch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Dispatches");
                });

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf40d661-40c7-4fb2-ba16-d188ff8333ca"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("48e69376-4795-45e9-9b4a-071297c7ed56"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("e4c20650-2aa2-47c4-8f3d-6e243f7e681e"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("e4607dd9-5d99-4af2-89bf-6647e351100b"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("020eb8b5-7841-44d9-8cf8-05371c553f4f"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("6cf40357-9e84-43c8-82bb-57190dc4f5ec"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("eae8214e-996d-47f8-bf96-228d2fb5cf8e"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("cdd12685-0219-4bf6-8c02-43b3a701756e"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("5203ada3-9073-433b-ba12-bf820244af84"),
                            FirstName = "Charles",
                            Initials = "CM",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("a12563db-9e91-40b5-a320-d0400171aade"),
                            FirstName = "James",
                            Initials = "JG",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorLastNameSnapshot")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .HasColumnType("text");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ShipmentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorLastNameSnapshot")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WaybillNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("WaybillNumber")
                        .IsUnique();

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            LastName = "User",
                            Password = "admin123",
                            PasswordHash = new byte[] { 111, 184, 52, 230, 226, 98, 103, 181, 50, 246, 238, 148, 231, 137, 217, 190, 130, 254, 188, 178, 135, 68, 57, 200, 167, 28, 207, 115, 220, 184, 82, 245, 101, 23, 61, 251, 95, 127, 215, 93, 215, 229, 156, 150, 13, 49, 90, 252, 197, 126, 229, 44, 175, 68, 238, 62, 52, 154, 110, 14, 180, 51, 253, 174 },
                            PasswordSalt = new byte[] { 253, 46, 24, 198, 146, 144, 201, 128, 219, 31, 74, 118, 19, 236, 144, 140, 211, 78, 108, 125, 142, 207, 198, 230, 73, 103, 67, 56, 133, 224, 138, 108, 128, 5, 89, 32, 28, 39, 41, 219, 171, 79, 20, 85, 197, 115, 171, 48, 84, 184, 167, 130, 72, 56, 7, 197, 233, 188, 155, 62, 75, 222, 168, 26, 248, 64, 102, 27, 182, 110, 168, 222, 73, 185, 140, 2, 50, 61, 175, 203, 69, 46, 75, 49, 213, 59, 230, 81, 132, 121, 228, 253, 0, 100, 14, 82, 25, 87, 18, 98, 161, 4, 147, 118, 25, 103, 130, 161, 52, 202, 122, 180, 64, 159, 78, 127, 19, 178, 163, 201, 6, 205, 186, 144, 155, 79, 3, 132 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            FirstName = "Manager",
                            LastName = "Person",
                            Password = "manager123",
                            PasswordHash = new byte[] { 111, 184, 52, 230, 226, 98, 103, 181, 50, 246, 238, 148, 231, 137, 217, 190, 130, 254, 188, 178, 135, 68, 57, 200, 167, 28, 207, 115, 220, 184, 82, 245, 101, 23, 61, 251, 95, 127, 215, 93, 215, 229, 156, 150, 13, 49, 90, 252, 197, 126, 229, 44, 175, 68, 238, 62, 52, 154, 110, 14, 180, 51, 253, 174 },
                            PasswordSalt = new byte[] { 253, 46, 24, 198, 146, 144, 201, 128, 219, 31, 74, 118, 19, 236, 144, 140, 211, 78, 108, 125, 142, 207, 198, 230, 73, 103, 67, 56, 133, 224, 138, 108, 128, 5, 89, 32, 28, 39, 41, 219, 171, 79, 20, 85, 197, 115, 171, 48, 84, 184, 167, 130, 72, 56, 7, 197, 233, 188, 155, 62, 75, 222, 168, 26, 248, 64, 102, 27, 182, 110, 168, 222, 73, 185, 140, 2, 50, 61, 175, 203, 69, 46, 75, 49, 213, 59, 230, 81, 132, 121, 228, 253, 0, 100, 14, 82, 25, 87, 18, 98, 161, 4, 147, 118, 25, 103, 130, 161, 52, 202, 122, 180, 64, 159, 78, 127, 19, 178, 163, 201, 6, 205, 186, 144, 155, 79, 3, 132 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            FirstName = "Clerk",
                            LastName = "One",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 111, 184, 52, 230, 226, 98, 103, 181, 50, 246, 238, 148, 231, 137, 217, 190, 130, 254, 188, 178, 135, 68, 57, 200, 167, 28, 207, 115, 220, 184, 82, 245, 101, 23, 61, 251, 95, 127, 215, 93, 215, 229, 156, 150, 13, 49, 90, 252, 197, 126, 229, 44, 175, 68, 238, 62, 52, 154, 110, 14, 180, 51, 253, 174 },
                            PasswordSalt = new byte[] { 253, 46, 24, 198, 146, 144, 201, 128, 219, 31, 74, 118, 19, 236, 144, 140, 211, 78, 108, 125, 142, 207, 198, 230, 73, 103, 67, 56, 133, 224, 138, 108, 128, 5, 89, 32, 28, 39, 41, 219, 171, 79, 20, 85, 197, 115, 171, 48, 84, 184, 167, 130, 72, 56, 7, 197, 233, 188, 155, 62, 75, 222, 168, 26, 248, 64, 102, 27, 182, 110, 168, 222, 73, 185, 140, 2, 50, 61, 175, 203, 69, 46, 75, 49, 213, 59, 230, 81, 132, 121, 228, 253, 0, 100, 14, 82, 25, 87, 18, 98, 161, 4, 147, 118, 25, 103, 130, 161, 52, 202, 122, 180, 64, 159, 78, 127, 19, 178, 163, 201, 6, 205, 186, 144, 155, 79, 3, 132 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            FirstName = "Clerk",
                            LastName = "Two",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 111, 184, 52, 230, 226, 98, 103, 181, 50, 246, 238, 148, 231, 137, 217, 190, 130, 254, 188, 178, 135, 68, 57, 200, 167, 28, 207, 115, 220, 184, 82, 245, 101, 23, 61, 251, 95, 127, 215, 93, 215, 229, 156, 150, 13, 49, 90, 252, 197, 126, 229, 44, 175, 68, 238, 62, 52, 154, 110, 14, 180, 51, 253, 174 },
                            PasswordSalt = new byte[] { 253, 46, 24, 198, 146, 144, 201, 128, 219, 31, 74, 118, 19, 236, 144, 140, 211, 78, 108, 125, 142, 207, 198, 230, 73, 103, 67, 56, 133, 224, 138, 108, 128, 5, 89, 32, 28, 39, 41, 219, 171, 79, 20, 85, 197, 115, 171, 48, 84, 184, 167, 130, 72, 56, 7, 197, 233, 188, 155, 62, 75, 222, 168, 26, 248, 64, 102, 27, 182, 110, 168, 222, 73, 185, 140, 2, 50, 61, 175, 203, 69, 46, 75, 49, 213, 59, 230, 81, 132, 121, 228, 253, 0, 100, 14, 82, 25, 87, 18, 98, 161, 4, 147, 118, 25, 103, 130, 161, 52, 202, 122, 180, 64, 159, 78, 127, 19, 178, 163, 201, 6, 205, 186, 144, 155, 79, 3, 132 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            FirstName = "Client",
                            LastName = "UserOne",
                            Password = "client123",
                            PasswordHash = new byte[] { 111, 184, 52, 230, 226, 98, 103, 181, 50, 246, 238, 148, 231, 137, 217, 190, 130, 254, 188, 178, 135, 68, 57, 200, 167, 28, 207, 115, 220, 184, 82, 245, 101, 23, 61, 251, 95, 127, 215, 93, 215, 229, 156, 150, 13, 49, 90, 252, 197, 126, 229, 44, 175, 68, 238, 62, 52, 154, 110, 14, 180, 51, 253, 174 },
                            PasswordSalt = new byte[] { 253, 46, 24, 198, 146, 144, 201, 128, 219, 31, 74, 118, 19, 236, 144, 140, 211, 78, 108, 125, 142, 207, 198, 230, 73, 103, 67, 56, 133, 224, 138, 108, 128, 5, 89, 32, 28, 39, 41, 219, 171, 79, 20, 85, 197, 115, 171, 48, 84, 184, 167, 130, 72, 56, 7, 197, 233, 188, 155, 62, 75, 222, 168, 26, 248, 64, 102, 27, 182, 110, 168, 222, 73, 185, 140, 2, 50, 61, 175, 203, 69, 46, 75, 49, 213, 59, 230, 81, 132, 121, 228, 253, 0, 100, 14, 82, 25, 87, 18, 98, 161, 4, 147, 118, 25, 103, 130, 161, 52, 202, 122, 180, 64, 159, 78, 127, 19, 178, 163, 201, 6, 205, 186, 144, 155, 79, 3, 132 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("26a4ad68-7593-4ad4-b488-31a5c62b91f1"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("90f1210e-2287-4eff-8d0a-e971e80f99c5"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("dceafa42-0d32-4cc1-906d-73347d61f05b"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("9925837f-e04b-4074-bdb6-6b55119bc528"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("6c7d78f9-1356-462e-98f3-600853b098bc"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("c5d38d75-d540-43b6-88ff-36a59159b4dc"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("2eeb9755-3d80-488f-bc46-6447b7842067"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("DispatchParcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.Dispatch", null)
                        .WithMany()
                        .HasForeignKey("DispatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wms_android.shared.Models.Parcel", null)
                        .WithMany()
                        .HasForeignKey("ParcelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("wms_android.shared.Models.Shipment", "Shipment")
                        .WithMany("Parcels")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CreatedBy");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.Navigation("Parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
