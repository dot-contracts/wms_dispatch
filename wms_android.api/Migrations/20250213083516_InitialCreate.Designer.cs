// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250213083516_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d66c50fd-082b-460a-8098-66ebc31560c9"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("45570e31-c40c-4440-9061-43f417239415"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("4655e2d0-f391-4006-9622-272648b0785e"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("72b04a78-6f14-45a4-8c6a-22b669f5c001"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("bc56bb37-37b7-43ce-b82f-a6feff6d28e7"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("243f885d-8b0b-4f19-a7dc-3b6c90c566c4"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("2a173a02-5d97-4434-ae6f-55f1ab08fd91"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("95759590-9076-40a8-b445-a84e461863c6"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("052db9ea-242d-4dd9-b7ec-fe50ae95ab28"),
                            FirstName = "Charles",
                            Initials = "SK",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("31f05f8d-01be-4aa7-9920-968a1c5751ec"),
                            FirstName = "James",
                            Initials = "SK",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            Password = "admin123",
                            PasswordHash = new byte[] { 9, 101, 41, 228, 239, 189, 235, 174, 25, 35, 134, 125, 35, 140, 92, 63, 254, 45, 142, 226, 47, 127, 176, 85, 69, 170, 12, 13, 32, 213, 183, 212, 153, 96, 49, 143, 2, 91, 29, 24, 200, 178, 22, 129, 9, 107, 76, 173, 192, 231, 146, 104, 211, 132, 6, 3, 168, 225, 67, 202, 241, 109, 108, 55 },
                            PasswordSalt = new byte[] { 27, 35, 145, 171, 102, 146, 212, 95, 253, 18, 116, 57, 156, 3, 251, 21, 150, 131, 15, 52, 225, 237, 177, 44, 165, 113, 60, 189, 64, 242, 142, 181, 220, 159, 30, 132, 33, 60, 132, 65, 81, 141, 199, 182, 25, 212, 240, 21, 158, 194, 155, 181, 104, 242, 125, 63, 181, 255, 131, 241, 173, 57, 124, 188, 249, 203, 197, 228, 84, 13, 9, 111, 130, 107, 88, 150, 77, 38, 122, 95, 144, 53, 95, 186, 113, 13, 112, 14, 137, 242, 88, 96, 198, 50, 80, 210, 99, 31, 246, 99, 103, 119, 143, 134, 6, 97, 203, 66, 179, 135, 58, 114, 130, 9, 120, 21, 86, 39, 106, 145, 198, 180, 59, 111, 224, 51, 26, 36 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            Password = "manager123",
                            PasswordHash = new byte[] { 9, 101, 41, 228, 239, 189, 235, 174, 25, 35, 134, 125, 35, 140, 92, 63, 254, 45, 142, 226, 47, 127, 176, 85, 69, 170, 12, 13, 32, 213, 183, 212, 153, 96, 49, 143, 2, 91, 29, 24, 200, 178, 22, 129, 9, 107, 76, 173, 192, 231, 146, 104, 211, 132, 6, 3, 168, 225, 67, 202, 241, 109, 108, 55 },
                            PasswordSalt = new byte[] { 27, 35, 145, 171, 102, 146, 212, 95, 253, 18, 116, 57, 156, 3, 251, 21, 150, 131, 15, 52, 225, 237, 177, 44, 165, 113, 60, 189, 64, 242, 142, 181, 220, 159, 30, 132, 33, 60, 132, 65, 81, 141, 199, 182, 25, 212, 240, 21, 158, 194, 155, 181, 104, 242, 125, 63, 181, 255, 131, 241, 173, 57, 124, 188, 249, 203, 197, 228, 84, 13, 9, 111, 130, 107, 88, 150, 77, 38, 122, 95, 144, 53, 95, 186, 113, 13, 112, 14, 137, 242, 88, 96, 198, 50, 80, 210, 99, 31, 246, 99, 103, 119, 143, 134, 6, 97, 203, 66, 179, 135, 58, 114, 130, 9, 120, 21, 86, 39, 106, 145, 198, 180, 59, 111, 224, 51, 26, 36 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 9, 101, 41, 228, 239, 189, 235, 174, 25, 35, 134, 125, 35, 140, 92, 63, 254, 45, 142, 226, 47, 127, 176, 85, 69, 170, 12, 13, 32, 213, 183, 212, 153, 96, 49, 143, 2, 91, 29, 24, 200, 178, 22, 129, 9, 107, 76, 173, 192, 231, 146, 104, 211, 132, 6, 3, 168, 225, 67, 202, 241, 109, 108, 55 },
                            PasswordSalt = new byte[] { 27, 35, 145, 171, 102, 146, 212, 95, 253, 18, 116, 57, 156, 3, 251, 21, 150, 131, 15, 52, 225, 237, 177, 44, 165, 113, 60, 189, 64, 242, 142, 181, 220, 159, 30, 132, 33, 60, 132, 65, 81, 141, 199, 182, 25, 212, 240, 21, 158, 194, 155, 181, 104, 242, 125, 63, 181, 255, 131, 241, 173, 57, 124, 188, 249, 203, 197, 228, 84, 13, 9, 111, 130, 107, 88, 150, 77, 38, 122, 95, 144, 53, 95, 186, 113, 13, 112, 14, 137, 242, 88, 96, 198, 50, 80, 210, 99, 31, 246, 99, 103, 119, 143, 134, 6, 97, 203, 66, 179, 135, 58, 114, 130, 9, 120, 21, 86, 39, 106, 145, 198, 180, 59, 111, 224, 51, 26, 36 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 9, 101, 41, 228, 239, 189, 235, 174, 25, 35, 134, 125, 35, 140, 92, 63, 254, 45, 142, 226, 47, 127, 176, 85, 69, 170, 12, 13, 32, 213, 183, 212, 153, 96, 49, 143, 2, 91, 29, 24, 200, 178, 22, 129, 9, 107, 76, 173, 192, 231, 146, 104, 211, 132, 6, 3, 168, 225, 67, 202, 241, 109, 108, 55 },
                            PasswordSalt = new byte[] { 27, 35, 145, 171, 102, 146, 212, 95, 253, 18, 116, 57, 156, 3, 251, 21, 150, 131, 15, 52, 225, 237, 177, 44, 165, 113, 60, 189, 64, 242, 142, 181, 220, 159, 30, 132, 33, 60, 132, 65, 81, 141, 199, 182, 25, 212, 240, 21, 158, 194, 155, 181, 104, 242, 125, 63, 181, 255, 131, 241, 173, 57, 124, 188, 249, 203, 197, 228, 84, 13, 9, 111, 130, 107, 88, 150, 77, 38, 122, 95, 144, 53, 95, 186, 113, 13, 112, 14, 137, 242, 88, 96, 198, 50, 80, 210, 99, 31, 246, 99, 103, 119, 143, 134, 6, 97, 203, 66, 179, 135, 58, 114, 130, 9, 120, 21, 86, 39, 106, 145, 198, 180, 59, 111, 224, 51, 26, 36 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            Password = "client123",
                            PasswordHash = new byte[] { 9, 101, 41, 228, 239, 189, 235, 174, 25, 35, 134, 125, 35, 140, 92, 63, 254, 45, 142, 226, 47, 127, 176, 85, 69, 170, 12, 13, 32, 213, 183, 212, 153, 96, 49, 143, 2, 91, 29, 24, 200, 178, 22, 129, 9, 107, 76, 173, 192, 231, 146, 104, 211, 132, 6, 3, 168, 225, 67, 202, 241, 109, 108, 55 },
                            PasswordSalt = new byte[] { 27, 35, 145, 171, 102, 146, 212, 95, 253, 18, 116, 57, 156, 3, 251, 21, 150, 131, 15, 52, 225, 237, 177, 44, 165, 113, 60, 189, 64, 242, 142, 181, 220, 159, 30, 132, 33, 60, 132, 65, 81, 141, 199, 182, 25, 212, 240, 21, 158, 194, 155, 181, 104, 242, 125, 63, 181, 255, 131, 241, 173, 57, 124, 188, 249, 203, 197, 228, 84, 13, 9, 111, 130, 107, 88, 150, 77, 38, 122, 95, 144, 53, 95, 186, 113, 13, 112, 14, 137, 242, 88, 96, 198, 50, 80, 210, 99, 31, 246, 99, 103, 119, 143, 134, 6, 97, 203, 66, 179, 135, 58, 114, 130, 9, 120, 21, 86, 39, 106, 145, 198, 180, 59, 111, 224, 51, 26, 36 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("50be9366-8704-4845-ae27-4c4d3775798d"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("b8da3965-4987-46e6-97ce-2f8089208f85"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("d041d9e1-f895-4caa-8303-6c7d93d62613"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("89b6eca1-61d4-41b2-afb1-c5c25383eb79"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("d1e999f3-035d-4313-817a-71eac1dd8ca4"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("5abe04c1-c2fa-4676-a5bd-ab29afa27f34"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("d951006a-2587-479d-b6fa-a0af140832eb"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
