// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250508175942_AddUserFirstLastNameAndParcelCreatorSnapshot")]
    partial class AddUserFirstLastNameAndParcelCreatorSnapshot
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("822298bc-c8cf-4675-83e4-da4998e7975f"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("addb61f4-32b9-46f0-a45d-5881a0f95314"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("f6c14df9-a0f8-44e0-b818-8bc0bc92bf05"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("89098bfa-9dea-440a-b764-688b972b7550"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("c8c23b16-c816-407f-bd01-1db16391cff7"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("4d0a2414-a4da-4ffe-a9cf-329e66a57df5"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("d0298b65-a910-4a93-a2cb-f2252567f0fd"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("1dd704c8-d133-4bc2-9bfc-b7aff407904c"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("e73d28d3-a820-4f2e-b71c-6a4a27fa9a43"),
                            FirstName = "Charles",
                            Initials = "CM",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("8b06943a-5870-4259-b2cd-17dabc1dc64b"),
                            FirstName = "James",
                            Initials = "JG",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorLastNameSnapshot")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .HasColumnType("text");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("WaybillNumber")
                        .IsUnique();

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            LastName = "User",
                            Password = "admin123",
                            PasswordHash = new byte[] { 131, 60, 88, 220, 185, 43, 159, 26, 54, 36, 234, 150, 104, 195, 190, 7, 50, 158, 91, 15, 183, 224, 147, 33, 172, 228, 224, 232, 133, 37, 250, 76, 126, 162, 211, 26, 28, 74, 151, 206, 160, 193, 233, 89, 179, 41, 153, 189, 249, 123, 38, 110, 142, 23, 21, 107, 145, 200, 8, 17, 46, 154, 83, 7 },
                            PasswordSalt = new byte[] { 32, 156, 66, 222, 115, 31, 141, 246, 95, 125, 185, 108, 14, 176, 11, 211, 4, 221, 8, 54, 201, 13, 21, 15, 76, 246, 137, 28, 87, 184, 118, 145, 166, 192, 143, 28, 131, 185, 249, 225, 236, 89, 90, 143, 92, 187, 2, 13, 40, 237, 141, 197, 33, 28, 181, 94, 239, 44, 186, 148, 229, 200, 18, 106, 56, 163, 51, 190, 82, 161, 65, 168, 177, 74, 234, 151, 39, 2, 50, 137, 102, 216, 200, 193, 234, 98, 153, 37, 221, 11, 44, 226, 107, 86, 102, 184, 77, 226, 59, 176, 243, 32, 37, 100, 193, 177, 220, 64, 180, 55, 10, 38, 255, 224, 45, 127, 181, 127, 27, 137, 103, 158, 220, 214, 149, 96, 190, 126 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            FirstName = "Manager",
                            LastName = "Person",
                            Password = "manager123",
                            PasswordHash = new byte[] { 131, 60, 88, 220, 185, 43, 159, 26, 54, 36, 234, 150, 104, 195, 190, 7, 50, 158, 91, 15, 183, 224, 147, 33, 172, 228, 224, 232, 133, 37, 250, 76, 126, 162, 211, 26, 28, 74, 151, 206, 160, 193, 233, 89, 179, 41, 153, 189, 249, 123, 38, 110, 142, 23, 21, 107, 145, 200, 8, 17, 46, 154, 83, 7 },
                            PasswordSalt = new byte[] { 32, 156, 66, 222, 115, 31, 141, 246, 95, 125, 185, 108, 14, 176, 11, 211, 4, 221, 8, 54, 201, 13, 21, 15, 76, 246, 137, 28, 87, 184, 118, 145, 166, 192, 143, 28, 131, 185, 249, 225, 236, 89, 90, 143, 92, 187, 2, 13, 40, 237, 141, 197, 33, 28, 181, 94, 239, 44, 186, 148, 229, 200, 18, 106, 56, 163, 51, 190, 82, 161, 65, 168, 177, 74, 234, 151, 39, 2, 50, 137, 102, 216, 200, 193, 234, 98, 153, 37, 221, 11, 44, 226, 107, 86, 102, 184, 77, 226, 59, 176, 243, 32, 37, 100, 193, 177, 220, 64, 180, 55, 10, 38, 255, 224, 45, 127, 181, 127, 27, 137, 103, 158, 220, 214, 149, 96, 190, 126 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            FirstName = "Clerk",
                            LastName = "One",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 131, 60, 88, 220, 185, 43, 159, 26, 54, 36, 234, 150, 104, 195, 190, 7, 50, 158, 91, 15, 183, 224, 147, 33, 172, 228, 224, 232, 133, 37, 250, 76, 126, 162, 211, 26, 28, 74, 151, 206, 160, 193, 233, 89, 179, 41, 153, 189, 249, 123, 38, 110, 142, 23, 21, 107, 145, 200, 8, 17, 46, 154, 83, 7 },
                            PasswordSalt = new byte[] { 32, 156, 66, 222, 115, 31, 141, 246, 95, 125, 185, 108, 14, 176, 11, 211, 4, 221, 8, 54, 201, 13, 21, 15, 76, 246, 137, 28, 87, 184, 118, 145, 166, 192, 143, 28, 131, 185, 249, 225, 236, 89, 90, 143, 92, 187, 2, 13, 40, 237, 141, 197, 33, 28, 181, 94, 239, 44, 186, 148, 229, 200, 18, 106, 56, 163, 51, 190, 82, 161, 65, 168, 177, 74, 234, 151, 39, 2, 50, 137, 102, 216, 200, 193, 234, 98, 153, 37, 221, 11, 44, 226, 107, 86, 102, 184, 77, 226, 59, 176, 243, 32, 37, 100, 193, 177, 220, 64, 180, 55, 10, 38, 255, 224, 45, 127, 181, 127, 27, 137, 103, 158, 220, 214, 149, 96, 190, 126 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            FirstName = "Clerk",
                            LastName = "Two",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 131, 60, 88, 220, 185, 43, 159, 26, 54, 36, 234, 150, 104, 195, 190, 7, 50, 158, 91, 15, 183, 224, 147, 33, 172, 228, 224, 232, 133, 37, 250, 76, 126, 162, 211, 26, 28, 74, 151, 206, 160, 193, 233, 89, 179, 41, 153, 189, 249, 123, 38, 110, 142, 23, 21, 107, 145, 200, 8, 17, 46, 154, 83, 7 },
                            PasswordSalt = new byte[] { 32, 156, 66, 222, 115, 31, 141, 246, 95, 125, 185, 108, 14, 176, 11, 211, 4, 221, 8, 54, 201, 13, 21, 15, 76, 246, 137, 28, 87, 184, 118, 145, 166, 192, 143, 28, 131, 185, 249, 225, 236, 89, 90, 143, 92, 187, 2, 13, 40, 237, 141, 197, 33, 28, 181, 94, 239, 44, 186, 148, 229, 200, 18, 106, 56, 163, 51, 190, 82, 161, 65, 168, 177, 74, 234, 151, 39, 2, 50, 137, 102, 216, 200, 193, 234, 98, 153, 37, 221, 11, 44, 226, 107, 86, 102, 184, 77, 226, 59, 176, 243, 32, 37, 100, 193, 177, 220, 64, 180, 55, 10, 38, 255, 224, 45, 127, 181, 127, 27, 137, 103, 158, 220, 214, 149, 96, 190, 126 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            FirstName = "Client",
                            LastName = "UserOne",
                            Password = "client123",
                            PasswordHash = new byte[] { 131, 60, 88, 220, 185, 43, 159, 26, 54, 36, 234, 150, 104, 195, 190, 7, 50, 158, 91, 15, 183, 224, 147, 33, 172, 228, 224, 232, 133, 37, 250, 76, 126, 162, 211, 26, 28, 74, 151, 206, 160, 193, 233, 89, 179, 41, 153, 189, 249, 123, 38, 110, 142, 23, 21, 107, 145, 200, 8, 17, 46, 154, 83, 7 },
                            PasswordSalt = new byte[] { 32, 156, 66, 222, 115, 31, 141, 246, 95, 125, 185, 108, 14, 176, 11, 211, 4, 221, 8, 54, 201, 13, 21, 15, 76, 246, 137, 28, 87, 184, 118, 145, 166, 192, 143, 28, 131, 185, 249, 225, 236, 89, 90, 143, 92, 187, 2, 13, 40, 237, 141, 197, 33, 28, 181, 94, 239, 44, 186, 148, 229, 200, 18, 106, 56, 163, 51, 190, 82, 161, 65, 168, 177, 74, 234, 151, 39, 2, 50, 137, 102, 216, 200, 193, 234, 98, 153, 37, 221, 11, 44, 226, 107, 86, 102, 184, 77, 226, 59, 176, 243, 32, 37, 100, 193, 177, 220, 64, 180, 55, 10, 38, 255, 224, 45, 127, 181, 127, 27, 137, 103, 158, 220, 214, 149, 96, 190, 126 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("27eca24b-b238-40e4-af2b-0e014b5da9d0"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("b1a730a9-e76d-45bd-bf4b-50549af6349d"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("87545ff0-1528-4ec0-bec1-5a8286e6e2d8"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("d8726f1a-63ca-445f-9ba5-c2faba5af19d"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("d6f36e1a-e68f-416f-9aee-01c2bca70a5d"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("dd206699-c0d2-4573-b8fc-70adeff1912e"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("c08cd63b-eff6-4962-aa05-2262249cbd52"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
