// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250509152616_AddShipmentsAndModifyParcels")]
    partial class AddShipmentsAndModifyParcels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22e78582-439e-465b-b4d1-7f414292eb24"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("69a35cf9-098d-45a6-b3a3-212ac085f929"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("b63afd9e-8f71-4ad1-b4b5-8e44e97a9b61"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("80e98a59-21fa-48e8-bf36-ee9b46e7da46"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("2511e814-4063-4478-88f9-7da32c9f7ca3"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("cb982c97-a909-4145-8e11-e876a1071ae6"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("f2c46c47-e51b-4349-b927-7eca87cc7fa8"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("7ecf2b05-e862-4b17-b578-edacbf8d8326"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("20b9dfef-45eb-48e7-9f3b-07cee66f868e"),
                            FirstName = "Charles",
                            Initials = "CM",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("c023b85f-4897-4371-9739-6d2483979fee"),
                            FirstName = "James",
                            Initials = "JG",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorLastNameSnapshot")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .HasColumnType("text");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ShipmentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorLastNameSnapshot")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WaybillNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("WaybillNumber")
                        .IsUnique();

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            LastName = "User",
                            Password = "admin123",
                            PasswordHash = new byte[] { 67, 94, 201, 144, 214, 90, 1, 242, 42, 222, 153, 65, 87, 209, 56, 249, 250, 134, 97, 45, 103, 47, 51, 212, 172, 114, 19, 247, 111, 95, 18, 115, 113, 149, 27, 82, 30, 173, 38, 220, 81, 197, 68, 176, 19, 76, 58, 60, 138, 192, 219, 151, 223, 177, 205, 227, 96, 123, 240, 64, 239, 168, 196, 244 },
                            PasswordSalt = new byte[] { 140, 11, 19, 146, 77, 57, 164, 7, 220, 182, 123, 89, 3, 27, 76, 116, 6, 23, 150, 109, 130, 206, 72, 86, 143, 189, 85, 187, 124, 75, 178, 68, 64, 117, 154, 173, 40, 2, 124, 139, 236, 118, 61, 248, 108, 216, 201, 155, 83, 96, 107, 124, 164, 86, 116, 178, 255, 116, 143, 227, 106, 89, 170, 202, 97, 186, 43, 255, 58, 178, 237, 62, 189, 91, 45, 127, 251, 241, 14, 2, 32, 52, 185, 94, 181, 198, 165, 234, 229, 60, 80, 157, 127, 227, 86, 62, 71, 85, 55, 189, 35, 44, 221, 231, 13, 232, 204, 8, 186, 81, 113, 108, 131, 91, 61, 124, 70, 85, 79, 144, 160, 249, 37, 142, 95, 50, 117, 53 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            FirstName = "Manager",
                            LastName = "Person",
                            Password = "manager123",
                            PasswordHash = new byte[] { 67, 94, 201, 144, 214, 90, 1, 242, 42, 222, 153, 65, 87, 209, 56, 249, 250, 134, 97, 45, 103, 47, 51, 212, 172, 114, 19, 247, 111, 95, 18, 115, 113, 149, 27, 82, 30, 173, 38, 220, 81, 197, 68, 176, 19, 76, 58, 60, 138, 192, 219, 151, 223, 177, 205, 227, 96, 123, 240, 64, 239, 168, 196, 244 },
                            PasswordSalt = new byte[] { 140, 11, 19, 146, 77, 57, 164, 7, 220, 182, 123, 89, 3, 27, 76, 116, 6, 23, 150, 109, 130, 206, 72, 86, 143, 189, 85, 187, 124, 75, 178, 68, 64, 117, 154, 173, 40, 2, 124, 139, 236, 118, 61, 248, 108, 216, 201, 155, 83, 96, 107, 124, 164, 86, 116, 178, 255, 116, 143, 227, 106, 89, 170, 202, 97, 186, 43, 255, 58, 178, 237, 62, 189, 91, 45, 127, 251, 241, 14, 2, 32, 52, 185, 94, 181, 198, 165, 234, 229, 60, 80, 157, 127, 227, 86, 62, 71, 85, 55, 189, 35, 44, 221, 231, 13, 232, 204, 8, 186, 81, 113, 108, 131, 91, 61, 124, 70, 85, 79, 144, 160, 249, 37, 142, 95, 50, 117, 53 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            FirstName = "Clerk",
                            LastName = "One",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 67, 94, 201, 144, 214, 90, 1, 242, 42, 222, 153, 65, 87, 209, 56, 249, 250, 134, 97, 45, 103, 47, 51, 212, 172, 114, 19, 247, 111, 95, 18, 115, 113, 149, 27, 82, 30, 173, 38, 220, 81, 197, 68, 176, 19, 76, 58, 60, 138, 192, 219, 151, 223, 177, 205, 227, 96, 123, 240, 64, 239, 168, 196, 244 },
                            PasswordSalt = new byte[] { 140, 11, 19, 146, 77, 57, 164, 7, 220, 182, 123, 89, 3, 27, 76, 116, 6, 23, 150, 109, 130, 206, 72, 86, 143, 189, 85, 187, 124, 75, 178, 68, 64, 117, 154, 173, 40, 2, 124, 139, 236, 118, 61, 248, 108, 216, 201, 155, 83, 96, 107, 124, 164, 86, 116, 178, 255, 116, 143, 227, 106, 89, 170, 202, 97, 186, 43, 255, 58, 178, 237, 62, 189, 91, 45, 127, 251, 241, 14, 2, 32, 52, 185, 94, 181, 198, 165, 234, 229, 60, 80, 157, 127, 227, 86, 62, 71, 85, 55, 189, 35, 44, 221, 231, 13, 232, 204, 8, 186, 81, 113, 108, 131, 91, 61, 124, 70, 85, 79, 144, 160, 249, 37, 142, 95, 50, 117, 53 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            FirstName = "Clerk",
                            LastName = "Two",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 67, 94, 201, 144, 214, 90, 1, 242, 42, 222, 153, 65, 87, 209, 56, 249, 250, 134, 97, 45, 103, 47, 51, 212, 172, 114, 19, 247, 111, 95, 18, 115, 113, 149, 27, 82, 30, 173, 38, 220, 81, 197, 68, 176, 19, 76, 58, 60, 138, 192, 219, 151, 223, 177, 205, 227, 96, 123, 240, 64, 239, 168, 196, 244 },
                            PasswordSalt = new byte[] { 140, 11, 19, 146, 77, 57, 164, 7, 220, 182, 123, 89, 3, 27, 76, 116, 6, 23, 150, 109, 130, 206, 72, 86, 143, 189, 85, 187, 124, 75, 178, 68, 64, 117, 154, 173, 40, 2, 124, 139, 236, 118, 61, 248, 108, 216, 201, 155, 83, 96, 107, 124, 164, 86, 116, 178, 255, 116, 143, 227, 106, 89, 170, 202, 97, 186, 43, 255, 58, 178, 237, 62, 189, 91, 45, 127, 251, 241, 14, 2, 32, 52, 185, 94, 181, 198, 165, 234, 229, 60, 80, 157, 127, 227, 86, 62, 71, 85, 55, 189, 35, 44, 221, 231, 13, 232, 204, 8, 186, 81, 113, 108, 131, 91, 61, 124, 70, 85, 79, 144, 160, 249, 37, 142, 95, 50, 117, 53 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            FirstName = "Client",
                            LastName = "UserOne",
                            Password = "client123",
                            PasswordHash = new byte[] { 67, 94, 201, 144, 214, 90, 1, 242, 42, 222, 153, 65, 87, 209, 56, 249, 250, 134, 97, 45, 103, 47, 51, 212, 172, 114, 19, 247, 111, 95, 18, 115, 113, 149, 27, 82, 30, 173, 38, 220, 81, 197, 68, 176, 19, 76, 58, 60, 138, 192, 219, 151, 223, 177, 205, 227, 96, 123, 240, 64, 239, 168, 196, 244 },
                            PasswordSalt = new byte[] { 140, 11, 19, 146, 77, 57, 164, 7, 220, 182, 123, 89, 3, 27, 76, 116, 6, 23, 150, 109, 130, 206, 72, 86, 143, 189, 85, 187, 124, 75, 178, 68, 64, 117, 154, 173, 40, 2, 124, 139, 236, 118, 61, 248, 108, 216, 201, 155, 83, 96, 107, 124, 164, 86, 116, 178, 255, 116, 143, 227, 106, 89, 170, 202, 97, 186, 43, 255, 58, 178, 237, 62, 189, 91, 45, 127, 251, 241, 14, 2, 32, 52, 185, 94, 181, 198, 165, 234, 229, 60, 80, 157, 127, 227, 86, 62, 71, 85, 55, 189, 35, 44, 221, 231, 13, 232, 204, 8, 186, 81, 113, 108, 131, 91, 61, 124, 70, 85, 79, 144, 160, 249, 37, 142, 95, 50, 117, 53 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33437df3-7124-48e1-888f-88d4602d19bd"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("6d36865b-0adf-45bf-be5b-fa45b85dd81c"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("8da310e7-8317-48a0-9d87-52644cd2fbf7"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("bc446d65-a005-4652-990f-8323b56a153f"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("e3c54906-12cd-4a3c-b158-92d3ff781ab8"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("3d8de8f8-bfcc-4ec2-a21c-0129c4e7773c"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("2f4af14d-8c84-4aab-a948-f7f538d6a1b0"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("wms_android.shared.Models.Shipment", "Shipment")
                        .WithMany("Parcels")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CreatedBy");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.Navigation("Parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
