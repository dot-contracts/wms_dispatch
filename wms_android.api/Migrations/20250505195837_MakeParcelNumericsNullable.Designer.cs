// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250505195837_MakeParcelNumericsNullable")]
    partial class MakeParcelNumericsNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3994ceaa-87ad-421b-b4f9-bd9d69241b12"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("f79d46c6-87bc-46a4-a9ba-1a9ee1cf55b8"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("6a227b9b-7352-4b1c-b690-17e85c4301d9"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("824eec02-5daf-41b2-a8b9-b8348f83594c"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("62812584-672c-4b09-9959-edee96d1c247"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("ce1feecf-e449-42ec-9684-a0b1256b5a8a"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("f35871bd-3dfa-4222-abd3-2539bf547ff3"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("8bd5d189-b600-46ce-9b2d-20553a3cbdd8"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("6d994508-7f1c-46c7-83f2-0e670d977b79"),
                            FirstName = "Charles",
                            Initials = "CM",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("5c272677-0ed2-4168-a544-131b88e92f34"),
                            FirstName = "James",
                            Initials = "JG",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .HasColumnType("text");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            Password = "admin123",
                            PasswordHash = new byte[] { 252, 113, 1, 132, 185, 3, 119, 182, 175, 109, 202, 4, 97, 212, 32, 203, 175, 181, 221, 61, 227, 74, 118, 220, 228, 126, 122, 121, 211, 76, 199, 111, 88, 183, 120, 83, 198, 41, 17, 18, 194, 240, 106, 131, 142, 186, 7, 16, 58, 44, 115, 150, 29, 78, 37, 160, 96, 73, 13, 195, 63, 225, 22, 68 },
                            PasswordSalt = new byte[] { 29, 252, 222, 133, 47, 55, 184, 94, 207, 100, 80, 105, 73, 41, 128, 38, 28, 67, 99, 142, 92, 193, 104, 99, 72, 218, 102, 184, 19, 230, 144, 172, 11, 232, 30, 165, 125, 11, 57, 99, 212, 139, 221, 28, 59, 247, 253, 80, 46, 154, 152, 129, 148, 121, 62, 123, 199, 56, 120, 92, 122, 83, 168, 24, 180, 236, 7, 172, 163, 22, 211, 143, 13, 14, 146, 215, 22, 157, 225, 204, 133, 236, 49, 134, 180, 99, 23, 33, 170, 11, 103, 234, 110, 154, 148, 14, 19, 75, 17, 183, 120, 16, 172, 106, 174, 232, 1, 136, 11, 20, 111, 177, 136, 252, 56, 173, 192, 127, 17, 134, 31, 130, 55, 184, 44, 97, 144, 26 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            Password = "manager123",
                            PasswordHash = new byte[] { 252, 113, 1, 132, 185, 3, 119, 182, 175, 109, 202, 4, 97, 212, 32, 203, 175, 181, 221, 61, 227, 74, 118, 220, 228, 126, 122, 121, 211, 76, 199, 111, 88, 183, 120, 83, 198, 41, 17, 18, 194, 240, 106, 131, 142, 186, 7, 16, 58, 44, 115, 150, 29, 78, 37, 160, 96, 73, 13, 195, 63, 225, 22, 68 },
                            PasswordSalt = new byte[] { 29, 252, 222, 133, 47, 55, 184, 94, 207, 100, 80, 105, 73, 41, 128, 38, 28, 67, 99, 142, 92, 193, 104, 99, 72, 218, 102, 184, 19, 230, 144, 172, 11, 232, 30, 165, 125, 11, 57, 99, 212, 139, 221, 28, 59, 247, 253, 80, 46, 154, 152, 129, 148, 121, 62, 123, 199, 56, 120, 92, 122, 83, 168, 24, 180, 236, 7, 172, 163, 22, 211, 143, 13, 14, 146, 215, 22, 157, 225, 204, 133, 236, 49, 134, 180, 99, 23, 33, 170, 11, 103, 234, 110, 154, 148, 14, 19, 75, 17, 183, 120, 16, 172, 106, 174, 232, 1, 136, 11, 20, 111, 177, 136, 252, 56, 173, 192, 127, 17, 134, 31, 130, 55, 184, 44, 97, 144, 26 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 252, 113, 1, 132, 185, 3, 119, 182, 175, 109, 202, 4, 97, 212, 32, 203, 175, 181, 221, 61, 227, 74, 118, 220, 228, 126, 122, 121, 211, 76, 199, 111, 88, 183, 120, 83, 198, 41, 17, 18, 194, 240, 106, 131, 142, 186, 7, 16, 58, 44, 115, 150, 29, 78, 37, 160, 96, 73, 13, 195, 63, 225, 22, 68 },
                            PasswordSalt = new byte[] { 29, 252, 222, 133, 47, 55, 184, 94, 207, 100, 80, 105, 73, 41, 128, 38, 28, 67, 99, 142, 92, 193, 104, 99, 72, 218, 102, 184, 19, 230, 144, 172, 11, 232, 30, 165, 125, 11, 57, 99, 212, 139, 221, 28, 59, 247, 253, 80, 46, 154, 152, 129, 148, 121, 62, 123, 199, 56, 120, 92, 122, 83, 168, 24, 180, 236, 7, 172, 163, 22, 211, 143, 13, 14, 146, 215, 22, 157, 225, 204, 133, 236, 49, 134, 180, 99, 23, 33, 170, 11, 103, 234, 110, 154, 148, 14, 19, 75, 17, 183, 120, 16, 172, 106, 174, 232, 1, 136, 11, 20, 111, 177, 136, 252, 56, 173, 192, 127, 17, 134, 31, 130, 55, 184, 44, 97, 144, 26 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 252, 113, 1, 132, 185, 3, 119, 182, 175, 109, 202, 4, 97, 212, 32, 203, 175, 181, 221, 61, 227, 74, 118, 220, 228, 126, 122, 121, 211, 76, 199, 111, 88, 183, 120, 83, 198, 41, 17, 18, 194, 240, 106, 131, 142, 186, 7, 16, 58, 44, 115, 150, 29, 78, 37, 160, 96, 73, 13, 195, 63, 225, 22, 68 },
                            PasswordSalt = new byte[] { 29, 252, 222, 133, 47, 55, 184, 94, 207, 100, 80, 105, 73, 41, 128, 38, 28, 67, 99, 142, 92, 193, 104, 99, 72, 218, 102, 184, 19, 230, 144, 172, 11, 232, 30, 165, 125, 11, 57, 99, 212, 139, 221, 28, 59, 247, 253, 80, 46, 154, 152, 129, 148, 121, 62, 123, 199, 56, 120, 92, 122, 83, 168, 24, 180, 236, 7, 172, 163, 22, 211, 143, 13, 14, 146, 215, 22, 157, 225, 204, 133, 236, 49, 134, 180, 99, 23, 33, 170, 11, 103, 234, 110, 154, 148, 14, 19, 75, 17, 183, 120, 16, 172, 106, 174, 232, 1, 136, 11, 20, 111, 177, 136, 252, 56, 173, 192, 127, 17, 134, 31, 130, 55, 184, 44, 97, 144, 26 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            Password = "client123",
                            PasswordHash = new byte[] { 252, 113, 1, 132, 185, 3, 119, 182, 175, 109, 202, 4, 97, 212, 32, 203, 175, 181, 221, 61, 227, 74, 118, 220, 228, 126, 122, 121, 211, 76, 199, 111, 88, 183, 120, 83, 198, 41, 17, 18, 194, 240, 106, 131, 142, 186, 7, 16, 58, 44, 115, 150, 29, 78, 37, 160, 96, 73, 13, 195, 63, 225, 22, 68 },
                            PasswordSalt = new byte[] { 29, 252, 222, 133, 47, 55, 184, 94, 207, 100, 80, 105, 73, 41, 128, 38, 28, 67, 99, 142, 92, 193, 104, 99, 72, 218, 102, 184, 19, 230, 144, 172, 11, 232, 30, 165, 125, 11, 57, 99, 212, 139, 221, 28, 59, 247, 253, 80, 46, 154, 152, 129, 148, 121, 62, 123, 199, 56, 120, 92, 122, 83, 168, 24, 180, 236, 7, 172, 163, 22, 211, 143, 13, 14, 146, 215, 22, 157, 225, 204, 133, 236, 49, 134, 180, 99, 23, 33, 170, 11, 103, 234, 110, 154, 148, 14, 19, 75, 17, 183, 120, 16, 172, 106, 174, 232, 1, 136, 11, 20, 111, 177, 136, 252, 56, 173, 192, 127, 17, 134, 31, 130, 55, 184, 44, 97, 144, 26 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("244ef9b4-dcef-4802-8c75-a372100fbdaf"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("11e1070b-ec60-4675-a735-a932a4396a79"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("38898710-26c3-4e60-8bd6-fff8eb4ca802"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("915a6eb0-a971-4f9c-ade2-d74916fd7b73"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("a5ef5b60-7572-46ac-9c6b-2ca8cce220aa"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("3b51703b-521e-473d-ace4-de0edfe5f93c"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("1d0f546a-db9f-4032-9d63-22d3d42d6262"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
