// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250508172955_AddUniqueConstraintToWaybillNumberOnParcel")]
    partial class AddUniqueConstraintToWaybillNumberOnParcel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e7b6721-7707-422e-bfc9-5ed326ae5df8"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("b968efbd-9902-43cc-8d22-f7310928919e"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("d8aa286a-d1b2-42ec-888f-c6128dcbc1f8"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("7feac365-2621-4628-9abe-927d082a1ffd"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("ad5217fb-bbfd-4a78-b5fd-41b730c179c0"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("5711642f-839f-40f2-a503-a47237a68723"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("b5e02260-931d-429c-ac76-e296dc4f8173"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("853a7091-8ce6-44da-8c86-6e4aebf5431a"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("38d55623-9cfd-47dc-a3c5-5a8201d4dc74"),
                            FirstName = "Charles",
                            Initials = "CM",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("3deee9fc-df26-4a88-b057-1b481fb3b2b6"),
                            FirstName = "James",
                            Initials = "JG",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .HasColumnType("text");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("WaybillNumber")
                        .IsUnique();

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            Password = "admin123",
                            PasswordHash = new byte[] { 69, 230, 100, 239, 55, 150, 58, 102, 159, 201, 20, 20, 242, 15, 16, 93, 169, 24, 34, 254, 254, 140, 98, 212, 213, 107, 12, 76, 138, 30, 232, 165, 209, 104, 181, 218, 157, 78, 167, 22, 221, 109, 73, 4, 198, 124, 208, 68, 53, 70, 93, 38, 34, 25, 169, 90, 81, 93, 19, 66, 6, 181, 34, 100 },
                            PasswordSalt = new byte[] { 30, 190, 111, 218, 166, 160, 114, 170, 152, 237, 22, 48, 14, 110, 190, 221, 194, 188, 96, 158, 249, 255, 117, 222, 12, 86, 182, 169, 151, 224, 101, 28, 247, 172, 16, 152, 141, 240, 105, 112, 228, 129, 229, 116, 207, 50, 123, 233, 128, 51, 88, 235, 228, 218, 91, 37, 182, 189, 82, 2, 73, 186, 60, 11, 35, 187, 128, 79, 228, 211, 63, 71, 106, 123, 61, 151, 5, 139, 18, 10, 139, 20, 67, 32, 57, 164, 70, 82, 83, 36, 35, 39, 93, 154, 2, 100, 253, 179, 187, 222, 151, 212, 105, 68, 237, 93, 58, 189, 142, 132, 59, 106, 154, 228, 30, 255, 250, 199, 249, 75, 251, 241, 217, 49, 55, 205, 187, 231 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            Password = "manager123",
                            PasswordHash = new byte[] { 69, 230, 100, 239, 55, 150, 58, 102, 159, 201, 20, 20, 242, 15, 16, 93, 169, 24, 34, 254, 254, 140, 98, 212, 213, 107, 12, 76, 138, 30, 232, 165, 209, 104, 181, 218, 157, 78, 167, 22, 221, 109, 73, 4, 198, 124, 208, 68, 53, 70, 93, 38, 34, 25, 169, 90, 81, 93, 19, 66, 6, 181, 34, 100 },
                            PasswordSalt = new byte[] { 30, 190, 111, 218, 166, 160, 114, 170, 152, 237, 22, 48, 14, 110, 190, 221, 194, 188, 96, 158, 249, 255, 117, 222, 12, 86, 182, 169, 151, 224, 101, 28, 247, 172, 16, 152, 141, 240, 105, 112, 228, 129, 229, 116, 207, 50, 123, 233, 128, 51, 88, 235, 228, 218, 91, 37, 182, 189, 82, 2, 73, 186, 60, 11, 35, 187, 128, 79, 228, 211, 63, 71, 106, 123, 61, 151, 5, 139, 18, 10, 139, 20, 67, 32, 57, 164, 70, 82, 83, 36, 35, 39, 93, 154, 2, 100, 253, 179, 187, 222, 151, 212, 105, 68, 237, 93, 58, 189, 142, 132, 59, 106, 154, 228, 30, 255, 250, 199, 249, 75, 251, 241, 217, 49, 55, 205, 187, 231 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 69, 230, 100, 239, 55, 150, 58, 102, 159, 201, 20, 20, 242, 15, 16, 93, 169, 24, 34, 254, 254, 140, 98, 212, 213, 107, 12, 76, 138, 30, 232, 165, 209, 104, 181, 218, 157, 78, 167, 22, 221, 109, 73, 4, 198, 124, 208, 68, 53, 70, 93, 38, 34, 25, 169, 90, 81, 93, 19, 66, 6, 181, 34, 100 },
                            PasswordSalt = new byte[] { 30, 190, 111, 218, 166, 160, 114, 170, 152, 237, 22, 48, 14, 110, 190, 221, 194, 188, 96, 158, 249, 255, 117, 222, 12, 86, 182, 169, 151, 224, 101, 28, 247, 172, 16, 152, 141, 240, 105, 112, 228, 129, 229, 116, 207, 50, 123, 233, 128, 51, 88, 235, 228, 218, 91, 37, 182, 189, 82, 2, 73, 186, 60, 11, 35, 187, 128, 79, 228, 211, 63, 71, 106, 123, 61, 151, 5, 139, 18, 10, 139, 20, 67, 32, 57, 164, 70, 82, 83, 36, 35, 39, 93, 154, 2, 100, 253, 179, 187, 222, 151, 212, 105, 68, 237, 93, 58, 189, 142, 132, 59, 106, 154, 228, 30, 255, 250, 199, 249, 75, 251, 241, 217, 49, 55, 205, 187, 231 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 69, 230, 100, 239, 55, 150, 58, 102, 159, 201, 20, 20, 242, 15, 16, 93, 169, 24, 34, 254, 254, 140, 98, 212, 213, 107, 12, 76, 138, 30, 232, 165, 209, 104, 181, 218, 157, 78, 167, 22, 221, 109, 73, 4, 198, 124, 208, 68, 53, 70, 93, 38, 34, 25, 169, 90, 81, 93, 19, 66, 6, 181, 34, 100 },
                            PasswordSalt = new byte[] { 30, 190, 111, 218, 166, 160, 114, 170, 152, 237, 22, 48, 14, 110, 190, 221, 194, 188, 96, 158, 249, 255, 117, 222, 12, 86, 182, 169, 151, 224, 101, 28, 247, 172, 16, 152, 141, 240, 105, 112, 228, 129, 229, 116, 207, 50, 123, 233, 128, 51, 88, 235, 228, 218, 91, 37, 182, 189, 82, 2, 73, 186, 60, 11, 35, 187, 128, 79, 228, 211, 63, 71, 106, 123, 61, 151, 5, 139, 18, 10, 139, 20, 67, 32, 57, 164, 70, 82, 83, 36, 35, 39, 93, 154, 2, 100, 253, 179, 187, 222, 151, 212, 105, 68, 237, 93, 58, 189, 142, 132, 59, 106, 154, 228, 30, 255, 250, 199, 249, 75, 251, 241, 217, 49, 55, 205, 187, 231 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            Password = "client123",
                            PasswordHash = new byte[] { 69, 230, 100, 239, 55, 150, 58, 102, 159, 201, 20, 20, 242, 15, 16, 93, 169, 24, 34, 254, 254, 140, 98, 212, 213, 107, 12, 76, 138, 30, 232, 165, 209, 104, 181, 218, 157, 78, 167, 22, 221, 109, 73, 4, 198, 124, 208, 68, 53, 70, 93, 38, 34, 25, 169, 90, 81, 93, 19, 66, 6, 181, 34, 100 },
                            PasswordSalt = new byte[] { 30, 190, 111, 218, 166, 160, 114, 170, 152, 237, 22, 48, 14, 110, 190, 221, 194, 188, 96, 158, 249, 255, 117, 222, 12, 86, 182, 169, 151, 224, 101, 28, 247, 172, 16, 152, 141, 240, 105, 112, 228, 129, 229, 116, 207, 50, 123, 233, 128, 51, 88, 235, 228, 218, 91, 37, 182, 189, 82, 2, 73, 186, 60, 11, 35, 187, 128, 79, 228, 211, 63, 71, 106, 123, 61, 151, 5, 139, 18, 10, 139, 20, 67, 32, 57, 164, 70, 82, 83, 36, 35, 39, 93, 154, 2, 100, 253, 179, 187, 222, 151, 212, 105, 68, 237, 93, 58, 189, 142, 132, 59, 106, 154, 228, 30, 255, 250, 199, 249, 75, 251, 241, 217, 49, 55, 205, 187, 231 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("298f6d68-f82a-4c75-a633-ddda65544101"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("3a0d96cd-9d48-46f8-afd9-64dcf7d55696"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("f04e7d37-2a2c-4549-a575-f794053489c9"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("c314bca0-212d-4ad7-a03a-fda881255b98"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("1329677b-2da9-4447-80ef-b3f690a0f104"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("a815f695-023b-4255-8fe6-be3c404b2f5f"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("91c167f1-0d1c-44e9-8ee0-c043668b69f0"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
