// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250428140910_AddNullableCreatedByToParcel")]
    partial class AddNullableCreatedByToParcel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf0df757-905d-431d-a145-531182e963a6"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("f6947c7f-b5ed-4a32-ab66-9e7fe34f9514"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("a79edbac-b264-4eb3-baf1-b5ab8cc80c1a"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("e1a154d3-e0c2-4094-b8e8-e3d5ce519f97"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("a6cfc2c8-8a04-43e4-9a39-2c22c329ed5e"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("b7d298c9-6af7-45d1-9555-704abd25279b"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("3681fac5-feae-4288-b106-17d4b88ed48e"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("bfe0eb56-f4f6-4451-8490-1aca0d0a3eea"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("591b9024-b83f-4304-870f-b6e40a3ba818"),
                            FirstName = "Charles",
                            Initials = "CM",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("463ab1c6-0e0f-43ee-9ab5-7e2d232c868f"),
                            FirstName = "James",
                            Initials = "JG",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            Password = "admin123",
                            PasswordHash = new byte[] { 221, 120, 35, 203, 52, 162, 84, 230, 67, 39, 69, 70, 4, 14, 89, 121, 61, 51, 133, 107, 155, 122, 81, 61, 64, 105, 0, 119, 29, 119, 5, 58, 107, 130, 207, 198, 224, 178, 17, 190, 217, 72, 92, 43, 241, 41, 238, 200, 210, 69, 238, 177, 48, 189, 167, 181, 253, 2, 248, 171, 4, 142, 84, 116 },
                            PasswordSalt = new byte[] { 175, 238, 174, 14, 106, 68, 78, 71, 237, 54, 30, 173, 153, 236, 254, 48, 225, 34, 24, 86, 107, 3, 175, 18, 105, 38, 84, 208, 94, 122, 176, 160, 41, 155, 150, 120, 82, 233, 223, 79, 144, 222, 232, 112, 39, 44, 98, 16, 178, 223, 53, 238, 120, 95, 209, 70, 50, 198, 10, 249, 34, 74, 141, 179, 132, 56, 105, 125, 106, 243, 151, 39, 225, 242, 142, 225, 47, 147, 35, 146, 150, 132, 186, 134, 117, 189, 50, 142, 146, 228, 79, 123, 152, 46, 99, 123, 75, 23, 155, 140, 189, 241, 8, 196, 96, 55, 47, 214, 110, 67, 184, 14, 124, 115, 213, 190, 169, 116, 171, 177, 231, 234, 188, 241, 10, 79, 54, 226 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            Password = "manager123",
                            PasswordHash = new byte[] { 221, 120, 35, 203, 52, 162, 84, 230, 67, 39, 69, 70, 4, 14, 89, 121, 61, 51, 133, 107, 155, 122, 81, 61, 64, 105, 0, 119, 29, 119, 5, 58, 107, 130, 207, 198, 224, 178, 17, 190, 217, 72, 92, 43, 241, 41, 238, 200, 210, 69, 238, 177, 48, 189, 167, 181, 253, 2, 248, 171, 4, 142, 84, 116 },
                            PasswordSalt = new byte[] { 175, 238, 174, 14, 106, 68, 78, 71, 237, 54, 30, 173, 153, 236, 254, 48, 225, 34, 24, 86, 107, 3, 175, 18, 105, 38, 84, 208, 94, 122, 176, 160, 41, 155, 150, 120, 82, 233, 223, 79, 144, 222, 232, 112, 39, 44, 98, 16, 178, 223, 53, 238, 120, 95, 209, 70, 50, 198, 10, 249, 34, 74, 141, 179, 132, 56, 105, 125, 106, 243, 151, 39, 225, 242, 142, 225, 47, 147, 35, 146, 150, 132, 186, 134, 117, 189, 50, 142, 146, 228, 79, 123, 152, 46, 99, 123, 75, 23, 155, 140, 189, 241, 8, 196, 96, 55, 47, 214, 110, 67, 184, 14, 124, 115, 213, 190, 169, 116, 171, 177, 231, 234, 188, 241, 10, 79, 54, 226 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 221, 120, 35, 203, 52, 162, 84, 230, 67, 39, 69, 70, 4, 14, 89, 121, 61, 51, 133, 107, 155, 122, 81, 61, 64, 105, 0, 119, 29, 119, 5, 58, 107, 130, 207, 198, 224, 178, 17, 190, 217, 72, 92, 43, 241, 41, 238, 200, 210, 69, 238, 177, 48, 189, 167, 181, 253, 2, 248, 171, 4, 142, 84, 116 },
                            PasswordSalt = new byte[] { 175, 238, 174, 14, 106, 68, 78, 71, 237, 54, 30, 173, 153, 236, 254, 48, 225, 34, 24, 86, 107, 3, 175, 18, 105, 38, 84, 208, 94, 122, 176, 160, 41, 155, 150, 120, 82, 233, 223, 79, 144, 222, 232, 112, 39, 44, 98, 16, 178, 223, 53, 238, 120, 95, 209, 70, 50, 198, 10, 249, 34, 74, 141, 179, 132, 56, 105, 125, 106, 243, 151, 39, 225, 242, 142, 225, 47, 147, 35, 146, 150, 132, 186, 134, 117, 189, 50, 142, 146, 228, 79, 123, 152, 46, 99, 123, 75, 23, 155, 140, 189, 241, 8, 196, 96, 55, 47, 214, 110, 67, 184, 14, 124, 115, 213, 190, 169, 116, 171, 177, 231, 234, 188, 241, 10, 79, 54, 226 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 221, 120, 35, 203, 52, 162, 84, 230, 67, 39, 69, 70, 4, 14, 89, 121, 61, 51, 133, 107, 155, 122, 81, 61, 64, 105, 0, 119, 29, 119, 5, 58, 107, 130, 207, 198, 224, 178, 17, 190, 217, 72, 92, 43, 241, 41, 238, 200, 210, 69, 238, 177, 48, 189, 167, 181, 253, 2, 248, 171, 4, 142, 84, 116 },
                            PasswordSalt = new byte[] { 175, 238, 174, 14, 106, 68, 78, 71, 237, 54, 30, 173, 153, 236, 254, 48, 225, 34, 24, 86, 107, 3, 175, 18, 105, 38, 84, 208, 94, 122, 176, 160, 41, 155, 150, 120, 82, 233, 223, 79, 144, 222, 232, 112, 39, 44, 98, 16, 178, 223, 53, 238, 120, 95, 209, 70, 50, 198, 10, 249, 34, 74, 141, 179, 132, 56, 105, 125, 106, 243, 151, 39, 225, 242, 142, 225, 47, 147, 35, 146, 150, 132, 186, 134, 117, 189, 50, 142, 146, 228, 79, 123, 152, 46, 99, 123, 75, 23, 155, 140, 189, 241, 8, 196, 96, 55, 47, 214, 110, 67, 184, 14, 124, 115, 213, 190, 169, 116, 171, 177, 231, 234, 188, 241, 10, 79, 54, 226 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            Password = "client123",
                            PasswordHash = new byte[] { 221, 120, 35, 203, 52, 162, 84, 230, 67, 39, 69, 70, 4, 14, 89, 121, 61, 51, 133, 107, 155, 122, 81, 61, 64, 105, 0, 119, 29, 119, 5, 58, 107, 130, 207, 198, 224, 178, 17, 190, 217, 72, 92, 43, 241, 41, 238, 200, 210, 69, 238, 177, 48, 189, 167, 181, 253, 2, 248, 171, 4, 142, 84, 116 },
                            PasswordSalt = new byte[] { 175, 238, 174, 14, 106, 68, 78, 71, 237, 54, 30, 173, 153, 236, 254, 48, 225, 34, 24, 86, 107, 3, 175, 18, 105, 38, 84, 208, 94, 122, 176, 160, 41, 155, 150, 120, 82, 233, 223, 79, 144, 222, 232, 112, 39, 44, 98, 16, 178, 223, 53, 238, 120, 95, 209, 70, 50, 198, 10, 249, 34, 74, 141, 179, 132, 56, 105, 125, 106, 243, 151, 39, 225, 242, 142, 225, 47, 147, 35, 146, 150, 132, 186, 134, 117, 189, 50, 142, 146, 228, 79, 123, 152, 46, 99, 123, 75, 23, 155, 140, 189, 241, 8, 196, 96, 55, 47, 214, 110, 67, 184, 14, 124, 115, 213, 190, 169, 116, 171, 177, 231, 234, 188, 241, 10, 79, 54, 226 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23b0d6eb-150a-42c4-9f38-b47e4ce04282"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("4a6de2d8-7a9c-4385-a0c7-4ca35704abf0"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("b7e4fe3d-261c-4a6d-a13a-42c8024d4ffa"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("c6e7633f-18aa-4345-9805-8aefeb51d898"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("5f95bcf7-dbab-4b35-ba61-c6bceaef9ded"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("59c5589b-2cc6-4741-ad21-78cc6a0f7592"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("9db37f6b-98eb-42e1-b0ef-462c6f700b4b"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
