// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250218140648_UpdateParcelRequiredFields")]
    partial class UpdateParcelRequiredFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16f3495e-e38a-4237-bf94-35b5fe1985e5"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("9c6d8dd6-197c-4133-bd70-e9fb0ca7e5df"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("c7b0cb6b-d545-4935-ae4e-36896dcff509"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("9774bbc5-e173-4427-a969-cb72ef667051"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("d69540b3-fefa-4414-8da6-ec6a74c81c40"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("ee642ac8-c869-413e-8faa-6bcb6e192ca6"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("6929d93b-4b2c-45c0-8f81-9dc7f515fd10"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("c193ba8f-2b26-40fb-8b8b-d2aeac9b834c"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("ea79041f-4c53-495e-8b61-bc60ea8d6775"),
                            FirstName = "Charles",
                            Initials = "CM",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("d25fd8aa-425a-436a-a9cc-f6c9a4275d62"),
                            FirstName = "James",
                            Initials = "JG",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            Password = "admin123",
                            PasswordHash = new byte[] { 47, 24, 13, 93, 113, 25, 37, 228, 115, 61, 107, 243, 2, 164, 246, 73, 76, 130, 234, 99, 169, 62, 94, 165, 184, 138, 157, 122, 9, 162, 17, 23, 176, 145, 196, 243, 102, 82, 205, 113, 244, 140, 23, 54, 214, 58, 3, 231, 26, 65, 136, 34, 28, 168, 33, 143, 208, 163, 156, 191, 118, 198, 20, 42 },
                            PasswordSalt = new byte[] { 218, 158, 225, 208, 99, 48, 254, 9, 99, 19, 11, 113, 130, 221, 224, 195, 53, 212, 166, 136, 110, 207, 149, 165, 250, 215, 61, 180, 8, 253, 225, 187, 65, 96, 165, 168, 126, 47, 117, 195, 7, 123, 87, 253, 32, 91, 36, 13, 205, 97, 106, 190, 212, 217, 202, 39, 5, 193, 150, 4, 70, 233, 172, 152, 105, 85, 82, 171, 81, 249, 144, 132, 184, 163, 174, 67, 27, 78, 172, 118, 2, 155, 51, 127, 73, 133, 65, 101, 30, 54, 64, 224, 78, 145, 3, 165, 135, 102, 143, 99, 67, 175, 166, 43, 193, 84, 138, 116, 120, 229, 156, 175, 51, 108, 151, 230, 241, 250, 78, 91, 53, 255, 28, 15, 155, 149, 91, 245 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            Password = "manager123",
                            PasswordHash = new byte[] { 47, 24, 13, 93, 113, 25, 37, 228, 115, 61, 107, 243, 2, 164, 246, 73, 76, 130, 234, 99, 169, 62, 94, 165, 184, 138, 157, 122, 9, 162, 17, 23, 176, 145, 196, 243, 102, 82, 205, 113, 244, 140, 23, 54, 214, 58, 3, 231, 26, 65, 136, 34, 28, 168, 33, 143, 208, 163, 156, 191, 118, 198, 20, 42 },
                            PasswordSalt = new byte[] { 218, 158, 225, 208, 99, 48, 254, 9, 99, 19, 11, 113, 130, 221, 224, 195, 53, 212, 166, 136, 110, 207, 149, 165, 250, 215, 61, 180, 8, 253, 225, 187, 65, 96, 165, 168, 126, 47, 117, 195, 7, 123, 87, 253, 32, 91, 36, 13, 205, 97, 106, 190, 212, 217, 202, 39, 5, 193, 150, 4, 70, 233, 172, 152, 105, 85, 82, 171, 81, 249, 144, 132, 184, 163, 174, 67, 27, 78, 172, 118, 2, 155, 51, 127, 73, 133, 65, 101, 30, 54, 64, 224, 78, 145, 3, 165, 135, 102, 143, 99, 67, 175, 166, 43, 193, 84, 138, 116, 120, 229, 156, 175, 51, 108, 151, 230, 241, 250, 78, 91, 53, 255, 28, 15, 155, 149, 91, 245 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 47, 24, 13, 93, 113, 25, 37, 228, 115, 61, 107, 243, 2, 164, 246, 73, 76, 130, 234, 99, 169, 62, 94, 165, 184, 138, 157, 122, 9, 162, 17, 23, 176, 145, 196, 243, 102, 82, 205, 113, 244, 140, 23, 54, 214, 58, 3, 231, 26, 65, 136, 34, 28, 168, 33, 143, 208, 163, 156, 191, 118, 198, 20, 42 },
                            PasswordSalt = new byte[] { 218, 158, 225, 208, 99, 48, 254, 9, 99, 19, 11, 113, 130, 221, 224, 195, 53, 212, 166, 136, 110, 207, 149, 165, 250, 215, 61, 180, 8, 253, 225, 187, 65, 96, 165, 168, 126, 47, 117, 195, 7, 123, 87, 253, 32, 91, 36, 13, 205, 97, 106, 190, 212, 217, 202, 39, 5, 193, 150, 4, 70, 233, 172, 152, 105, 85, 82, 171, 81, 249, 144, 132, 184, 163, 174, 67, 27, 78, 172, 118, 2, 155, 51, 127, 73, 133, 65, 101, 30, 54, 64, 224, 78, 145, 3, 165, 135, 102, 143, 99, 67, 175, 166, 43, 193, 84, 138, 116, 120, 229, 156, 175, 51, 108, 151, 230, 241, 250, 78, 91, 53, 255, 28, 15, 155, 149, 91, 245 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 47, 24, 13, 93, 113, 25, 37, 228, 115, 61, 107, 243, 2, 164, 246, 73, 76, 130, 234, 99, 169, 62, 94, 165, 184, 138, 157, 122, 9, 162, 17, 23, 176, 145, 196, 243, 102, 82, 205, 113, 244, 140, 23, 54, 214, 58, 3, 231, 26, 65, 136, 34, 28, 168, 33, 143, 208, 163, 156, 191, 118, 198, 20, 42 },
                            PasswordSalt = new byte[] { 218, 158, 225, 208, 99, 48, 254, 9, 99, 19, 11, 113, 130, 221, 224, 195, 53, 212, 166, 136, 110, 207, 149, 165, 250, 215, 61, 180, 8, 253, 225, 187, 65, 96, 165, 168, 126, 47, 117, 195, 7, 123, 87, 253, 32, 91, 36, 13, 205, 97, 106, 190, 212, 217, 202, 39, 5, 193, 150, 4, 70, 233, 172, 152, 105, 85, 82, 171, 81, 249, 144, 132, 184, 163, 174, 67, 27, 78, 172, 118, 2, 155, 51, 127, 73, 133, 65, 101, 30, 54, 64, 224, 78, 145, 3, 165, 135, 102, 143, 99, 67, 175, 166, 43, 193, 84, 138, 116, 120, 229, 156, 175, 51, 108, 151, 230, 241, 250, 78, 91, 53, 255, 28, 15, 155, 149, 91, 245 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            Password = "client123",
                            PasswordHash = new byte[] { 47, 24, 13, 93, 113, 25, 37, 228, 115, 61, 107, 243, 2, 164, 246, 73, 76, 130, 234, 99, 169, 62, 94, 165, 184, 138, 157, 122, 9, 162, 17, 23, 176, 145, 196, 243, 102, 82, 205, 113, 244, 140, 23, 54, 214, 58, 3, 231, 26, 65, 136, 34, 28, 168, 33, 143, 208, 163, 156, 191, 118, 198, 20, 42 },
                            PasswordSalt = new byte[] { 218, 158, 225, 208, 99, 48, 254, 9, 99, 19, 11, 113, 130, 221, 224, 195, 53, 212, 166, 136, 110, 207, 149, 165, 250, 215, 61, 180, 8, 253, 225, 187, 65, 96, 165, 168, 126, 47, 117, 195, 7, 123, 87, 253, 32, 91, 36, 13, 205, 97, 106, 190, 212, 217, 202, 39, 5, 193, 150, 4, 70, 233, 172, 152, 105, 85, 82, 171, 81, 249, 144, 132, 184, 163, 174, 67, 27, 78, 172, 118, 2, 155, 51, 127, 73, 133, 65, 101, 30, 54, 64, 224, 78, 145, 3, 165, 135, 102, 143, 99, 67, 175, 166, 43, 193, 84, 138, 116, 120, 229, 156, 175, 51, 108, 151, 230, 241, 250, 78, 91, 53, 255, 28, 15, 155, 149, 91, 245 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("50da6c22-a65a-4a16-a931-7da5aacd298b"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("c45b2ba7-b7d8-4952-acdb-8c15108fa389"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("40f50160-ef5b-47d7-8278-c89fe83ae420"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("cc81e350-d8f7-458e-bffe-ecc5415d4795"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("1fa2f85c-5a44-4fd5-bd05-b8a22d5429b2"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("bd180c0f-7c7e-4731-8705-563aeff7c3ef"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("a9c675e9-a130-49b3-9085-0c591e98a027"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
