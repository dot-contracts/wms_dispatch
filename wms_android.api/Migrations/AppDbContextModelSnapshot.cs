// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("31cf2ffc-bfb7-4159-b49e-14144b60a8c3"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("a9577d0b-78ed-42a0-9827-fc33e429ea7b"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("6d2560e2-9a3d-44e2-ad62-fc11a726d622"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("a90874f4-dda9-4456-a16d-2e668795443f"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("7bc4637a-9aef-4900-8fed-0c5a1ac64e8c"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("ff7b4ea2-d6c9-4487-82f6-dde1f74ab013"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("63b3bc50-0c2f-427a-bd92-2ee71bbb8c80"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("1f79a484-ecd5-40fc-becd-d0190aac0371"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("8a3947c8-0ba9-4f9c-ab58-bc18458d1d1e"),
                            FirstName = "Charles",
                            Initials = "CM",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("d9a073e9-13aa-4dad-b5e4-50a0324badea"),
                            FirstName = "James",
                            Initials = "JG",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            Password = "admin123",
                            PasswordHash = new byte[] { 212, 11, 140, 206, 165, 108, 65, 20, 204, 234, 1, 199, 97, 223, 223, 10, 189, 116, 39, 119, 28, 51, 26, 199, 116, 35, 233, 135, 230, 56, 27, 106, 105, 8, 18, 175, 2, 28, 184, 238, 94, 69, 85, 202, 135, 45, 149, 195, 5, 164, 164, 177, 86, 34, 5, 188, 173, 115, 173, 30, 89, 230, 162, 2 },
                            PasswordSalt = new byte[] { 237, 90, 47, 184, 253, 46, 147, 129, 82, 196, 27, 209, 148, 101, 188, 223, 213, 133, 217, 193, 138, 215, 84, 60, 133, 171, 167, 123, 237, 80, 221, 250, 251, 28, 239, 146, 60, 17, 87, 21, 125, 5, 42, 88, 117, 61, 240, 60, 116, 96, 118, 62, 76, 186, 129, 76, 247, 129, 9, 179, 63, 72, 127, 2, 131, 147, 101, 98, 50, 56, 150, 241, 110, 224, 64, 53, 132, 227, 83, 36, 38, 188, 182, 2, 162, 145, 206, 52, 144, 50, 80, 118, 229, 99, 65, 98, 248, 131, 4, 252, 79, 249, 244, 247, 149, 204, 173, 180, 192, 242, 34, 46, 174, 159, 174, 174, 186, 205, 67, 191, 77, 250, 33, 41, 170, 218, 106, 199 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            Password = "manager123",
                            PasswordHash = new byte[] { 212, 11, 140, 206, 165, 108, 65, 20, 204, 234, 1, 199, 97, 223, 223, 10, 189, 116, 39, 119, 28, 51, 26, 199, 116, 35, 233, 135, 230, 56, 27, 106, 105, 8, 18, 175, 2, 28, 184, 238, 94, 69, 85, 202, 135, 45, 149, 195, 5, 164, 164, 177, 86, 34, 5, 188, 173, 115, 173, 30, 89, 230, 162, 2 },
                            PasswordSalt = new byte[] { 237, 90, 47, 184, 253, 46, 147, 129, 82, 196, 27, 209, 148, 101, 188, 223, 213, 133, 217, 193, 138, 215, 84, 60, 133, 171, 167, 123, 237, 80, 221, 250, 251, 28, 239, 146, 60, 17, 87, 21, 125, 5, 42, 88, 117, 61, 240, 60, 116, 96, 118, 62, 76, 186, 129, 76, 247, 129, 9, 179, 63, 72, 127, 2, 131, 147, 101, 98, 50, 56, 150, 241, 110, 224, 64, 53, 132, 227, 83, 36, 38, 188, 182, 2, 162, 145, 206, 52, 144, 50, 80, 118, 229, 99, 65, 98, 248, 131, 4, 252, 79, 249, 244, 247, 149, 204, 173, 180, 192, 242, 34, 46, 174, 159, 174, 174, 186, 205, 67, 191, 77, 250, 33, 41, 170, 218, 106, 199 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 212, 11, 140, 206, 165, 108, 65, 20, 204, 234, 1, 199, 97, 223, 223, 10, 189, 116, 39, 119, 28, 51, 26, 199, 116, 35, 233, 135, 230, 56, 27, 106, 105, 8, 18, 175, 2, 28, 184, 238, 94, 69, 85, 202, 135, 45, 149, 195, 5, 164, 164, 177, 86, 34, 5, 188, 173, 115, 173, 30, 89, 230, 162, 2 },
                            PasswordSalt = new byte[] { 237, 90, 47, 184, 253, 46, 147, 129, 82, 196, 27, 209, 148, 101, 188, 223, 213, 133, 217, 193, 138, 215, 84, 60, 133, 171, 167, 123, 237, 80, 221, 250, 251, 28, 239, 146, 60, 17, 87, 21, 125, 5, 42, 88, 117, 61, 240, 60, 116, 96, 118, 62, 76, 186, 129, 76, 247, 129, 9, 179, 63, 72, 127, 2, 131, 147, 101, 98, 50, 56, 150, 241, 110, 224, 64, 53, 132, 227, 83, 36, 38, 188, 182, 2, 162, 145, 206, 52, 144, 50, 80, 118, 229, 99, 65, 98, 248, 131, 4, 252, 79, 249, 244, 247, 149, 204, 173, 180, 192, 242, 34, 46, 174, 159, 174, 174, 186, 205, 67, 191, 77, 250, 33, 41, 170, 218, 106, 199 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 212, 11, 140, 206, 165, 108, 65, 20, 204, 234, 1, 199, 97, 223, 223, 10, 189, 116, 39, 119, 28, 51, 26, 199, 116, 35, 233, 135, 230, 56, 27, 106, 105, 8, 18, 175, 2, 28, 184, 238, 94, 69, 85, 202, 135, 45, 149, 195, 5, 164, 164, 177, 86, 34, 5, 188, 173, 115, 173, 30, 89, 230, 162, 2 },
                            PasswordSalt = new byte[] { 237, 90, 47, 184, 253, 46, 147, 129, 82, 196, 27, 209, 148, 101, 188, 223, 213, 133, 217, 193, 138, 215, 84, 60, 133, 171, 167, 123, 237, 80, 221, 250, 251, 28, 239, 146, 60, 17, 87, 21, 125, 5, 42, 88, 117, 61, 240, 60, 116, 96, 118, 62, 76, 186, 129, 76, 247, 129, 9, 179, 63, 72, 127, 2, 131, 147, 101, 98, 50, 56, 150, 241, 110, 224, 64, 53, 132, 227, 83, 36, 38, 188, 182, 2, 162, 145, 206, 52, 144, 50, 80, 118, 229, 99, 65, 98, 248, 131, 4, 252, 79, 249, 244, 247, 149, 204, 173, 180, 192, 242, 34, 46, 174, 159, 174, 174, 186, 205, 67, 191, 77, 250, 33, 41, 170, 218, 106, 199 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            Password = "client123",
                            PasswordHash = new byte[] { 212, 11, 140, 206, 165, 108, 65, 20, 204, 234, 1, 199, 97, 223, 223, 10, 189, 116, 39, 119, 28, 51, 26, 199, 116, 35, 233, 135, 230, 56, 27, 106, 105, 8, 18, 175, 2, 28, 184, 238, 94, 69, 85, 202, 135, 45, 149, 195, 5, 164, 164, 177, 86, 34, 5, 188, 173, 115, 173, 30, 89, 230, 162, 2 },
                            PasswordSalt = new byte[] { 237, 90, 47, 184, 253, 46, 147, 129, 82, 196, 27, 209, 148, 101, 188, 223, 213, 133, 217, 193, 138, 215, 84, 60, 133, 171, 167, 123, 237, 80, 221, 250, 251, 28, 239, 146, 60, 17, 87, 21, 125, 5, 42, 88, 117, 61, 240, 60, 116, 96, 118, 62, 76, 186, 129, 76, 247, 129, 9, 179, 63, 72, 127, 2, 131, 147, 101, 98, 50, 56, 150, 241, 110, 224, 64, 53, 132, 227, 83, 36, 38, 188, 182, 2, 162, 145, 206, 52, 144, 50, 80, 118, 229, 99, 65, 98, 248, 131, 4, 252, 79, 249, 244, 247, 149, 204, 173, 180, 192, 242, 34, 46, 174, 159, 174, 174, 186, 205, 67, 191, 77, 250, 33, 41, 170, 218, 106, 199 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6ebdf843-852c-4500-a5d7-2da30c5c25f3"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("bf0423ca-b501-4b90-8828-9d485be0b51b"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("25fd0e09-1386-4645-8d37-0a36b1460ccb"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("401602aa-c11d-4a45-8c63-beb2c2f4e40e"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("32351ee0-df50-4258-b2ee-6016e94978bc"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("b5b08316-57e4-410b-a3b4-6014aefffe1d"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("d427c237-51a4-48b4-baea-ab96485edeee"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
