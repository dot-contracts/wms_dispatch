// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DispatchParcel", b =>
                {
                    b.Property<Guid>("DispatchId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ParcelsId")
                        .HasColumnType("uuid");

                    b.HasKey("DispatchId", "ParcelsId");

                    b.HasIndex("ParcelsId");

                    b.ToTable("DispatchParcels", (string)null);
                });

            modelBuilder.Entity("wms_android.shared.Models.Dispatch", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DispatchTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Driver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<Guid>>("ParcelIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<string>("SourceBranch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Dispatches");
                });

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b326712b-3441-471f-a543-277f33e86178"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("30d51f0f-54de-4454-8c3c-dbc99806fab6"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("5ee43824-0baf-476a-aa4c-1da4809a6445"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("e3e8e9d9-2b67-4666-92a8-632fcddfb158"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("5a4d2134-4a43-45c7-8bd3-a3a1950142cf"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("8db9bab8-c49d-403e-8205-ed9d392e0e88"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("868e7357-716e-4fbb-a3b2-804648b0b8d9"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("44bf5f67-3f52-4dae-8654-0c709fce02c0"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("85745d39-c20e-409b-8a8e-16ab7e28de79"),
                            FirstName = "Charles",
                            Initials = "CM",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("560208a4-dd4f-466e-882b-de9baed6da97"),
                            FirstName = "James",
                            Initials = "JG",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorLastNameSnapshot")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .HasColumnType("text");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ShipmentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorLastNameSnapshot")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WaybillNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("WaybillNumber")
                        .IsUnique();

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            LastName = "User",
                            PasswordHash = new byte[] { 152, 188, 5, 135, 85, 137, 91, 2, 182, 239, 133, 18, 174, 200, 95, 163, 10, 22, 99, 65, 140, 254, 218, 160, 49, 196, 67, 235, 129, 16, 179, 191, 154, 188, 75, 100, 251, 222, 189, 40, 146, 244, 85, 61, 171, 110, 60, 251, 68, 111, 163, 98, 17, 3, 84, 99, 187, 222, 79, 209, 104, 97, 32, 129 },
                            PasswordSalt = new byte[] { 209, 152, 30, 185, 239, 33, 78, 228, 44, 89, 57, 13, 8, 54, 75, 120, 235, 236, 214, 219, 221, 40, 226, 143, 97, 194, 37, 90, 204, 63, 45, 43, 238, 93, 163, 81, 250, 134, 37, 97, 156, 69, 40, 7, 173, 253, 241, 196, 205, 64, 100, 245, 220, 152, 38, 220, 114, 144, 169, 194, 105, 246, 211, 14, 199, 65, 9, 206, 177, 125, 218, 30, 30, 42, 172, 62, 93, 170, 82, 125, 229, 95, 45, 126, 229, 239, 150, 253, 126, 87, 64, 51, 42, 63, 38, 143, 117, 137, 77, 128, 214, 203, 202, 149, 30, 70, 243, 66, 252, 77, 132, 29, 143, 137, 67, 0, 148, 147, 248, 37, 64, 149, 231, 135, 254, 181, 182, 180 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            FirstName = "Manager",
                            LastName = "Person",
                            PasswordHash = new byte[] { 152, 188, 5, 135, 85, 137, 91, 2, 182, 239, 133, 18, 174, 200, 95, 163, 10, 22, 99, 65, 140, 254, 218, 160, 49, 196, 67, 235, 129, 16, 179, 191, 154, 188, 75, 100, 251, 222, 189, 40, 146, 244, 85, 61, 171, 110, 60, 251, 68, 111, 163, 98, 17, 3, 84, 99, 187, 222, 79, 209, 104, 97, 32, 129 },
                            PasswordSalt = new byte[] { 209, 152, 30, 185, 239, 33, 78, 228, 44, 89, 57, 13, 8, 54, 75, 120, 235, 236, 214, 219, 221, 40, 226, 143, 97, 194, 37, 90, 204, 63, 45, 43, 238, 93, 163, 81, 250, 134, 37, 97, 156, 69, 40, 7, 173, 253, 241, 196, 205, 64, 100, 245, 220, 152, 38, 220, 114, 144, 169, 194, 105, 246, 211, 14, 199, 65, 9, 206, 177, 125, 218, 30, 30, 42, 172, 62, 93, 170, 82, 125, 229, 95, 45, 126, 229, 239, 150, 253, 126, 87, 64, 51, 42, 63, 38, 143, 117, 137, 77, 128, 214, 203, 202, 149, 30, 70, 243, 66, 252, 77, 132, 29, 143, 137, 67, 0, 148, 147, 248, 37, 64, 149, 231, 135, 254, 181, 182, 180 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            FirstName = "Clerk",
                            LastName = "One",
                            PasswordHash = new byte[] { 152, 188, 5, 135, 85, 137, 91, 2, 182, 239, 133, 18, 174, 200, 95, 163, 10, 22, 99, 65, 140, 254, 218, 160, 49, 196, 67, 235, 129, 16, 179, 191, 154, 188, 75, 100, 251, 222, 189, 40, 146, 244, 85, 61, 171, 110, 60, 251, 68, 111, 163, 98, 17, 3, 84, 99, 187, 222, 79, 209, 104, 97, 32, 129 },
                            PasswordSalt = new byte[] { 209, 152, 30, 185, 239, 33, 78, 228, 44, 89, 57, 13, 8, 54, 75, 120, 235, 236, 214, 219, 221, 40, 226, 143, 97, 194, 37, 90, 204, 63, 45, 43, 238, 93, 163, 81, 250, 134, 37, 97, 156, 69, 40, 7, 173, 253, 241, 196, 205, 64, 100, 245, 220, 152, 38, 220, 114, 144, 169, 194, 105, 246, 211, 14, 199, 65, 9, 206, 177, 125, 218, 30, 30, 42, 172, 62, 93, 170, 82, 125, 229, 95, 45, 126, 229, 239, 150, 253, 126, 87, 64, 51, 42, 63, 38, 143, 117, 137, 77, 128, 214, 203, 202, 149, 30, 70, 243, 66, 252, 77, 132, 29, 143, 137, 67, 0, 148, 147, 248, 37, 64, 149, 231, 135, 254, 181, 182, 180 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            FirstName = "Clerk",
                            LastName = "Two",
                            PasswordHash = new byte[] { 152, 188, 5, 135, 85, 137, 91, 2, 182, 239, 133, 18, 174, 200, 95, 163, 10, 22, 99, 65, 140, 254, 218, 160, 49, 196, 67, 235, 129, 16, 179, 191, 154, 188, 75, 100, 251, 222, 189, 40, 146, 244, 85, 61, 171, 110, 60, 251, 68, 111, 163, 98, 17, 3, 84, 99, 187, 222, 79, 209, 104, 97, 32, 129 },
                            PasswordSalt = new byte[] { 209, 152, 30, 185, 239, 33, 78, 228, 44, 89, 57, 13, 8, 54, 75, 120, 235, 236, 214, 219, 221, 40, 226, 143, 97, 194, 37, 90, 204, 63, 45, 43, 238, 93, 163, 81, 250, 134, 37, 97, 156, 69, 40, 7, 173, 253, 241, 196, 205, 64, 100, 245, 220, 152, 38, 220, 114, 144, 169, 194, 105, 246, 211, 14, 199, 65, 9, 206, 177, 125, 218, 30, 30, 42, 172, 62, 93, 170, 82, 125, 229, 95, 45, 126, 229, 239, 150, 253, 126, 87, 64, 51, 42, 63, 38, 143, 117, 137, 77, 128, 214, 203, 202, 149, 30, 70, 243, 66, 252, 77, 132, 29, 143, 137, 67, 0, 148, 147, 248, 37, 64, 149, 231, 135, 254, 181, 182, 180 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            FirstName = "Client",
                            LastName = "UserOne",
                            PasswordHash = new byte[] { 152, 188, 5, 135, 85, 137, 91, 2, 182, 239, 133, 18, 174, 200, 95, 163, 10, 22, 99, 65, 140, 254, 218, 160, 49, 196, 67, 235, 129, 16, 179, 191, 154, 188, 75, 100, 251, 222, 189, 40, 146, 244, 85, 61, 171, 110, 60, 251, 68, 111, 163, 98, 17, 3, 84, 99, 187, 222, 79, 209, 104, 97, 32, 129 },
                            PasswordSalt = new byte[] { 209, 152, 30, 185, 239, 33, 78, 228, 44, 89, 57, 13, 8, 54, 75, 120, 235, 236, 214, 219, 221, 40, 226, 143, 97, 194, 37, 90, 204, 63, 45, 43, 238, 93, 163, 81, 250, 134, 37, 97, 156, 69, 40, 7, 173, 253, 241, 196, 205, 64, 100, 245, 220, 152, 38, 220, 114, 144, 169, 194, 105, 246, 211, 14, 199, 65, 9, 206, 177, 125, 218, 30, 30, 42, 172, 62, 93, 170, 82, 125, 229, 95, 45, 126, 229, 239, 150, 253, 126, 87, 64, 51, 42, 63, 38, 143, 117, 137, 77, 128, 214, 203, 202, 149, 30, 70, 243, 66, 252, 77, 132, 29, 143, 137, 67, 0, 148, 147, 248, 37, 64, 149, 231, 135, 254, 181, 182, 180 },
                            RoleId = 4,
                            Username = "client1"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client2@example.com",
                            FirstName = "Client",
                            LastName = "UserTwo",
                            PasswordHash = new byte[] { 152, 188, 5, 135, 85, 137, 91, 2, 182, 239, 133, 18, 174, 200, 95, 163, 10, 22, 99, 65, 140, 254, 218, 160, 49, 196, 67, 235, 129, 16, 179, 191, 154, 188, 75, 100, 251, 222, 189, 40, 146, 244, 85, 61, 171, 110, 60, 251, 68, 111, 163, 98, 17, 3, 84, 99, 187, 222, 79, 209, 104, 97, 32, 129 },
                            PasswordSalt = new byte[] { 209, 152, 30, 185, 239, 33, 78, 228, 44, 89, 57, 13, 8, 54, 75, 120, 235, 236, 214, 219, 221, 40, 226, 143, 97, 194, 37, 90, 204, 63, 45, 43, 238, 93, 163, 81, 250, 134, 37, 97, 156, 69, 40, 7, 173, 253, 241, 196, 205, 64, 100, 245, 220, 152, 38, 220, 114, 144, 169, 194, 105, 246, 211, 14, 199, 65, 9, 206, 177, 125, 218, 30, 30, 42, 172, 62, 93, 170, 82, 125, 229, 95, 45, 126, 229, 239, 150, 253, 126, 87, 64, 51, 42, 63, 38, 143, 117, 137, 77, 128, 214, 203, 202, 149, 30, 70, 243, 66, 252, 77, 132, 29, 143, 137, 67, 0, 148, 147, 248, 37, 64, 149, 231, 135, 254, 181, 182, 180 },
                            RoleId = 4,
                            Username = "client2"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8f9520b-47c2-4dff-88df-50ab68feae63"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("4a5739a9-bf13-4dea-be4c-a6324220d180"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("b25db492-d121-41a5-8983-eaec1aa4a426"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("bc36f9c1-0005-4bb0-a790-a340f96ab8b0"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("329631bc-2d5e-47f6-a28e-f6a047408df8"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("9d826d6d-e932-4d96-b5a2-c9815805968a"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("b7e533da-e584-4984-8339-6691aae4279a"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("DispatchParcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.Dispatch", null)
                        .WithMany()
                        .HasForeignKey("DispatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wms_android.shared.Models.Parcel", null)
                        .WithMany()
                        .HasForeignKey("ParcelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("wms_android.shared.Models.Shipment", "Shipment")
                        .WithMany("Parcels")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CreatedBy");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.Navigation("Parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
