// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250618081914_AddBranchModelsAndAuth")]
    partial class AddBranchModelsAndAuth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DispatchParcel", b =>
                {
                    b.Property<Guid>("DispatchId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ParcelsId")
                        .HasColumnType("uuid");

                    b.HasKey("DispatchId", "ParcelsId");

                    b.HasIndex("ParcelsId");

                    b.ToTable("DispatchParcels", (string)null);
                });

            modelBuilder.Entity("wms_android.shared.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Mombasa Address",
                            Email = "mombasa@email.com",
                            Name = "Mombasa",
                            Phone = "111"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Nairobi Address",
                            Email = "nairobi@email.com",
                            Name = "Nairobi",
                            Phone = "222"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Kisumu Address",
                            Email = "kisumu@email.com",
                            Name = "Kisumu",
                            Phone = "333"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Eldoret Address",
                            Email = "eldoret@email.com",
                            Name = "Eldoret",
                            Phone = "444"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Nakuru Address",
                            Email = "nakuru@email.com",
                            Name = "Nakuru",
                            Phone = "555"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Kericho Address",
                            Email = "kericho@email.com",
                            Name = "Kericho",
                            Phone = "666"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Kakamega Address",
                            Email = "kakamega@email.com",
                            Name = "Kakamega",
                            Phone = "777"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Kapsabet Address",
                            Email = "kapsabet@email.com",
                            Name = "Kapsabet",
                            Phone = "888"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Kitale Address",
                            Email = "kitale@email.com",
                            Name = "Kitale",
                            Phone = "999"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Dispatch", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DispatchTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Driver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<Guid>>("ParcelIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<string>("SourceBranch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Dispatches");
                });

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e1e22f0-c6a6-4e56-8245-e79674b7f56f"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("a31fde51-28e1-44f7-918a-8850a3a3f8c4"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("df60f1ca-8ec9-4135-ba7b-417d5405e143"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("66bb18ba-245c-449b-950b-159c7563003e"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("d43a1b47-8390-40c6-b85c-f020f1581a83"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("785f04a9-23f1-4320-9589-40a3a2f284ad"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("86b89e7a-2598-450e-8f16-7137402f676e"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("cfbc5460-bb79-4ced-a1bd-8d92e54215a0"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("a455b44e-1b06-4b3a-abe7-36969cfedd84"),
                            FirstName = "Charles",
                            Initials = "CM",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("b485e2ce-4475-4232-9ff8-feba450c2dbf"),
                            FirstName = "James",
                            Initials = "JG",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorLastNameSnapshot")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .HasColumnType("text");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ShipmentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorLastNameSnapshot")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WaybillNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("WaybillNumber")
                        .IsUnique();

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            LastName = "User",
                            PasswordHash = new byte[] { 204, 184, 167, 112, 26, 169, 162, 245, 0, 179, 14, 107, 251, 42, 112, 189, 13, 198, 152, 53, 1, 255, 5, 53, 151, 76, 119, 141, 69, 45, 112, 59, 246, 77, 104, 48, 133, 155, 155, 11, 139, 178, 233, 187, 176, 119, 95, 82, 86, 153, 208, 1, 170, 153, 1, 239, 80, 3, 68, 146, 234, 121, 72, 230 },
                            PasswordSalt = new byte[] { 158, 132, 159, 95, 154, 88, 234, 251, 11, 79, 80, 119, 191, 187, 38, 195, 83, 129, 199, 46, 59, 51, 224, 17, 137, 51, 94, 236, 66, 129, 66, 132, 232, 142, 247, 10, 108, 242, 210, 35, 224, 154, 154, 86, 44, 119, 228, 70, 125, 23, 118, 199, 88, 131, 37, 76, 97, 185, 107, 162, 195, 30, 105, 187, 202, 217, 30, 200, 150, 221, 101, 184, 213, 75, 115, 43, 62, 100, 187, 184, 84, 159, 132, 16, 239, 14, 44, 56, 221, 199, 45, 113, 243, 181, 184, 110, 103, 98, 80, 54, 137, 109, 249, 74, 43, 139, 98, 202, 57, 130, 135, 115, 96, 184, 205, 25, 57, 46, 215, 192, 203, 245, 152, 51, 246, 17, 74, 73 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            FirstName = "Manager",
                            LastName = "Person",
                            PasswordHash = new byte[] { 204, 184, 167, 112, 26, 169, 162, 245, 0, 179, 14, 107, 251, 42, 112, 189, 13, 198, 152, 53, 1, 255, 5, 53, 151, 76, 119, 141, 69, 45, 112, 59, 246, 77, 104, 48, 133, 155, 155, 11, 139, 178, 233, 187, 176, 119, 95, 82, 86, 153, 208, 1, 170, 153, 1, 239, 80, 3, 68, 146, 234, 121, 72, 230 },
                            PasswordSalt = new byte[] { 158, 132, 159, 95, 154, 88, 234, 251, 11, 79, 80, 119, 191, 187, 38, 195, 83, 129, 199, 46, 59, 51, 224, 17, 137, 51, 94, 236, 66, 129, 66, 132, 232, 142, 247, 10, 108, 242, 210, 35, 224, 154, 154, 86, 44, 119, 228, 70, 125, 23, 118, 199, 88, 131, 37, 76, 97, 185, 107, 162, 195, 30, 105, 187, 202, 217, 30, 200, 150, 221, 101, 184, 213, 75, 115, 43, 62, 100, 187, 184, 84, 159, 132, 16, 239, 14, 44, 56, 221, 199, 45, 113, 243, 181, 184, 110, 103, 98, 80, 54, 137, 109, 249, 74, 43, 139, 98, 202, 57, 130, 135, 115, 96, 184, 205, 25, 57, 46, 215, 192, 203, 245, 152, 51, 246, 17, 74, 73 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            FirstName = "Clerk",
                            LastName = "One",
                            PasswordHash = new byte[] { 204, 184, 167, 112, 26, 169, 162, 245, 0, 179, 14, 107, 251, 42, 112, 189, 13, 198, 152, 53, 1, 255, 5, 53, 151, 76, 119, 141, 69, 45, 112, 59, 246, 77, 104, 48, 133, 155, 155, 11, 139, 178, 233, 187, 176, 119, 95, 82, 86, 153, 208, 1, 170, 153, 1, 239, 80, 3, 68, 146, 234, 121, 72, 230 },
                            PasswordSalt = new byte[] { 158, 132, 159, 95, 154, 88, 234, 251, 11, 79, 80, 119, 191, 187, 38, 195, 83, 129, 199, 46, 59, 51, 224, 17, 137, 51, 94, 236, 66, 129, 66, 132, 232, 142, 247, 10, 108, 242, 210, 35, 224, 154, 154, 86, 44, 119, 228, 70, 125, 23, 118, 199, 88, 131, 37, 76, 97, 185, 107, 162, 195, 30, 105, 187, 202, 217, 30, 200, 150, 221, 101, 184, 213, 75, 115, 43, 62, 100, 187, 184, 84, 159, 132, 16, 239, 14, 44, 56, 221, 199, 45, 113, 243, 181, 184, 110, 103, 98, 80, 54, 137, 109, 249, 74, 43, 139, 98, 202, 57, 130, 135, 115, 96, 184, 205, 25, 57, 46, 215, 192, 203, 245, 152, 51, 246, 17, 74, 73 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            FirstName = "Clerk",
                            LastName = "Two",
                            PasswordHash = new byte[] { 204, 184, 167, 112, 26, 169, 162, 245, 0, 179, 14, 107, 251, 42, 112, 189, 13, 198, 152, 53, 1, 255, 5, 53, 151, 76, 119, 141, 69, 45, 112, 59, 246, 77, 104, 48, 133, 155, 155, 11, 139, 178, 233, 187, 176, 119, 95, 82, 86, 153, 208, 1, 170, 153, 1, 239, 80, 3, 68, 146, 234, 121, 72, 230 },
                            PasswordSalt = new byte[] { 158, 132, 159, 95, 154, 88, 234, 251, 11, 79, 80, 119, 191, 187, 38, 195, 83, 129, 199, 46, 59, 51, 224, 17, 137, 51, 94, 236, 66, 129, 66, 132, 232, 142, 247, 10, 108, 242, 210, 35, 224, 154, 154, 86, 44, 119, 228, 70, 125, 23, 118, 199, 88, 131, 37, 76, 97, 185, 107, 162, 195, 30, 105, 187, 202, 217, 30, 200, 150, 221, 101, 184, 213, 75, 115, 43, 62, 100, 187, 184, 84, 159, 132, 16, 239, 14, 44, 56, 221, 199, 45, 113, 243, 181, 184, 110, 103, 98, 80, 54, 137, 109, 249, 74, 43, 139, 98, 202, 57, 130, 135, 115, 96, 184, 205, 25, 57, 46, 215, 192, 203, 245, 152, 51, 246, 17, 74, 73 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            FirstName = "Client",
                            LastName = "UserOne",
                            PasswordHash = new byte[] { 204, 184, 167, 112, 26, 169, 162, 245, 0, 179, 14, 107, 251, 42, 112, 189, 13, 198, 152, 53, 1, 255, 5, 53, 151, 76, 119, 141, 69, 45, 112, 59, 246, 77, 104, 48, 133, 155, 155, 11, 139, 178, 233, 187, 176, 119, 95, 82, 86, 153, 208, 1, 170, 153, 1, 239, 80, 3, 68, 146, 234, 121, 72, 230 },
                            PasswordSalt = new byte[] { 158, 132, 159, 95, 154, 88, 234, 251, 11, 79, 80, 119, 191, 187, 38, 195, 83, 129, 199, 46, 59, 51, 224, 17, 137, 51, 94, 236, 66, 129, 66, 132, 232, 142, 247, 10, 108, 242, 210, 35, 224, 154, 154, 86, 44, 119, 228, 70, 125, 23, 118, 199, 88, 131, 37, 76, 97, 185, 107, 162, 195, 30, 105, 187, 202, 217, 30, 200, 150, 221, 101, 184, 213, 75, 115, 43, 62, 100, 187, 184, 84, 159, 132, 16, 239, 14, 44, 56, 221, 199, 45, 113, 243, 181, 184, 110, 103, 98, 80, 54, 137, 109, 249, 74, 43, 139, 98, 202, 57, 130, 135, 115, 96, 184, 205, 25, 57, 46, 215, 192, 203, 245, 152, 51, 246, 17, 74, 73 },
                            RoleId = 4,
                            Username = "client1"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client2@example.com",
                            FirstName = "Client",
                            LastName = "UserTwo",
                            PasswordHash = new byte[] { 204, 184, 167, 112, 26, 169, 162, 245, 0, 179, 14, 107, 251, 42, 112, 189, 13, 198, 152, 53, 1, 255, 5, 53, 151, 76, 119, 141, 69, 45, 112, 59, 246, 77, 104, 48, 133, 155, 155, 11, 139, 178, 233, 187, 176, 119, 95, 82, 86, 153, 208, 1, 170, 153, 1, 239, 80, 3, 68, 146, 234, 121, 72, 230 },
                            PasswordSalt = new byte[] { 158, 132, 159, 95, 154, 88, 234, 251, 11, 79, 80, 119, 191, 187, 38, 195, 83, 129, 199, 46, 59, 51, 224, 17, 137, 51, 94, 236, 66, 129, 66, 132, 232, 142, 247, 10, 108, 242, 210, 35, 224, 154, 154, 86, 44, 119, 228, 70, 125, 23, 118, 199, 88, 131, 37, 76, 97, 185, 107, 162, 195, 30, 105, 187, 202, 217, 30, 200, 150, 221, 101, 184, 213, 75, 115, 43, 62, 100, 187, 184, 84, 159, 132, 16, 239, 14, 44, 56, 221, 199, 45, 113, 243, 181, 184, 110, 103, 98, 80, 54, 137, 109, 249, 74, 43, 139, 98, 202, 57, 130, 135, 115, 96, 184, 205, 25, 57, 46, 215, 192, 203, 245, 152, 51, 246, 17, 74, 73 },
                            RoleId = 4,
                            Username = "client2"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.UserBranch", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("BranchId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "BranchId");

                    b.HasIndex("BranchId");

                    b.ToTable("UserBranches");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            BranchId = 2
                        },
                        new
                        {
                            UserId = 2,
                            BranchId = 1
                        },
                        new
                        {
                            UserId = 3,
                            BranchId = 1
                        },
                        new
                        {
                            UserId = 4,
                            BranchId = 2
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ced0e48-f867-4dd1-8ad9-19830e71318f"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("e8e7f6c5-2940-4afd-8723-fad13de282b9"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("96ad9256-0722-4a47-be50-e864f178be16"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("43ea91e8-93cd-44e9-b102-571a02ebf2a7"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("a8e056bc-c492-4c56-8c0f-235ce2a29706"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("3308121f-385f-4417-9fde-de18627fea29"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("b708e180-1273-4964-896f-228655c78d24"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("DispatchParcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.Dispatch", null)
                        .WithMany()
                        .HasForeignKey("DispatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wms_android.shared.Models.Parcel", null)
                        .WithMany()
                        .HasForeignKey("ParcelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("wms_android.shared.Models.Shipment", "Shipment")
                        .WithMany("Parcels")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CreatedBy");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("wms_android.shared.Models.UserBranch", b =>
                {
                    b.HasOne("wms_android.shared.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wms_android.shared.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("User");
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.Navigation("Parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
