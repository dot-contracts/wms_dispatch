// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250506083831_AddedFirstAndLastNameToUser")]
    partial class AddedFirstAndLastNameToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d323cdf3-d31c-45a2-b413-07cb612e0594"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("2ff84868-ca38-40c6-8ef1-c4d215d5616e"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("e00fec38-79cc-42ff-aef4-ba0482da1e4b"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("fc3f5f6a-27f7-49d8-bacd-efbeac8afbf9"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("4be69771-c497-44eb-ab44-80ff2e09ce0d"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("68bb68e0-1a10-46c2-87f8-890c3c1bb812"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("c43b5c89-3345-4b90-8ac4-8500398343b4"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("df7c29b0-d93a-458c-a623-81e463f8591b"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("39a1c3a5-db9e-4b9a-aa3a-3ce3c2527b8d"),
                            FirstName = "Charles",
                            Initials = "CM",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("2e8af441-cc17-4b1a-92fe-f45d636740d9"),
                            FirstName = "James",
                            Initials = "JG",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .HasColumnType("text");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            LastName = "User",
                            Password = "hashed_password_placeholder",
                            PasswordHash = new byte[] { 199, 82, 119, 238, 139, 201, 57, 181, 15, 247, 139, 189, 102, 141, 112, 189, 214, 205, 240, 83, 239, 61, 56, 102, 85, 195, 122, 89, 253, 184, 177, 199, 169, 97, 210, 178, 36, 19, 20, 59, 37, 27, 212, 110, 148, 45, 213, 175, 187, 12, 240, 250, 244, 181, 230, 71, 150, 235, 25, 197, 124, 168, 140, 144 },
                            PasswordSalt = new byte[] { 161, 209, 38, 21, 33, 120, 41, 10, 101, 88, 11, 141, 91, 225, 72, 254, 36, 96, 89, 204, 163, 213, 221, 206, 228, 62, 169, 12, 59, 232, 192, 238, 7, 158, 65, 246, 35, 102, 121, 254, 82, 111, 127, 129, 118, 54, 82, 108, 88, 150, 32, 25, 71, 44, 216, 116, 222, 39, 44, 77, 207, 85, 30, 62, 10, 12, 26, 94, 220, 14, 49, 220, 176, 179, 144, 164, 13, 95, 110, 226, 34, 169, 186, 201, 136, 64, 230, 129, 106, 216, 9, 138, 194, 18, 156, 189, 174, 220, 35, 53, 80, 198, 65, 98, 62, 250, 56, 213, 146, 96, 123, 237, 107, 236, 186, 248, 89, 65, 147, 20, 117, 57, 246, 195, 192, 6, 129, 53 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            FirstName = "Manager",
                            LastName = "User",
                            Password = "manager123",
                            PasswordHash = new byte[] { 199, 82, 119, 238, 139, 201, 57, 181, 15, 247, 139, 189, 102, 141, 112, 189, 214, 205, 240, 83, 239, 61, 56, 102, 85, 195, 122, 89, 253, 184, 177, 199, 169, 97, 210, 178, 36, 19, 20, 59, 37, 27, 212, 110, 148, 45, 213, 175, 187, 12, 240, 250, 244, 181, 230, 71, 150, 235, 25, 197, 124, 168, 140, 144 },
                            PasswordSalt = new byte[] { 161, 209, 38, 21, 33, 120, 41, 10, 101, 88, 11, 141, 91, 225, 72, 254, 36, 96, 89, 204, 163, 213, 221, 206, 228, 62, 169, 12, 59, 232, 192, 238, 7, 158, 65, 246, 35, 102, 121, 254, 82, 111, 127, 129, 118, 54, 82, 108, 88, 150, 32, 25, 71, 44, 216, 116, 222, 39, 44, 77, 207, 85, 30, 62, 10, 12, 26, 94, 220, 14, 49, 220, 176, 179, 144, 164, 13, 95, 110, 226, 34, 169, 186, 201, 136, 64, 230, 129, 106, 216, 9, 138, 194, 18, 156, 189, 174, 220, 35, 53, 80, 198, 65, 98, 62, 250, 56, 213, 146, 96, 123, 237, 107, 236, 186, 248, 89, 65, 147, 20, 117, 57, 246, 195, 192, 6, 129, 53 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            FirstName = "Clerk",
                            LastName = "One",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 199, 82, 119, 238, 139, 201, 57, 181, 15, 247, 139, 189, 102, 141, 112, 189, 214, 205, 240, 83, 239, 61, 56, 102, 85, 195, 122, 89, 253, 184, 177, 199, 169, 97, 210, 178, 36, 19, 20, 59, 37, 27, 212, 110, 148, 45, 213, 175, 187, 12, 240, 250, 244, 181, 230, 71, 150, 235, 25, 197, 124, 168, 140, 144 },
                            PasswordSalt = new byte[] { 161, 209, 38, 21, 33, 120, 41, 10, 101, 88, 11, 141, 91, 225, 72, 254, 36, 96, 89, 204, 163, 213, 221, 206, 228, 62, 169, 12, 59, 232, 192, 238, 7, 158, 65, 246, 35, 102, 121, 254, 82, 111, 127, 129, 118, 54, 82, 108, 88, 150, 32, 25, 71, 44, 216, 116, 222, 39, 44, 77, 207, 85, 30, 62, 10, 12, 26, 94, 220, 14, 49, 220, 176, 179, 144, 164, 13, 95, 110, 226, 34, 169, 186, 201, 136, 64, 230, 129, 106, 216, 9, 138, 194, 18, 156, 189, 174, 220, 35, 53, 80, 198, 65, 98, 62, 250, 56, 213, 146, 96, 123, 237, 107, 236, 186, 248, 89, 65, 147, 20, 117, 57, 246, 195, 192, 6, 129, 53 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            FirstName = "Clerk",
                            LastName = "Two",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 199, 82, 119, 238, 139, 201, 57, 181, 15, 247, 139, 189, 102, 141, 112, 189, 214, 205, 240, 83, 239, 61, 56, 102, 85, 195, 122, 89, 253, 184, 177, 199, 169, 97, 210, 178, 36, 19, 20, 59, 37, 27, 212, 110, 148, 45, 213, 175, 187, 12, 240, 250, 244, 181, 230, 71, 150, 235, 25, 197, 124, 168, 140, 144 },
                            PasswordSalt = new byte[] { 161, 209, 38, 21, 33, 120, 41, 10, 101, 88, 11, 141, 91, 225, 72, 254, 36, 96, 89, 204, 163, 213, 221, 206, 228, 62, 169, 12, 59, 232, 192, 238, 7, 158, 65, 246, 35, 102, 121, 254, 82, 111, 127, 129, 118, 54, 82, 108, 88, 150, 32, 25, 71, 44, 216, 116, 222, 39, 44, 77, 207, 85, 30, 62, 10, 12, 26, 94, 220, 14, 49, 220, 176, 179, 144, 164, 13, 95, 110, 226, 34, 169, 186, 201, 136, 64, 230, 129, 106, 216, 9, 138, 194, 18, 156, 189, 174, 220, 35, 53, 80, 198, 65, 98, 62, 250, 56, 213, 146, 96, 123, 237, 107, 236, 186, 248, 89, 65, 147, 20, 117, 57, 246, 195, 192, 6, 129, 53 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            FirstName = "Client",
                            LastName = "One",
                            Password = "client123",
                            PasswordHash = new byte[] { 199, 82, 119, 238, 139, 201, 57, 181, 15, 247, 139, 189, 102, 141, 112, 189, 214, 205, 240, 83, 239, 61, 56, 102, 85, 195, 122, 89, 253, 184, 177, 199, 169, 97, 210, 178, 36, 19, 20, 59, 37, 27, 212, 110, 148, 45, 213, 175, 187, 12, 240, 250, 244, 181, 230, 71, 150, 235, 25, 197, 124, 168, 140, 144 },
                            PasswordSalt = new byte[] { 161, 209, 38, 21, 33, 120, 41, 10, 101, 88, 11, 141, 91, 225, 72, 254, 36, 96, 89, 204, 163, 213, 221, 206, 228, 62, 169, 12, 59, 232, 192, 238, 7, 158, 65, 246, 35, 102, 121, 254, 82, 111, 127, 129, 118, 54, 82, 108, 88, 150, 32, 25, 71, 44, 216, 116, 222, 39, 44, 77, 207, 85, 30, 62, 10, 12, 26, 94, 220, 14, 49, 220, 176, 179, 144, 164, 13, 95, 110, 226, 34, 169, 186, 201, 136, 64, 230, 129, 106, 216, 9, 138, 194, 18, 156, 189, 174, 220, 35, 53, 80, 198, 65, 98, 62, 250, 56, 213, 146, 96, 123, 237, 107, 236, 186, 248, 89, 65, 147, 20, 117, 57, 246, 195, 192, 6, 129, 53 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fc1b667b-20db-494d-a504-7c160c73558c"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("c1780767-8c85-4bbb-80c2-9fb36739e903"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("b9f12a2c-bf3b-456a-83e5-5f554c3f3b88"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("8afd1129-1441-46ad-b6a7-3c927c91c229"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("714be203-bbb0-44ca-9b74-9ecc007410b5"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("ee55b714-646a-443b-afd4-661bc6fcf70a"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("0dba1fae-4e43-4a4f-8d1f-ad80129e9722"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
