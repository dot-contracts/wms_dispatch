// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250402064501_UpdateParcelIdGeneration")]
    partial class UpdateParcelIdGeneration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3115713e-47b1-40df-b2f1-2bd183db049d"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("631e7fc5-d479-4a96-a75b-111474f40355"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("b4bcf540-5d37-4169-99d4-5208f818d6ca"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("c9c1a449-0eaf-438b-8eec-49805045627b"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("3b8594e7-6e51-4ea0-b4b0-7442e31a59bd"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("ad28edbc-1284-4f80-bba1-fde97a2690bc"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("5381a657-df45-4ff7-b3b3-7c44cff4b2d2"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("3e743c05-1633-4d04-b397-91f2c808283b"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("8e77c7dc-22ef-4354-9d4e-76f00086e1f9"),
                            FirstName = "Charles",
                            Initials = "CM",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("2a87f19e-6abe-4362-8b3c-9b80cada14a5"),
                            FirstName = "James",
                            Initials = "JG",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            Password = "admin123",
                            PasswordHash = new byte[] { 34, 51, 69, 168, 187, 108, 215, 201, 51, 40, 193, 167, 79, 28, 174, 240, 236, 223, 167, 206, 60, 15, 24, 216, 58, 225, 227, 155, 241, 156, 200, 2, 107, 201, 139, 13, 71, 202, 92, 188, 181, 62, 19, 255, 169, 216, 151, 172, 216, 95, 86, 245, 74, 255, 166, 151, 188, 240, 42, 206, 118, 38, 185, 58 },
                            PasswordSalt = new byte[] { 109, 131, 142, 140, 127, 32, 216, 136, 93, 86, 50, 237, 224, 134, 229, 235, 50, 7, 54, 108, 187, 235, 223, 197, 69, 33, 51, 16, 173, 150, 57, 56, 7, 227, 180, 39, 115, 149, 27, 91, 75, 190, 159, 5, 210, 112, 36, 82, 84, 30, 106, 193, 253, 112, 173, 14, 43, 163, 177, 19, 119, 9, 104, 53, 157, 87, 137, 242, 8, 126, 57, 68, 159, 6, 223, 67, 0, 49, 52, 133, 108, 128, 70, 10, 133, 221, 152, 25, 192, 83, 97, 216, 163, 244, 179, 125, 8, 55, 140, 159, 122, 44, 215, 101, 249, 215, 91, 144, 19, 157, 34, 188, 102, 215, 133, 168, 99, 58, 156, 92, 25, 198, 33, 55, 118, 20, 201, 49 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            Password = "manager123",
                            PasswordHash = new byte[] { 34, 51, 69, 168, 187, 108, 215, 201, 51, 40, 193, 167, 79, 28, 174, 240, 236, 223, 167, 206, 60, 15, 24, 216, 58, 225, 227, 155, 241, 156, 200, 2, 107, 201, 139, 13, 71, 202, 92, 188, 181, 62, 19, 255, 169, 216, 151, 172, 216, 95, 86, 245, 74, 255, 166, 151, 188, 240, 42, 206, 118, 38, 185, 58 },
                            PasswordSalt = new byte[] { 109, 131, 142, 140, 127, 32, 216, 136, 93, 86, 50, 237, 224, 134, 229, 235, 50, 7, 54, 108, 187, 235, 223, 197, 69, 33, 51, 16, 173, 150, 57, 56, 7, 227, 180, 39, 115, 149, 27, 91, 75, 190, 159, 5, 210, 112, 36, 82, 84, 30, 106, 193, 253, 112, 173, 14, 43, 163, 177, 19, 119, 9, 104, 53, 157, 87, 137, 242, 8, 126, 57, 68, 159, 6, 223, 67, 0, 49, 52, 133, 108, 128, 70, 10, 133, 221, 152, 25, 192, 83, 97, 216, 163, 244, 179, 125, 8, 55, 140, 159, 122, 44, 215, 101, 249, 215, 91, 144, 19, 157, 34, 188, 102, 215, 133, 168, 99, 58, 156, 92, 25, 198, 33, 55, 118, 20, 201, 49 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 34, 51, 69, 168, 187, 108, 215, 201, 51, 40, 193, 167, 79, 28, 174, 240, 236, 223, 167, 206, 60, 15, 24, 216, 58, 225, 227, 155, 241, 156, 200, 2, 107, 201, 139, 13, 71, 202, 92, 188, 181, 62, 19, 255, 169, 216, 151, 172, 216, 95, 86, 245, 74, 255, 166, 151, 188, 240, 42, 206, 118, 38, 185, 58 },
                            PasswordSalt = new byte[] { 109, 131, 142, 140, 127, 32, 216, 136, 93, 86, 50, 237, 224, 134, 229, 235, 50, 7, 54, 108, 187, 235, 223, 197, 69, 33, 51, 16, 173, 150, 57, 56, 7, 227, 180, 39, 115, 149, 27, 91, 75, 190, 159, 5, 210, 112, 36, 82, 84, 30, 106, 193, 253, 112, 173, 14, 43, 163, 177, 19, 119, 9, 104, 53, 157, 87, 137, 242, 8, 126, 57, 68, 159, 6, 223, 67, 0, 49, 52, 133, 108, 128, 70, 10, 133, 221, 152, 25, 192, 83, 97, 216, 163, 244, 179, 125, 8, 55, 140, 159, 122, 44, 215, 101, 249, 215, 91, 144, 19, 157, 34, 188, 102, 215, 133, 168, 99, 58, 156, 92, 25, 198, 33, 55, 118, 20, 201, 49 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 34, 51, 69, 168, 187, 108, 215, 201, 51, 40, 193, 167, 79, 28, 174, 240, 236, 223, 167, 206, 60, 15, 24, 216, 58, 225, 227, 155, 241, 156, 200, 2, 107, 201, 139, 13, 71, 202, 92, 188, 181, 62, 19, 255, 169, 216, 151, 172, 216, 95, 86, 245, 74, 255, 166, 151, 188, 240, 42, 206, 118, 38, 185, 58 },
                            PasswordSalt = new byte[] { 109, 131, 142, 140, 127, 32, 216, 136, 93, 86, 50, 237, 224, 134, 229, 235, 50, 7, 54, 108, 187, 235, 223, 197, 69, 33, 51, 16, 173, 150, 57, 56, 7, 227, 180, 39, 115, 149, 27, 91, 75, 190, 159, 5, 210, 112, 36, 82, 84, 30, 106, 193, 253, 112, 173, 14, 43, 163, 177, 19, 119, 9, 104, 53, 157, 87, 137, 242, 8, 126, 57, 68, 159, 6, 223, 67, 0, 49, 52, 133, 108, 128, 70, 10, 133, 221, 152, 25, 192, 83, 97, 216, 163, 244, 179, 125, 8, 55, 140, 159, 122, 44, 215, 101, 249, 215, 91, 144, 19, 157, 34, 188, 102, 215, 133, 168, 99, 58, 156, 92, 25, 198, 33, 55, 118, 20, 201, 49 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            Password = "client123",
                            PasswordHash = new byte[] { 34, 51, 69, 168, 187, 108, 215, 201, 51, 40, 193, 167, 79, 28, 174, 240, 236, 223, 167, 206, 60, 15, 24, 216, 58, 225, 227, 155, 241, 156, 200, 2, 107, 201, 139, 13, 71, 202, 92, 188, 181, 62, 19, 255, 169, 216, 151, 172, 216, 95, 86, 245, 74, 255, 166, 151, 188, 240, 42, 206, 118, 38, 185, 58 },
                            PasswordSalt = new byte[] { 109, 131, 142, 140, 127, 32, 216, 136, 93, 86, 50, 237, 224, 134, 229, 235, 50, 7, 54, 108, 187, 235, 223, 197, 69, 33, 51, 16, 173, 150, 57, 56, 7, 227, 180, 39, 115, 149, 27, 91, 75, 190, 159, 5, 210, 112, 36, 82, 84, 30, 106, 193, 253, 112, 173, 14, 43, 163, 177, 19, 119, 9, 104, 53, 157, 87, 137, 242, 8, 126, 57, 68, 159, 6, 223, 67, 0, 49, 52, 133, 108, 128, 70, 10, 133, 221, 152, 25, 192, 83, 97, 216, 163, 244, 179, 125, 8, 55, 140, 159, 122, 44, 215, 101, 249, 215, 91, 144, 19, 157, 34, 188, 102, 215, 133, 168, 99, 58, 156, 92, 25, 198, 33, 55, 118, 20, 201, 49 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9af095f2-0de7-488a-9713-e24fadd3d236"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("637163c1-7932-40e6-ad55-73d029dfebef"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("86ef5f8d-63d3-4a7a-86cc-002285820480"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("fa2e3509-3e94-4fe9-bc3c-6ac67c765842"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("5270f5bb-8b24-403c-b07b-e159790338e5"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("9df93c1f-a4d5-49ca-beaf-d9b4ecdba0ea"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("775674af-d695-49c7-892f-a89268d85fb2"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
