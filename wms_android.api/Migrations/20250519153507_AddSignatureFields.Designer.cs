// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.shared.Data;

#nullable disable

namespace wms_android.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250519153507_AddSignatureFields")]
    partial class AddSignatureFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.shared.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("418474ee-3bf5-4c3b-a04a-966221a023fc"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("1703899c-3339-4237-ac00-68c0dc1af3d3"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("3a6a547b-f9b5-4acf-958c-a3851edd32b2"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("2af6c867-47aa-4c45-b9ff-3123a2272525"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("08f30c52-fce3-4d36-8d14-60f9bb2f29eb"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("7f843575-59fe-4678-a1d8-6ce1c6ff551c"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("37a24eaa-a469-426f-9315-d007a3bdd44f"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("b4e6b39e-ebd1-491f-b776-f88a11bea251"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("952f64e8-52c2-4989-aead-9a3ca2998e16"),
                            FirstName = "Charles",
                            Initials = "CM",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("9aaa1015-f26d-4998-9c22-18fb8154617c"),
                            FirstName = "James",
                            Initials = "JG",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorLastNameSnapshot")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .HasColumnType("text");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ShipmentId")
                        .HasColumnType("uuid");

                    b.Property<byte[]>("SignatureData")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("SignedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SignedBy")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("CreatorLastNameSnapshot")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WaybillNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("WaybillNumber")
                        .IsUnique();

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            LastName = "User",
                            Password = "admin123",
                            PasswordHash = new byte[] { 253, 130, 67, 97, 248, 180, 135, 189, 204, 239, 60, 153, 75, 67, 255, 73, 149, 79, 145, 157, 158, 172, 214, 69, 151, 136, 191, 222, 61, 160, 19, 233, 43, 169, 6, 238, 68, 226, 131, 92, 236, 165, 155, 229, 0, 178, 165, 250, 33, 115, 186, 160, 254, 235, 109, 133, 71, 103, 6, 191, 253, 135, 130, 223 },
                            PasswordSalt = new byte[] { 160, 65, 122, 174, 12, 109, 237, 116, 121, 236, 252, 59, 59, 157, 94, 42, 80, 193, 152, 60, 10, 167, 164, 252, 100, 76, 42, 57, 36, 195, 232, 120, 68, 213, 180, 219, 103, 248, 166, 211, 56, 145, 227, 45, 101, 23, 118, 189, 101, 244, 2, 229, 2, 230, 80, 152, 141, 237, 145, 74, 205, 177, 151, 158, 241, 214, 116, 133, 202, 140, 12, 89, 177, 215, 219, 223, 40, 202, 139, 80, 207, 232, 160, 109, 14, 118, 161, 79, 23, 50, 159, 72, 43, 220, 131, 40, 82, 244, 76, 50, 146, 244, 104, 182, 69, 48, 79, 203, 246, 70, 185, 9, 52, 134, 102, 247, 241, 86, 33, 156, 85, 90, 207, 219, 170, 55, 206, 7 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "manager@example.com",
                            FirstName = "Manager",
                            LastName = "Person",
                            Password = "manager123",
                            PasswordHash = new byte[] { 253, 130, 67, 97, 248, 180, 135, 189, 204, 239, 60, 153, 75, 67, 255, 73, 149, 79, 145, 157, 158, 172, 214, 69, 151, 136, 191, 222, 61, 160, 19, 233, 43, 169, 6, 238, 68, 226, 131, 92, 236, 165, 155, 229, 0, 178, 165, 250, 33, 115, 186, 160, 254, 235, 109, 133, 71, 103, 6, 191, 253, 135, 130, 223 },
                            PasswordSalt = new byte[] { 160, 65, 122, 174, 12, 109, 237, 116, 121, 236, 252, 59, 59, 157, 94, 42, 80, 193, 152, 60, 10, 167, 164, 252, 100, 76, 42, 57, 36, 195, 232, 120, 68, 213, 180, 219, 103, 248, 166, 211, 56, 145, 227, 45, 101, 23, 118, 189, 101, 244, 2, 229, 2, 230, 80, 152, 141, 237, 145, 74, 205, 177, 151, 158, 241, 214, 116, 133, 202, 140, 12, 89, 177, 215, 219, 223, 40, 202, 139, 80, 207, 232, 160, 109, 14, 118, 161, 79, 23, 50, 159, 72, 43, 220, 131, 40, 82, 244, 76, 50, 146, 244, 104, 182, 69, 48, 79, 203, 246, 70, 185, 9, 52, 134, 102, 247, 241, 86, 33, 156, 85, 90, 207, 219, 170, 55, 206, 7 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk1@example.com",
                            FirstName = "Clerk",
                            LastName = "One",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 253, 130, 67, 97, 248, 180, 135, 189, 204, 239, 60, 153, 75, 67, 255, 73, 149, 79, 145, 157, 158, 172, 214, 69, 151, 136, 191, 222, 61, 160, 19, 233, 43, 169, 6, 238, 68, 226, 131, 92, 236, 165, 155, 229, 0, 178, 165, 250, 33, 115, 186, 160, 254, 235, 109, 133, 71, 103, 6, 191, 253, 135, 130, 223 },
                            PasswordSalt = new byte[] { 160, 65, 122, 174, 12, 109, 237, 116, 121, 236, 252, 59, 59, 157, 94, 42, 80, 193, 152, 60, 10, 167, 164, 252, 100, 76, 42, 57, 36, 195, 232, 120, 68, 213, 180, 219, 103, 248, 166, 211, 56, 145, 227, 45, 101, 23, 118, 189, 101, 244, 2, 229, 2, 230, 80, 152, 141, 237, 145, 74, 205, 177, 151, 158, 241, 214, 116, 133, 202, 140, 12, 89, 177, 215, 219, 223, 40, 202, 139, 80, 207, 232, 160, 109, 14, 118, 161, 79, 23, 50, 159, 72, 43, 220, 131, 40, 82, 244, 76, 50, 146, 244, 104, 182, 69, 48, 79, 203, 246, 70, 185, 9, 52, 134, 102, 247, 241, 86, 33, 156, 85, 90, 207, 219, 170, 55, 206, 7 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "clerk2@example.com",
                            FirstName = "Clerk",
                            LastName = "Two",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 253, 130, 67, 97, 248, 180, 135, 189, 204, 239, 60, 153, 75, 67, 255, 73, 149, 79, 145, 157, 158, 172, 214, 69, 151, 136, 191, 222, 61, 160, 19, 233, 43, 169, 6, 238, 68, 226, 131, 92, 236, 165, 155, 229, 0, 178, 165, 250, 33, 115, 186, 160, 254, 235, 109, 133, 71, 103, 6, 191, 253, 135, 130, 223 },
                            PasswordSalt = new byte[] { 160, 65, 122, 174, 12, 109, 237, 116, 121, 236, 252, 59, 59, 157, 94, 42, 80, 193, 152, 60, 10, 167, 164, 252, 100, 76, 42, 57, 36, 195, 232, 120, 68, 213, 180, 219, 103, 248, 166, 211, 56, 145, 227, 45, 101, 23, 118, 189, 101, 244, 2, 229, 2, 230, 80, 152, 141, 237, 145, 74, 205, 177, 151, 158, 241, 214, 116, 133, 202, 140, 12, 89, 177, 215, 219, 223, 40, 202, 139, 80, 207, 232, 160, 109, 14, 118, 161, 79, 23, 50, 159, 72, 43, 220, 131, 40, 82, 244, 76, 50, 146, 244, 104, 182, 69, 48, 79, 203, 246, 70, 185, 9, 52, 134, 102, 247, 241, 86, 33, 156, 85, 90, 207, 219, 170, 55, 206, 7 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "client1@example.com",
                            FirstName = "Client",
                            LastName = "UserOne",
                            Password = "client123",
                            PasswordHash = new byte[] { 253, 130, 67, 97, 248, 180, 135, 189, 204, 239, 60, 153, 75, 67, 255, 73, 149, 79, 145, 157, 158, 172, 214, 69, 151, 136, 191, 222, 61, 160, 19, 233, 43, 169, 6, 238, 68, 226, 131, 92, 236, 165, 155, 229, 0, 178, 165, 250, 33, 115, 186, 160, 254, 235, 109, 133, 71, 103, 6, 191, 253, 135, 130, 223 },
                            PasswordSalt = new byte[] { 160, 65, 122, 174, 12, 109, 237, 116, 121, 236, 252, 59, 59, 157, 94, 42, 80, 193, 152, 60, 10, 167, 164, 252, 100, 76, 42, 57, 36, 195, 232, 120, 68, 213, 180, 219, 103, 248, 166, 211, 56, 145, 227, 45, 101, 23, 118, 189, 101, 244, 2, 229, 2, 230, 80, 152, 141, 237, 145, 74, 205, 177, 151, 158, 241, 214, 116, 133, 202, 140, 12, 89, 177, 215, 219, 223, 40, 202, 139, 80, 207, 232, 160, 109, 14, 118, 161, 79, 23, 50, 159, 72, 43, 220, 131, 40, 82, 244, 76, 50, 146, 244, 104, 182, 69, 48, 79, 203, 246, 70, 185, 9, 52, 134, 102, 247, 241, 86, 33, 156, 85, 90, 207, 219, 170, 55, 206, 7 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5598defb-323f-4983-932b-d71e1727db35"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("53b77a6c-df19-4c26-8274-f69f7cf8b972"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("9b1f0174-fe92-43b1-85e8-3d9128d0e9ca"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("98cdb920-5a7e-400d-a855-1e5823261265"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("40e21532-2c9e-45cb-93a6-b931f146ac96"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("90a15e0d-a9b5-4801-a566-739a9d825b95"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("d57c148a-f77b-4171-b3b3-8105bfac6ed1"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.shared.Models.Parcel", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("wms_android.shared.Models.Shipment", "Shipment")
                        .WithMany("Parcels")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CreatedBy");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.HasOne("wms_android.shared.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("wms_android.shared.Models.User", b =>
                {
                    b.HasOne("wms_android.shared.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("wms_android.shared.Models.Shipment", b =>
                {
                    b.Navigation("Parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
