//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api.Struct {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='MemCardOut']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/struct/MemCardOut", DoNotGenerateAcw=true)]
	public partial class MemCardOut : global::Java.Lang.Object, global::Com.Vanstone.Base.Interfaces.IStructInterface {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='MemCardOut']/field[@name='OutBufHex']"
		[Register ("OutBufHex")]
		public IList<byte>? OutBufHex {
			get {
				const string __id = "OutBufHex.[B";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Android.Runtime.JavaArray<byte>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "OutBufHex.[B";

				IntPtr native_value = global::Android.Runtime.JavaArray<byte>.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/struct/MemCardOut", typeof (MemCardOut));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected MemCardOut (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='MemCardOut']/constructor[@name='MemCardOut' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe MemCardOut () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getOutLen;
#pragma warning disable 0169
		static Delegate GetGetOutLenHandler ()
		{
			if (cb_getOutLen == null)
				cb_getOutLen = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetOutLen));
			return cb_getOutLen;
		}

		static int n_GetOutLen (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.MemCardOut> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.OutLen;
		}
#pragma warning restore 0169

		static Delegate? cb_setOutLen_I;
#pragma warning disable 0169
		static Delegate GetSetOutLen_IHandler ()
		{
			if (cb_setOutLen_I == null)
				cb_setOutLen_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetOutLen_I));
			return cb_setOutLen_I;
		}

		static void n_SetOutLen_I (IntPtr jnienv, IntPtr native__this, int outLen)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.MemCardOut> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.OutLen = outLen;
		}
#pragma warning restore 0169

		public virtual unsafe int OutLen {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='MemCardOut']/method[@name='getOutLen' and count(parameter)=0]"
			[Register ("getOutLen", "()I", "GetGetOutLenHandler")]
			get {
				const string __id = "getOutLen.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='MemCardOut']/method[@name='setOutLen' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setOutLen", "(I)V", "GetSetOutLen_IHandler")]
			set {
				const string __id = "setOutLen.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getOutBufHex;
#pragma warning disable 0169
		static Delegate GetGetOutBufHexHandler ()
		{
			if (cb_getOutBufHex == null)
				cb_getOutBufHex = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetOutBufHex));
			return cb_getOutBufHex;
		}

		static IntPtr n_GetOutBufHex (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.MemCardOut> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetOutBufHex ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='MemCardOut']/method[@name='getOutBufHex' and count(parameter)=0]"
		[Register ("getOutBufHex", "()[B", "GetGetOutBufHexHandler")]
		public virtual unsafe byte[]? GetOutBufHex ()
		{
			const string __id = "getOutBufHex.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_setOutBufHex_arrayB;
#pragma warning disable 0169
		static Delegate GetSetOutBufHex_arrayBHandler ()
		{
			if (cb_setOutBufHex_arrayB == null)
				cb_setOutBufHex_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetOutBufHex_arrayB));
			return cb_setOutBufHex_arrayB;
		}

		static void n_SetOutBufHex_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_outBufHex)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.MemCardOut> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var outBufHex = (byte[]?) JNIEnv.GetArray (native_outBufHex, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetOutBufHex (outBufHex);
			if (outBufHex != null)
				JNIEnv.CopyArray (outBufHex, native_outBufHex);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='MemCardOut']/method[@name='setOutBufHex' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setOutBufHex", "([B)V", "GetSetOutBufHex_arrayBHandler")]
		public virtual unsafe void SetOutBufHex (byte[]? outBufHex)
		{
			const string __id = "setOutBufHex.([B)V";
			IntPtr native_outBufHex = JNIEnv.NewArray (outBufHex);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_outBufHex);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (outBufHex != null) {
					JNIEnv.CopyArray (native_outBufHex, outBufHex);
					JNIEnv.DeleteLocalRef (native_outBufHex);
				}
				global::System.GC.KeepAlive (outBufHex);
			}
		}

		static Delegate? cb_size;
#pragma warning disable 0169
		static Delegate GetSizeHandler ()
		{
			if (cb_size == null)
				cb_size = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Size));
			return cb_size;
		}

		static int n_Size (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.MemCardOut> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Size ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='MemCardOut']/method[@name='size' and count(parameter)=0]"
		[Register ("size", "()I", "GetSizeHandler")]
		public virtual unsafe int Size ()
		{
			const string __id = "size.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_toBean_arrayB;
#pragma warning disable 0169
		static Delegate GetToBean_arrayBHandler ()
		{
			if (cb_toBean_arrayB == null)
				cb_toBean_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ToBean_arrayB));
			return cb_toBean_arrayB;
		}

		static void n_ToBean_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_buf)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.MemCardOut> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var buf = (byte[]?) JNIEnv.GetArray (native_buf, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.ToBean (buf);
			if (buf != null)
				JNIEnv.CopyArray (buf, native_buf);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='MemCardOut']/method[@name='toBean' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("toBean", "([B)V", "GetToBean_arrayBHandler")]
		public virtual unsafe void ToBean (byte[]? buf)
		{
			const string __id = "toBean.([B)V";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_buf);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		static Delegate? cb_toBytes;
#pragma warning disable 0169
		static Delegate GetToBytesHandler ()
		{
			if (cb_toBytes == null)
				cb_toBytes = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToBytes));
			return cb_toBytes;
		}

		static IntPtr n_ToBytes (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.MemCardOut> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.ToBytes ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='MemCardOut']/method[@name='toBytes' and count(parameter)=0]"
		[Register ("toBytes", "()[B", "GetToBytesHandler")]
		public virtual unsafe byte[]? ToBytes ()
		{
			const string __id = "toBytes.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

	}
}
