//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AT24CApi']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/AT24CApi", DoNotGenerateAcw=true)]
	public partial class AT24CApi : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AT24CApi']/field[@name='AT24C01']"
		[Register ("AT24C01")]
		public const int At24c01 = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AT24CApi']/field[@name='AT24C02']"
		[Register ("AT24C02")]
		public const int At24c02 = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AT24CApi']/field[@name='AT24C04']"
		[Register ("AT24C04")]
		public const int At24c04 = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AT24CApi']/field[@name='AT24C08']"
		[Register ("AT24C08")]
		public const int At24c08 = (int) 4;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AT24CApi']/field[@name='AT24C16']"
		[Register ("AT24C16")]
		public const int At24c16 = (int) 5;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AT24CApi']/field[@name='AT24C64']"
		[Register ("AT24C64")]
		public const int At24c64 = (int) 6;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/AT24CApi", typeof (AT24CApi));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected AT24CApi (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AT24CApi']/constructor[@name='AT24CApi' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe AT24CApi () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AT24CApi']/method[@name='checkType_Api' and count(parameter)=0]"
		[Register ("checkType_Api", "()I", "")]
		public static unsafe int CheckType_Api ()
		{
			const string __id = "checkType_Api.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AT24CApi']/method[@name='close_Api' and count(parameter)=0]"
		[Register ("close_Api", "()I", "")]
		public static unsafe int Close_Api ()
		{
			const string __id = "close_Api.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AT24CApi']/method[@name='open_Api' and count(parameter)=0]"
		[Register ("open_Api", "()I", "")]
		public static unsafe int Open_Api ()
		{
			const string __id = "open_Api.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AT24CApi']/method[@name='read_Api' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='byte[]'] and parameter[3][@type='int']]"
		[Register ("read_Api", "(I[BI)I", "")]
		public static unsafe int Read_Api (int addr, byte[]? buffer, int len)
		{
			const string __id = "read_Api.(I[BI)I";
			IntPtr native_buffer = JNIEnv.NewArray (buffer);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (addr);
				__args [1] = new JniArgumentValue (native_buffer);
				__args [2] = new JniArgumentValue (len);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (buffer != null) {
					JNIEnv.CopyArray (native_buffer, buffer);
					JNIEnv.DeleteLocalRef (native_buffer);
				}
				global::System.GC.KeepAlive (buffer);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AT24CApi']/method[@name='write_Api' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='byte[]'] and parameter[3][@type='int']]"
		[Register ("write_Api", "(I[BI)I", "")]
		public static unsafe int Write_Api (int addr, byte[]? data, int len)
		{
			const string __id = "write_Api.(I[BI)I";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (addr);
				__args [1] = new JniArgumentValue (native_data);
				__args [2] = new JniArgumentValue (len);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

	}
}
