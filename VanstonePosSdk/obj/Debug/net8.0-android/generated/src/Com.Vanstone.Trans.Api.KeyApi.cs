//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyApi']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/KeyApi", DoNotGenerateAcw=true)]
	public partial class KeyApi : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyApi']/field[@name='KEYCODE']"
		[Register ("KEYCODE")]
		public static int Keycode {
			get {
				const string __id = "KEYCODE.I";

				var __v = _members.StaticFields.GetInt32Value (__id);
				return __v;
			}
			set {
				const string __id = "KEYCODE.I";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/KeyApi", typeof (KeyApi));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected KeyApi (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyApi']/constructor[@name='KeyApi' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe KeyApi () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public static unsafe int Key_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyApi']/method[@name='GetKey_Api' and count(parameter)=0]"
			[Register ("GetKey_Api", "()I", "")]
			get {
				const string __id = "GetKey_Api.()I";
				try {
					var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyApi']/method[@name='SetKey_Api' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("SetKey_Api", "(I)V", "")]
			set {
				const string __id = "SetKey_Api.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyApi']/method[@name='KBFlush_Api' and count(parameter)=0]"
		[Register ("KBFlush_Api", "()V", "")]
		public static unsafe void KBFlush_Api ()
		{
			const string __id = "KBFlush_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyApi']/method[@name='TipAndWaitEx_Api' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("TipAndWaitEx_Api", "(Ljava/lang/String;)V", "")]
		public static unsafe void TipAndWaitEx_Api (string? fmt)
		{
			const string __id = "TipAndWaitEx_Api.(Ljava/lang/String;)V";
			IntPtr native_fmt = JNIEnv.NewString ((string?)fmt);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_fmt);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_fmt);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyApi']/method[@name='WaitAnyKey_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("WaitAnyKey_Api", "(I)I", "")]
		public static unsafe int WaitAnyKey_Api (int iTimeOut)
		{
			const string __id = "WaitAnyKey_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (iTimeOut);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyApi']/method[@name='WaitEnterAndEscKey_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("WaitEnterAndEscKey_Api", "(I)I", "")]
		public static unsafe int WaitEnterAndEscKey_Api (int TimeOut)
		{
			const string __id = "WaitEnterAndEscKey_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (TimeOut);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyApi']/method[@name='WaitKey_Api' and count(parameter)=0]"
		[Register ("WaitKey_Api", "()I", "")]
		public static unsafe int WaitKey_Api ()
		{
			const string __id = "WaitKey_Api.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyApi']/method[@name='WaitKey_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("WaitKey_Api", "(I)I", "")]
		public static unsafe int WaitKey_Api (int TimeOut)
		{
			const string __id = "WaitKey_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (TimeOut);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

	}
}
