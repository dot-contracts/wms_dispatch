//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/SerialPort", DoNotGenerateAcw=true)]
	public partial class SerialPort : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B0']"
		[Register ("B0")]
		public const int B0 = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B1000000']"
		[Register ("B1000000")]
		public const int B1000000 = (int) 1000000;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B110']"
		[Register ("B110")]
		public const int B110 = (int) 110;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B115200']"
		[Register ("B115200")]
		public const int B115200 = (int) 115200;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B1152000']"
		[Register ("B1152000")]
		public const int B1152000 = (int) 1152000;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B1200']"
		[Register ("B1200")]
		public const int B1200 = (int) 1200;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B150']"
		[Register ("B150")]
		public const int B150 = (int) 150;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B1500000']"
		[Register ("B1500000")]
		public const int B1500000 = (int) 1500000;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B1800']"
		[Register ("B1800")]
		public const int B1800 = (int) 1800;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B19200']"
		[Register ("B19200")]
		public const int B19200 = (int) 19200;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B200']"
		[Register ("B200")]
		public const int B200 = (int) 200;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B2000000']"
		[Register ("B2000000")]
		public const int B2000000 = (int) 2000000;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B230400']"
		[Register ("B230400")]
		public const int B230400 = (int) 230400;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B2400']"
		[Register ("B2400")]
		public const int B2400 = (int) 2400;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B2500000']"
		[Register ("B2500000")]
		public const int B2500000 = (int) 2500000;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B300']"
		[Register ("B300")]
		public const int B300 = (int) 300;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B3000000']"
		[Register ("B3000000")]
		public const int B3000000 = (int) 3000000;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B3500000']"
		[Register ("B3500000")]
		public const int B3500000 = (int) 3500000;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B38400']"
		[Register ("B38400")]
		public const int B38400 = (int) 38400;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B4000000']"
		[Register ("B4000000")]
		public const int B4000000 = (int) 4000000;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B460800']"
		[Register ("B460800")]
		public const int B460800 = (int) 460800;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B4800']"
		[Register ("B4800")]
		public const int B4800 = (int) 4800;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B50']"
		[Register ("B50")]
		public const int B50 = (int) 50;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B500000']"
		[Register ("B500000")]
		public const int B500000 = (int) 500000;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B57600']"
		[Register ("B57600")]
		public const int B57600 = (int) 57600;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B576000']"
		[Register ("B576000")]
		public const int B576000 = (int) 576000;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B600']"
		[Register ("B600")]
		public const int B600 = (int) 600;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B75']"
		[Register ("B75")]
		public const int B75 = (int) 75;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B921600']"
		[Register ("B921600")]
		public const int B921600 = (int) 921600;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='B9600']"
		[Register ("B9600")]
		public const int B9600 = (int) 9600;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='PARAM_ERROR']"
		[Register ("PARAM_ERROR")]
		public const int ParamError = (int) -100;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='PORT_NUM_GSMPORT']"
		[Register ("PORT_NUM_GSMPORT")]
		public const int PortNumGsmport = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='PORT_NUM_TTYHSL0']"
		[Register ("PORT_NUM_TTYHSL0")]
		public const int PortNumTtyhsl0 = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='SERIAL_ERROR_BAUDRATE']"
		[Register ("SERIAL_ERROR_BAUDRATE")]
		public const int SerialErrorBaudrate = (int) -3;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='SERIAL_ERROR_CRC']"
		[Register ("SERIAL_ERROR_CRC")]
		public const int SerialErrorCrc = (int) -9;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='SERIAL_ERROR_EMPTY']"
		[Register ("SERIAL_ERROR_EMPTY")]
		public const int SerialErrorEmpty = (int) -11;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='SERIAL_ERROR_OPEN']"
		[Register ("SERIAL_ERROR_OPEN")]
		public const int SerialErrorOpen = (int) -2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='SERIAL_ERROR_READ']"
		[Register ("SERIAL_ERROR_READ")]
		public const int SerialErrorRead = (int) -4;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='SERIAL_ERROR_SETTING']"
		[Register ("SERIAL_ERROR_SETTING")]
		public const int SerialErrorSetting = (int) -6;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='SERIAL_ERROR_TIMEOUT']"
		[Register ("SERIAL_ERROR_TIMEOUT")]
		public const int SerialErrorTimeout = (int) -10;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='SERIAL_ERROR_WRITE']"
		[Register ("SERIAL_ERROR_WRITE")]
		public const int SerialErrorWrite = (int) -5;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='SERIAL_INVALID_FILE']"
		[Register ("SERIAL_INVALID_FILE")]
		public const int SerialInvalidFile = (int) -8;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='SERIAL_INVALID_RESOURCE']"
		[Register ("SERIAL_INVALID_RESOURCE")]
		public const int SerialInvalidResource = (int) -7;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='SERIAL_RESULT_OK']"
		[Register ("SERIAL_RESULT_OK")]
		public const int SerialResultOk = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/field[@name='SERIAL_UN_OPEN']"
		[Register ("SERIAL_UN_OPEN")]
		public const int SerialUnOpen = (int) -1;

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/SerialPort", typeof (SerialPort));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected SerialPort (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/constructor[@name='SerialPort' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe SerialPort () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/method[@name='available_Api' and count(parameter)=0]"
		[Register ("available_Api", "()I", "")]
		public static unsafe int Available_Api ()
		{
			const string __id = "available_Api.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/method[@name='available_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("available_Api", "(I)I", "")]
		public static unsafe int Available_Api (int timeout)
		{
			const string __id = "available_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (timeout);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/method[@name='close_Api' and count(parameter)=0]"
		[Register ("close_Api", "()I", "")]
		public static unsafe int Close_Api ()
		{
			const string __id = "close_Api.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/method[@name='open_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("open_Api", "(II)I", "")]
		public static unsafe int Open_Api (int portNum, int baudRate)
		{
			const string __id = "open_Api.(II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (portNum);
				__args [1] = new JniArgumentValue (baudRate);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/method[@name='read_Api' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("read_Api", "([B)I", "")]
		public static unsafe int Read_Api (byte[]? buf)
		{
			const string __id = "read_Api.([B)I";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_buf);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/method[@name='read_Api' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("read_Api", "([BII)I", "")]
		public static unsafe int Read_Api (byte[]? buf, int off, int len)
		{
			const string __id = "read_Api.([BII)I";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_buf);
				__args [1] = new JniArgumentValue (off);
				__args [2] = new JniArgumentValue (len);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/method[@name='write_Api' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("write_Api", "([B)I", "")]
		public static unsafe int Write_Api (byte[]? buf)
		{
			const string __id = "write_Api.([B)I";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_buf);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SerialPort']/method[@name='write_Api' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("write_Api", "([BII)I", "")]
		public static unsafe int Write_Api (byte[]? buf, int off, int len)
		{
			const string __id = "write_Api.([BII)I";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_buf);
				__args [1] = new JniArgumentValue (off);
				__args [2] = new JniArgumentValue (len);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

	}
}
