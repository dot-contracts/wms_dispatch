//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api.Struct {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='FileInfo']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/struct/FileInfo", DoNotGenerateAcw=true)]
	public partial class FileInfo : global::Java.Lang.Object, global::Com.Vanstone.Base.Interfaces.IStructInterface {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/struct/FileInfo", typeof (FileInfo));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected FileInfo (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='FileInfo']/constructor[@name='FileInfo' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe FileInfo () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getAttr;
#pragma warning disable 0169
		static Delegate GetGetAttrHandler ()
		{
			if (cb_getAttr == null)
				cb_getAttr = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_B (n_GetAttr));
			return cb_getAttr;
		}

		static sbyte n_GetAttr (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.FileInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Attr;
		}
#pragma warning restore 0169

		static Delegate? cb_setAttr_B;
#pragma warning disable 0169
		static Delegate GetSetAttr_BHandler ()
		{
			if (cb_setAttr_B == null)
				cb_setAttr_B = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPB_V (n_SetAttr_B));
			return cb_setAttr_B;
		}

		static void n_SetAttr_B (IntPtr jnienv, IntPtr native__this, sbyte attr)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.FileInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Attr = attr;
		}
#pragma warning restore 0169

		public virtual unsafe sbyte Attr {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='FileInfo']/method[@name='getAttr' and count(parameter)=0]"
			[Register ("getAttr", "()B", "GetGetAttrHandler")]
			get {
				const string __id = "getAttr.()B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSByteMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='FileInfo']/method[@name='setAttr' and count(parameter)=1 and parameter[1][@type='byte']]"
			[Register ("setAttr", "(B)V", "GetSetAttr_BHandler")]
			set {
				const string __id = "setAttr.(B)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getLength;
#pragma warning disable 0169
		static Delegate GetGetLengthHandler ()
		{
			if (cb_getLength == null)
				cb_getLength = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_J (n_GetLength));
			return cb_getLength;
		}

		static long n_GetLength (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.FileInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Length;
		}
#pragma warning restore 0169

		static Delegate? cb_setLength_J;
#pragma warning disable 0169
		static Delegate GetSetLength_JHandler ()
		{
			if (cb_setLength_J == null)
				cb_setLength_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPJ_V (n_SetLength_J));
			return cb_setLength_J;
		}

		static void n_SetLength_J (IntPtr jnienv, IntPtr native__this, long length)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.FileInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Length = length;
		}
#pragma warning restore 0169

		public virtual unsafe long Length {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='FileInfo']/method[@name='getLength' and count(parameter)=0]"
			[Register ("getLength", "()J", "GetGetLengthHandler")]
			get {
				const string __id = "getLength.()J";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt64Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='FileInfo']/method[@name='setLength' and count(parameter)=1 and parameter[1][@type='long']]"
			[Register ("setLength", "(J)V", "GetSetLength_JHandler")]
			set {
				const string __id = "setLength.(J)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getType;
#pragma warning disable 0169
		static Delegate GetGetTypeHandler ()
		{
			if (cb_getType == null)
				cb_getType = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_B (n_GetType));
			return cb_getType;
		}

		static sbyte n_GetType (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.FileInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Type;
		}
#pragma warning restore 0169

		static Delegate? cb_setType_B;
#pragma warning disable 0169
		static Delegate GetSetType_BHandler ()
		{
			if (cb_setType_B == null)
				cb_setType_B = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPB_V (n_SetType_B));
			return cb_setType_B;
		}

		static void n_SetType_B (IntPtr jnienv, IntPtr native__this, sbyte type)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.FileInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Type = type;
		}
#pragma warning restore 0169

		public virtual unsafe sbyte Type {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='FileInfo']/method[@name='getType' and count(parameter)=0]"
			[Register ("getType", "()B", "GetGetTypeHandler")]
			get {
				const string __id = "getType.()B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSByteMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='FileInfo']/method[@name='setType' and count(parameter)=1 and parameter[1][@type='byte']]"
			[Register ("setType", "(B)V", "GetSetType_BHandler")]
			set {
				const string __id = "setType.(B)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getName;
#pragma warning disable 0169
		static Delegate GetGetNameHandler ()
		{
			if (cb_getName == null)
				cb_getName = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetName));
			return cb_getName;
		}

		static IntPtr n_GetName (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.FileInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetName ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='FileInfo']/method[@name='getName' and count(parameter)=0]"
		[Register ("getName", "()[B", "GetGetNameHandler")]
		public virtual unsafe byte[]? GetName ()
		{
			const string __id = "getName.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_setName_arrayB;
#pragma warning disable 0169
		static Delegate GetSetName_arrayBHandler ()
		{
			if (cb_setName_arrayB == null)
				cb_setName_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetName_arrayB));
			return cb_setName_arrayB;
		}

		static void n_SetName_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.FileInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = (byte[]?) JNIEnv.GetArray (native_name, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetName (name);
			if (name != null)
				JNIEnv.CopyArray (name, native_name);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='FileInfo']/method[@name='setName' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setName", "([B)V", "GetSetName_arrayBHandler")]
		public virtual unsafe void SetName (byte[]? name)
		{
			const string __id = "setName.([B)V";
			IntPtr native_name = JNIEnv.NewArray (name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (name != null) {
					JNIEnv.CopyArray (native_name, name);
					JNIEnv.DeleteLocalRef (native_name);
				}
				global::System.GC.KeepAlive (name);
			}
		}

		static Delegate? cb_size;
#pragma warning disable 0169
		static Delegate GetSizeHandler ()
		{
			if (cb_size == null)
				cb_size = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Size));
			return cb_size;
		}

		static int n_Size (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.FileInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Size ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='FileInfo']/method[@name='size' and count(parameter)=0]"
		[Register ("size", "()I", "GetSizeHandler")]
		public virtual unsafe int Size ()
		{
			const string __id = "size.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_toBean_arrayB;
#pragma warning disable 0169
		static Delegate GetToBean_arrayBHandler ()
		{
			if (cb_toBean_arrayB == null)
				cb_toBean_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ToBean_arrayB));
			return cb_toBean_arrayB;
		}

		static void n_ToBean_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_buf)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.FileInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var buf = (byte[]?) JNIEnv.GetArray (native_buf, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.ToBean (buf);
			if (buf != null)
				JNIEnv.CopyArray (buf, native_buf);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='FileInfo']/method[@name='toBean' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("toBean", "([B)V", "GetToBean_arrayBHandler")]
		public virtual unsafe void ToBean (byte[]? buf)
		{
			const string __id = "toBean.([B)V";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_buf);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		static Delegate? cb_toBytes;
#pragma warning disable 0169
		static Delegate GetToBytesHandler ()
		{
			if (cb_toBytes == null)
				cb_toBytes = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToBytes));
			return cb_toBytes;
		}

		static IntPtr n_ToBytes (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.FileInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.ToBytes ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='FileInfo']/method[@name='toBytes' and count(parameter)=0]"
		[Register ("toBytes", "()[B", "GetToBytesHandler")]
		public virtual unsafe byte[]? ToBytes ()
		{
			const string __id = "toBytes.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

	}
}
