//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Utils {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniReader']"
	[global::Android.Runtime.Register ("com/vanstone/utils/IniReader", DoNotGenerateAcw=true)]
	public partial class IniReader : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniReader']/field[@name='sections']"
		[Register ("sections")]
		protected global::System.Collections.IDictionary? Sections {
			get {
				const string __id = "sections.Ljava/util/HashMap;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Android.Runtime.JavaDictionary.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "sections.Ljava/util/HashMap;";

				IntPtr native_value = global::Android.Runtime.JavaDictionary.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/IniReader", typeof (IniReader));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected IniReader (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniReader']/constructor[@name='IniReader' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register (".ctor", "(Ljava/lang/String;)V", "")]
		public unsafe IniReader (string? filename) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_filename = JNIEnv.NewString ((string?)filename);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_filename);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_filename);
			}
		}

		static Delegate? cb_getValue_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetGetValue_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_getValue_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_getValue_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_GetValue_Ljava_lang_String_Ljava_lang_String_));
			return cb_getValue_Ljava_lang_String_Ljava_lang_String_;
		}

		static IntPtr n_GetValue_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_section, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var section = JNIEnv.GetString (native_section, JniHandleOwnership.DoNotTransfer);
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewString (__this.GetValue (section, name));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniReader']/method[@name='getValue' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("getValue", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetGetValue_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe string? GetValue (string? section, string? name)
		{
			const string __id = "getValue.(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_section = JNIEnv.NewString ((string?)section);
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_section);
				__args [1] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_section);
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_parseLine_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetParseLine_Ljava_lang_String_Handler ()
		{
			if (cb_parseLine_Ljava_lang_String_ == null)
				cb_parseLine_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ParseLine_Ljava_lang_String_));
			return cb_parseLine_Ljava_lang_String_;
		}

		static void n_ParseLine_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_line)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var line = JNIEnv.GetString (native_line, JniHandleOwnership.DoNotTransfer);
			__this.ParseLine (line);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniReader']/method[@name='parseLine' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("parseLine", "(Ljava/lang/String;)V", "GetParseLine_Ljava_lang_String_Handler")]
		protected virtual unsafe void ParseLine (string? line)
		{
			const string __id = "parseLine.(Ljava/lang/String;)V";
			IntPtr native_line = JNIEnv.NewString ((string?)line);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_line);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_line);
			}
		}

		static Delegate? cb_read_Ljava_io_BufferedReader_;
#pragma warning disable 0169
		static Delegate GetRead_Ljava_io_BufferedReader_Handler ()
		{
			if (cb_read_Ljava_io_BufferedReader_ == null)
				cb_read_Ljava_io_BufferedReader_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Read_Ljava_io_BufferedReader_));
			return cb_read_Ljava_io_BufferedReader_;
		}

		static void n_Read_Ljava_io_BufferedReader_ (IntPtr jnienv, IntPtr native__this, IntPtr native_reader)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var reader = global::Java.Lang.Object.GetObject<global::Java.IO.BufferedReader> (native_reader, JniHandleOwnership.DoNotTransfer);
			__this.Read (reader);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniReader']/method[@name='read' and count(parameter)=1 and parameter[1][@type='java.io.BufferedReader']]"
		[Register ("read", "(Ljava/io/BufferedReader;)V", "GetRead_Ljava_io_BufferedReader_Handler")]
		protected virtual unsafe void Read (global::Java.IO.BufferedReader? reader)
		{
			const string __id = "read.(Ljava/io/BufferedReader;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((reader == null) ? IntPtr.Zero : ((global::Java.Lang.Object) reader).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (reader);
			}
		}

	}
}
