//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Utils {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.utils']/class[@name='TrafficInfos']"
	[global::Android.Runtime.Register ("com/vanstone/utils/TrafficInfos", DoNotGenerateAcw=true)]
	public partial class TrafficInfos : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/TrafficInfos", typeof (TrafficInfos));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected TrafficInfos (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='TrafficInfos']/constructor[@name='TrafficInfos' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe TrafficInfos () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='TrafficInfos']/constructor[@name='TrafficInfos' and count(parameter)=4 and parameter[1][@type='android.graphics.drawable.Drawable'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int']]"
		[Register (".ctor", "(Landroid/graphics/drawable/Drawable;Ljava/lang/String;Ljava/lang/String;I)V", "")]
		public unsafe TrafficInfos (global::Android.Graphics.Drawables.Drawable? icon, string? appname, string? packname, int uid) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/graphics/drawable/Drawable;Ljava/lang/String;Ljava/lang/String;I)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_appname = JNIEnv.NewString ((string?)appname);
			IntPtr native_packname = JNIEnv.NewString ((string?)packname);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((icon == null) ? IntPtr.Zero : ((global::Java.Lang.Object) icon).Handle);
				__args [1] = new JniArgumentValue (native_appname);
				__args [2] = new JniArgumentValue (native_packname);
				__args [3] = new JniArgumentValue (uid);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_appname);
				JNIEnv.DeleteLocalRef (native_packname);
				global::System.GC.KeepAlive (icon);
			}
		}

		static Delegate? cb_getAppname;
#pragma warning disable 0169
		static Delegate GetGetAppnameHandler ()
		{
			if (cb_getAppname == null)
				cb_getAppname = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetAppname));
			return cb_getAppname;
		}

		static IntPtr n_GetAppname (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.TrafficInfos> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Appname);
		}
#pragma warning restore 0169

		static Delegate? cb_setAppname_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetAppname_Ljava_lang_String_Handler ()
		{
			if (cb_setAppname_Ljava_lang_String_ == null)
				cb_setAppname_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetAppname_Ljava_lang_String_));
			return cb_setAppname_Ljava_lang_String_;
		}

		static void n_SetAppname_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_appname)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.TrafficInfos> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var appname = JNIEnv.GetString (native_appname, JniHandleOwnership.DoNotTransfer);
			__this.Appname = appname;
		}
#pragma warning restore 0169

		public virtual unsafe string? Appname {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='TrafficInfos']/method[@name='getAppname' and count(parameter)=0]"
			[Register ("getAppname", "()Ljava/lang/String;", "GetGetAppnameHandler")]
			get {
				const string __id = "getAppname.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='TrafficInfos']/method[@name='setAppname' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setAppname", "(Ljava/lang/String;)V", "GetSetAppname_Ljava_lang_String_Handler")]
			set {
				const string __id = "setAppname.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getIcon;
#pragma warning disable 0169
		static Delegate GetGetIconHandler ()
		{
			if (cb_getIcon == null)
				cb_getIcon = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetIcon));
			return cb_getIcon;
		}

		static IntPtr n_GetIcon (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.TrafficInfos> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Icon);
		}
#pragma warning restore 0169

		static Delegate? cb_setIcon_Landroid_graphics_drawable_Drawable_;
#pragma warning disable 0169
		static Delegate GetSetIcon_Landroid_graphics_drawable_Drawable_Handler ()
		{
			if (cb_setIcon_Landroid_graphics_drawable_Drawable_ == null)
				cb_setIcon_Landroid_graphics_drawable_Drawable_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetIcon_Landroid_graphics_drawable_Drawable_));
			return cb_setIcon_Landroid_graphics_drawable_Drawable_;
		}

		static void n_SetIcon_Landroid_graphics_drawable_Drawable_ (IntPtr jnienv, IntPtr native__this, IntPtr native_icon)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.TrafficInfos> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var icon = global::Java.Lang.Object.GetObject<global::Android.Graphics.Drawables.Drawable> (native_icon, JniHandleOwnership.DoNotTransfer);
			__this.Icon = icon;
		}
#pragma warning restore 0169

		public virtual unsafe global::Android.Graphics.Drawables.Drawable? Icon {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='TrafficInfos']/method[@name='getIcon' and count(parameter)=0]"
			[Register ("getIcon", "()Landroid/graphics/drawable/Drawable;", "GetGetIconHandler")]
			get {
				const string __id = "getIcon.()Landroid/graphics/drawable/Drawable;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Android.Graphics.Drawables.Drawable> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='TrafficInfos']/method[@name='setIcon' and count(parameter)=1 and parameter[1][@type='android.graphics.drawable.Drawable']]"
			[Register ("setIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetIcon_Landroid_graphics_drawable_Drawable_Handler")]
			set {
				const string __id = "setIcon.(Landroid/graphics/drawable/Drawable;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		static Delegate? cb_getPackname;
#pragma warning disable 0169
		static Delegate GetGetPacknameHandler ()
		{
			if (cb_getPackname == null)
				cb_getPackname = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetPackname));
			return cb_getPackname;
		}

		static IntPtr n_GetPackname (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.TrafficInfos> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Packname);
		}
#pragma warning restore 0169

		static Delegate? cb_setPackname_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetPackname_Ljava_lang_String_Handler ()
		{
			if (cb_setPackname_Ljava_lang_String_ == null)
				cb_setPackname_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetPackname_Ljava_lang_String_));
			return cb_setPackname_Ljava_lang_String_;
		}

		static void n_SetPackname_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_packname)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.TrafficInfos> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var packname = JNIEnv.GetString (native_packname, JniHandleOwnership.DoNotTransfer);
			__this.Packname = packname;
		}
#pragma warning restore 0169

		public virtual unsafe string? Packname {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='TrafficInfos']/method[@name='getPackname' and count(parameter)=0]"
			[Register ("getPackname", "()Ljava/lang/String;", "GetGetPacknameHandler")]
			get {
				const string __id = "getPackname.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='TrafficInfos']/method[@name='setPackname' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setPackname", "(Ljava/lang/String;)V", "GetSetPackname_Ljava_lang_String_Handler")]
			set {
				const string __id = "setPackname.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getUid;
#pragma warning disable 0169
		static Delegate GetGetUidHandler ()
		{
			if (cb_getUid == null)
				cb_getUid = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetUid));
			return cb_getUid;
		}

		static int n_GetUid (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.TrafficInfos> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Uid;
		}
#pragma warning restore 0169

		static Delegate? cb_setUid_I;
#pragma warning disable 0169
		static Delegate GetSetUid_IHandler ()
		{
			if (cb_setUid_I == null)
				cb_setUid_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetUid_I));
			return cb_setUid_I;
		}

		static void n_SetUid_I (IntPtr jnienv, IntPtr native__this, int uid)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.TrafficInfos> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Uid = uid;
		}
#pragma warning restore 0169

		public virtual unsafe int Uid {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='TrafficInfos']/method[@name='getUid' and count(parameter)=0]"
			[Register ("getUid", "()I", "GetGetUidHandler")]
			get {
				const string __id = "getUid.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='TrafficInfos']/method[@name='setUid' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setUid", "(I)V", "GetSetUid_IHandler")]
			set {
				const string __id = "setUid.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

	}
}
