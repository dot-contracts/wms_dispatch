//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Utils {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.utils']/class[@name='DateUtils']"
	[global::Android.Runtime.Register ("com/vanstone/utils/DateUtils", DoNotGenerateAcw=true)]
	public sealed partial class DateUtils : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/DateUtils", typeof (DateUtils));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal DateUtils (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='DateUtils']/constructor[@name='DateUtils' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe DateUtils () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='DateUtils']/method[@name='addCurDate' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("addCurDate", "(Ljava/lang/String;I)Ljava/lang/String;", "")]
		public static unsafe string? AddCurDate (string? format, int days)
		{
			const string __id = "addCurDate.(Ljava/lang/String;I)Ljava/lang/String;";
			IntPtr native_format = JNIEnv.NewString ((string?)format);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_format);
				__args [1] = new JniArgumentValue (days);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_format);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='DateUtils']/method[@name='format' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("format", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string? Format (string? date, string? org_format, string? dest_format)
		{
			const string __id = "format.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_date = JNIEnv.NewString ((string?)date);
			IntPtr native_org_format = JNIEnv.NewString ((string?)org_format);
			IntPtr native_dest_format = JNIEnv.NewString ((string?)dest_format);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_date);
				__args [1] = new JniArgumentValue (native_org_format);
				__args [2] = new JniArgumentValue (native_dest_format);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_date);
				JNIEnv.DeleteLocalRef (native_org_format);
				JNIEnv.DeleteLocalRef (native_dest_format);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='DateUtils']/method[@name='format' and count(parameter)=2 and parameter[1][@type='java.util.Date'] and parameter[2][@type='java.lang.String']]"
		[Register ("format", "(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string? Format (global::Java.Util.Date? date, string? format)
		{
			const string __id = "format.(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_format = JNIEnv.NewString ((string?)format);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((date == null) ? IntPtr.Zero : ((global::Java.Lang.Object) date).Handle);
				__args [1] = new JniArgumentValue (native_format);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_format);
				global::System.GC.KeepAlive (date);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='DateUtils']/method[@name='getCurDate' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("getCurDate", "(Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string? GetCurDate (string? format)
		{
			const string __id = "getCurDate.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_format = JNIEnv.NewString ((string?)format);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_format);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_format);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='DateUtils']/method[@name='parse' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("parse", "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Date;", "")]
		public static unsafe global::Java.Util.Date? Parse (string? data, string? format)
		{
			const string __id = "parse.(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Date;";
			IntPtr native_data = JNIEnv.NewString ((string?)data);
			IntPtr native_format = JNIEnv.NewString ((string?)format);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (native_format);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Util.Date> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				JNIEnv.DeleteLocalRef (native_format);
			}
		}

	}
}
