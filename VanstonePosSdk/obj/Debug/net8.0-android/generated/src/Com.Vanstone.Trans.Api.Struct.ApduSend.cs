//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api.Struct {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/struct/ApduSend", DoNotGenerateAcw=true)]
	public partial class ApduSend : global::Java.Lang.Object, global::Com.Vanstone.Base.Interfaces.IStructInterface {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/field[@name='Command']"
		[Register ("Command")]
		public IList<byte>? Command {
			get {
				const string __id = "Command.[B";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Android.Runtime.JavaArray<byte>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "Command.[B";

				IntPtr native_value = global::Android.Runtime.JavaArray<byte>.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/field[@name='DataIn']"
		[Register ("DataIn")]
		public IList<byte>? DataIn {
			get {
				const string __id = "DataIn.[B";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Android.Runtime.JavaArray<byte>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "DataIn.[B";

				IntPtr native_value = global::Android.Runtime.JavaArray<byte>.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/struct/ApduSend", typeof (ApduSend));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ApduSend (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/constructor[@name='ApduSend' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe ApduSend () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getEnableCancel;
#pragma warning disable 0169
		static Delegate GetGetEnableCancelHandler ()
		{
			if (cb_getEnableCancel == null)
				cb_getEnableCancel = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_B (n_GetEnableCancel));
			return cb_getEnableCancel;
		}

		static sbyte n_GetEnableCancel (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApduSend> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.EnableCancel;
		}
#pragma warning restore 0169

		static Delegate? cb_setEnableCancel_B;
#pragma warning disable 0169
		static Delegate GetSetEnableCancel_BHandler ()
		{
			if (cb_setEnableCancel_B == null)
				cb_setEnableCancel_B = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPB_V (n_SetEnableCancel_B));
			return cb_setEnableCancel_B;
		}

		static void n_SetEnableCancel_B (IntPtr jnienv, IntPtr native__this, sbyte enableCancel)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApduSend> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.EnableCancel = enableCancel;
		}
#pragma warning restore 0169

		public virtual unsafe sbyte EnableCancel {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/method[@name='getEnableCancel' and count(parameter)=0]"
			[Register ("getEnableCancel", "()B", "GetGetEnableCancelHandler")]
			get {
				const string __id = "getEnableCancel.()B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSByteMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/method[@name='setEnableCancel' and count(parameter)=1 and parameter[1][@type='byte']]"
			[Register ("setEnableCancel", "(B)V", "GetSetEnableCancel_BHandler")]
			set {
				const string __id = "setEnableCancel.(B)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getLc;
#pragma warning disable 0169
		static Delegate GetGetLcHandler ()
		{
			if (cb_getLc == null)
				cb_getLc = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_S (n_GetLc));
			return cb_getLc;
		}

		static short n_GetLc (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApduSend> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Lc;
		}
#pragma warning restore 0169

		static Delegate? cb_setLc_S;
#pragma warning disable 0169
		static Delegate GetSetLc_SHandler ()
		{
			if (cb_setLc_S == null)
				cb_setLc_S = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPS_V (n_SetLc_S));
			return cb_setLc_S;
		}

		static void n_SetLc_S (IntPtr jnienv, IntPtr native__this, short lc)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApduSend> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Lc = lc;
		}
#pragma warning restore 0169

		public virtual unsafe short Lc {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/method[@name='getLc' and count(parameter)=0]"
			[Register ("getLc", "()S", "GetGetLcHandler")]
			get {
				const string __id = "getLc.()S";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt16Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/method[@name='setLc' and count(parameter)=1 and parameter[1][@type='short']]"
			[Register ("setLc", "(S)V", "GetSetLc_SHandler")]
			set {
				const string __id = "setLc.(S)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getLe;
#pragma warning disable 0169
		static Delegate GetGetLeHandler ()
		{
			if (cb_getLe == null)
				cb_getLe = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_S (n_GetLe));
			return cb_getLe;
		}

		static short n_GetLe (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApduSend> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Le;
		}
#pragma warning restore 0169

		static Delegate? cb_setLe_S;
#pragma warning disable 0169
		static Delegate GetSetLe_SHandler ()
		{
			if (cb_setLe_S == null)
				cb_setLe_S = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPS_V (n_SetLe_S));
			return cb_setLe_S;
		}

		static void n_SetLe_S (IntPtr jnienv, IntPtr native__this, short le)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApduSend> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Le = le;
		}
#pragma warning restore 0169

		public virtual unsafe short Le {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/method[@name='getLe' and count(parameter)=0]"
			[Register ("getLe", "()S", "GetGetLeHandler")]
			get {
				const string __id = "getLe.()S";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt16Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/method[@name='setLe' and count(parameter)=1 and parameter[1][@type='short']]"
			[Register ("setLe", "(S)V", "GetSetLe_SHandler")]
			set {
				const string __id = "setLe.(S)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getCommand;
#pragma warning disable 0169
		static Delegate GetGetCommandHandler ()
		{
			if (cb_getCommand == null)
				cb_getCommand = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetCommand));
			return cb_getCommand;
		}

		static IntPtr n_GetCommand (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApduSend> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetCommand ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/method[@name='getCommand' and count(parameter)=0]"
		[Register ("getCommand", "()[B", "GetGetCommandHandler")]
		public virtual unsafe byte[]? GetCommand ()
		{
			const string __id = "getCommand.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_getDataIn;
#pragma warning disable 0169
		static Delegate GetGetDataInHandler ()
		{
			if (cb_getDataIn == null)
				cb_getDataIn = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetDataIn));
			return cb_getDataIn;
		}

		static IntPtr n_GetDataIn (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApduSend> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetDataIn ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/method[@name='getDataIn' and count(parameter)=0]"
		[Register ("getDataIn", "()[B", "GetGetDataInHandler")]
		public virtual unsafe byte[]? GetDataIn ()
		{
			const string __id = "getDataIn.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_setCommand_arrayB;
#pragma warning disable 0169
		static Delegate GetSetCommand_arrayBHandler ()
		{
			if (cb_setCommand_arrayB == null)
				cb_setCommand_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetCommand_arrayB));
			return cb_setCommand_arrayB;
		}

		static void n_SetCommand_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_command)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApduSend> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var command = (byte[]?) JNIEnv.GetArray (native_command, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetCommand (command);
			if (command != null)
				JNIEnv.CopyArray (command, native_command);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/method[@name='setCommand' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setCommand", "([B)V", "GetSetCommand_arrayBHandler")]
		public virtual unsafe void SetCommand (byte[]? command)
		{
			const string __id = "setCommand.([B)V";
			IntPtr native_command = JNIEnv.NewArray (command);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_command);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (command != null) {
					JNIEnv.CopyArray (native_command, command);
					JNIEnv.DeleteLocalRef (native_command);
				}
				global::System.GC.KeepAlive (command);
			}
		}

		static Delegate? cb_setDataIn_arrayB;
#pragma warning disable 0169
		static Delegate GetSetDataIn_arrayBHandler ()
		{
			if (cb_setDataIn_arrayB == null)
				cb_setDataIn_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetDataIn_arrayB));
			return cb_setDataIn_arrayB;
		}

		static void n_SetDataIn_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_dataIn)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApduSend> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var dataIn = (byte[]?) JNIEnv.GetArray (native_dataIn, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetDataIn (dataIn);
			if (dataIn != null)
				JNIEnv.CopyArray (dataIn, native_dataIn);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/method[@name='setDataIn' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setDataIn", "([B)V", "GetSetDataIn_arrayBHandler")]
		public virtual unsafe void SetDataIn (byte[]? dataIn)
		{
			const string __id = "setDataIn.([B)V";
			IntPtr native_dataIn = JNIEnv.NewArray (dataIn);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_dataIn);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (dataIn != null) {
					JNIEnv.CopyArray (native_dataIn, dataIn);
					JNIEnv.DeleteLocalRef (native_dataIn);
				}
				global::System.GC.KeepAlive (dataIn);
			}
		}

		static Delegate? cb_size;
#pragma warning disable 0169
		static Delegate GetSizeHandler ()
		{
			if (cb_size == null)
				cb_size = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Size));
			return cb_size;
		}

		static int n_Size (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApduSend> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Size ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/method[@name='size' and count(parameter)=0]"
		[Register ("size", "()I", "GetSizeHandler")]
		public virtual unsafe int Size ()
		{
			const string __id = "size.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_toBean_arrayB;
#pragma warning disable 0169
		static Delegate GetToBean_arrayBHandler ()
		{
			if (cb_toBean_arrayB == null)
				cb_toBean_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ToBean_arrayB));
			return cb_toBean_arrayB;
		}

		static void n_ToBean_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_buf)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApduSend> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var buf = (byte[]?) JNIEnv.GetArray (native_buf, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.ToBean (buf);
			if (buf != null)
				JNIEnv.CopyArray (buf, native_buf);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/method[@name='toBean' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("toBean", "([B)V", "GetToBean_arrayBHandler")]
		public virtual unsafe void ToBean (byte[]? buf)
		{
			const string __id = "toBean.([B)V";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_buf);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		static Delegate? cb_toBytes;
#pragma warning disable 0169
		static Delegate GetToBytesHandler ()
		{
			if (cb_toBytes == null)
				cb_toBytes = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToBytes));
			return cb_toBytes;
		}

		static IntPtr n_ToBytes (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApduSend> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.ToBytes ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApduSend']/method[@name='toBytes' and count(parameter)=0]"
		[Register ("toBytes", "()[B", "GetToBytesHandler")]
		public virtual unsafe byte[]? ToBytes ()
		{
			const string __id = "toBytes.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

	}
}
