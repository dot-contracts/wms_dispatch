//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Utils {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']"
	[global::Android.Runtime.Register ("com/vanstone/utils/IniProperties", DoNotGenerateAcw=true)]
	public partial class IniProperties : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/field[@name='charset']"
		[Register ("charset")]
		public string? Charset {
			get {
				const string __id = "charset.Ljava/lang/String;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "charset.Ljava/lang/String;";

				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.NoSuchSectionException']"
		[global::Android.Runtime.Register ("com/vanstone/utils/IniProperties$NoSuchSectionException", DoNotGenerateAcw=true)]
		public partial class NoSuchSectionException : global::Java.Lang.RuntimeException {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/IniProperties$NoSuchSectionException", typeof (NoSuchSectionException));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected NoSuchSectionException (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.NoSuchSectionException']/constructor[@name='IniProperties.NoSuchSectionException' and count(parameter)=0]"
			[Register (".ctor", "()V", "")]
			public unsafe NoSuchSectionException () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";

				if (((global::Java.Lang.Throwable) this).Handle != IntPtr.Zero)
					return;

				try {
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, null);
				} finally {
				}
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.NoSuchSectionException']/constructor[@name='IniProperties.NoSuchSectionException' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register (".ctor", "(Ljava/lang/String;)V", "")]
			public unsafe NoSuchSectionException (string? msg) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/String;)V";

				if (((global::Java.Lang.Throwable) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_msg = JNIEnv.NewString ((string?)msg);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_msg);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_msg);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']"
		[global::Android.Runtime.Register ("com/vanstone/utils/IniProperties$Section", DoNotGenerateAcw=true)]
		public partial class Section : global::Java.Lang.Object {
			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/field[@name='DEFAULT_OPTION_FORMAT']"
			[Register ("DEFAULT_OPTION_FORMAT")]
			public const string DefaultOptionFormat = (string) "%s%s%s";

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/field[@name='HEADER_END']"
			[Register ("HEADER_END")]
			public const char HeaderEnd = (char) (char)93;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/field[@name='HEADER_START']"
			[Register ("HEADER_START")]
			public const char HeaderStart = (char) (char)91;

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/IniProperties$Section", typeof (Section));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected Section (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/constructor[@name='IniProperties.Section' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register (".ctor", "(Ljava/lang/String;)V", "")]
			public unsafe Section (string? name) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/String;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_name = JNIEnv.NewString ((string?)name);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_name);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_name);
				}
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/constructor[@name='IniProperties.Section' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]"
			[Register (".ctor", "(Ljava/lang/String;Z)V", "")]
			public unsafe Section (string? name, bool isCaseSensitive) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/String;Z)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_name = JNIEnv.NewString ((string?)name);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_name);
					__args [1] = new JniArgumentValue (isCaseSensitive);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_name);
				}
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/constructor[@name='IniProperties.Section' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='char[]']]"
			[Register (".ctor", "(Ljava/lang/String;[C)V", "")]
			public unsafe Section (string? name, char[]? delims) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/String;[C)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_name = JNIEnv.NewString ((string?)name);
				IntPtr native_delims = JNIEnv.NewArray (delims);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_name);
					__args [1] = new JniArgumentValue (native_delims);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_name);
					if (delims != null) {
						JNIEnv.CopyArray (native_delims, delims);
						JNIEnv.DeleteLocalRef (native_delims);
					}
					global::System.GC.KeepAlive (delims);
				}
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/constructor[@name='IniProperties.Section' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='char[]'] and parameter[3][@type='boolean']]"
			[Register (".ctor", "(Ljava/lang/String;[CZ)V", "")]
			public unsafe Section (string? name, char[]? delims, bool isCaseSensitive) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/String;[CZ)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_name = JNIEnv.NewString ((string?)name);
				IntPtr native_delims = JNIEnv.NewArray (delims);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [3];
					__args [0] = new JniArgumentValue (native_name);
					__args [1] = new JniArgumentValue (native_delims);
					__args [2] = new JniArgumentValue (isCaseSensitive);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_name);
					if (delims != null) {
						JNIEnv.CopyArray (native_delims, delims);
						JNIEnv.DeleteLocalRef (native_delims);
					}
					global::System.GC.KeepAlive (delims);
				}
			}

			static Delegate? cb_addBlankLine;
#pragma warning disable 0169
			static Delegate GetAddBlankLineHandler ()
			{
				if (cb_addBlankLine == null)
					cb_addBlankLine = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_AddBlankLine));
				return cb_addBlankLine;
			}

			static void n_AddBlankLine (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties.Section> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.AddBlankLine ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/method[@name='addBlankLine' and count(parameter)=0]"
			[Register ("addBlankLine", "()V", "GetAddBlankLineHandler")]
			public virtual unsafe void AddBlankLine ()
			{
				const string __id = "addBlankLine.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_addComment_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetAddComment_Ljava_lang_String_Handler ()
			{
				if (cb_addComment_Ljava_lang_String_ == null)
					cb_addComment_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddComment_Ljava_lang_String_));
				return cb_addComment_Ljava_lang_String_;
			}

			static void n_AddComment_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_comment)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties.Section> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var comment = JNIEnv.GetString (native_comment, JniHandleOwnership.DoNotTransfer);
				__this.AddComment (comment);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/method[@name='addComment' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("addComment", "(Ljava/lang/String;)V", "GetAddComment_Ljava_lang_String_Handler")]
			public virtual unsafe void AddComment (string? comment)
			{
				const string __id = "addComment.(Ljava/lang/String;)V";
				IntPtr native_comment = JNIEnv.NewString ((string?)comment);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_comment);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_comment);
				}
			}

			static Delegate? cb_addComment_Ljava_lang_String_C;
#pragma warning disable 0169
			static Delegate GetAddComment_Ljava_lang_String_CHandler ()
			{
				if (cb_addComment_Ljava_lang_String_C == null)
					cb_addComment_Ljava_lang_String_C = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLC_V (n_AddComment_Ljava_lang_String_C));
				return cb_addComment_Ljava_lang_String_C;
			}

			static void n_AddComment_Ljava_lang_String_C (IntPtr jnienv, IntPtr native__this, IntPtr native_comment, char delim)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties.Section> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var comment = JNIEnv.GetString (native_comment, JniHandleOwnership.DoNotTransfer);
				__this.AddComment (comment, delim);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/method[@name='addComment' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='char']]"
			[Register ("addComment", "(Ljava/lang/String;C)V", "GetAddComment_Ljava_lang_String_CHandler")]
			public virtual unsafe void AddComment (string? comment, char delim)
			{
				const string __id = "addComment.(Ljava/lang/String;C)V";
				IntPtr native_comment = JNIEnv.NewString ((string?)comment);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_comment);
					__args [1] = new JniArgumentValue (delim);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_comment);
				}
			}

			static Delegate? cb_get_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetGet_Ljava_lang_String_Handler ()
			{
				if (cb_get_Ljava_lang_String_ == null)
					cb_get_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_Get_Ljava_lang_String_));
				return cb_get_Ljava_lang_String_;
			}

			static IntPtr n_Get_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_option)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties.Section> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var option = JNIEnv.GetString (native_option, JniHandleOwnership.DoNotTransfer);
				IntPtr __ret = JNIEnv.NewString (__this.Get (option));
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/method[@name='get' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("get", "(Ljava/lang/String;)Ljava/lang/String;", "GetGet_Ljava_lang_String_Handler")]
			public virtual unsafe string? Get (string? option)
			{
				const string __id = "get.(Ljava/lang/String;)Ljava/lang/String;";
				IntPtr native_option = JNIEnv.NewString ((string?)option);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_option);
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_option);
				}
			}

			static Delegate? cb_hasOption_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetHasOption_Ljava_lang_String_Handler ()
			{
				if (cb_hasOption_Ljava_lang_String_ == null)
					cb_hasOption_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_HasOption_Ljava_lang_String_));
				return cb_hasOption_Ljava_lang_String_;
			}

			static bool n_HasOption_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties.Section> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.HasOption (name);
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/method[@name='hasOption' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("hasOption", "(Ljava/lang/String;)Z", "GetHasOption_Ljava_lang_String_Handler")]
			public virtual unsafe bool HasOption (string? name)
			{
				const string __id = "hasOption.(Ljava/lang/String;)Z";
				IntPtr native_name = JNIEnv.NewString ((string?)name);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_name);
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
					return __rm;
				} finally {
					JNIEnv.DeleteLocalRef (native_name);
				}
			}

			static Delegate? cb_load_Ljava_io_BufferedReader_;
#pragma warning disable 0169
			static Delegate GetLoad_Ljava_io_BufferedReader_Handler ()
			{
				if (cb_load_Ljava_io_BufferedReader_ == null)
					cb_load_Ljava_io_BufferedReader_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Load_Ljava_io_BufferedReader_));
				return cb_load_Ljava_io_BufferedReader_;
			}

			static void n_Load_Ljava_io_BufferedReader_ (IntPtr jnienv, IntPtr native__this, IntPtr native_reader)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties.Section> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var reader = global::Java.Lang.Object.GetObject<global::Java.IO.BufferedReader> (native_reader, JniHandleOwnership.DoNotTransfer);
				__this.Load (reader);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/method[@name='load' and count(parameter)=1 and parameter[1][@type='java.io.BufferedReader']]"
			[Register ("load", "(Ljava/io/BufferedReader;)V", "GetLoad_Ljava_io_BufferedReader_Handler")]
			public virtual unsafe void Load (global::Java.IO.BufferedReader? reader)
			{
				const string __id = "load.(Ljava/io/BufferedReader;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((reader == null) ? IntPtr.Zero : ((global::Java.Lang.Object) reader).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (reader);
				}
			}

			static Delegate? cb_optionNames;
#pragma warning disable 0169
			static Delegate GetOptionNamesHandler ()
			{
				if (cb_optionNames == null)
					cb_optionNames = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_OptionNames));
				return cb_optionNames;
			}

			static IntPtr n_OptionNames (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties.Section> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return global::Android.Runtime.JavaList<string>.ToLocalJniHandle (__this.OptionNames ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/method[@name='optionNames' and count(parameter)=0]"
			[Register ("optionNames", "()Ljava/util/List;", "GetOptionNamesHandler")]
			public virtual unsafe global::System.Collections.Generic.IList<string>? OptionNames ()
			{
				const string __id = "optionNames.()Ljava/util/List;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Android.Runtime.JavaList<string>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_remove_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetRemove_Ljava_lang_String_Handler ()
			{
				if (cb_remove_Ljava_lang_String_ == null)
					cb_remove_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_Remove_Ljava_lang_String_));
				return cb_remove_Ljava_lang_String_;
			}

			static bool n_Remove_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_option)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties.Section> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var option = JNIEnv.GetString (native_option, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.Remove (option);
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/method[@name='remove' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("remove", "(Ljava/lang/String;)Z", "GetRemove_Ljava_lang_String_Handler")]
			public virtual unsafe bool Remove (string? option)
			{
				const string __id = "remove.(Ljava/lang/String;)Z";
				IntPtr native_option = JNIEnv.NewString ((string?)option);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_option);
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
					return __rm;
				} finally {
					JNIEnv.DeleteLocalRef (native_option);
				}
			}

			static Delegate? cb_save_Ljava_io_PrintWriter_;
#pragma warning disable 0169
			static Delegate GetSave_Ljava_io_PrintWriter_Handler ()
			{
				if (cb_save_Ljava_io_PrintWriter_ == null)
					cb_save_Ljava_io_PrintWriter_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Save_Ljava_io_PrintWriter_));
				return cb_save_Ljava_io_PrintWriter_;
			}

			static void n_Save_Ljava_io_PrintWriter_ (IntPtr jnienv, IntPtr native__this, IntPtr native_writer)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties.Section> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var writer = global::Java.Lang.Object.GetObject<global::Java.IO.PrintWriter> (native_writer, JniHandleOwnership.DoNotTransfer);
				__this.Save (writer);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/method[@name='save' and count(parameter)=1 and parameter[1][@type='java.io.PrintWriter']]"
			[Register ("save", "(Ljava/io/PrintWriter;)V", "GetSave_Ljava_io_PrintWriter_Handler")]
			public virtual unsafe void Save (global::Java.IO.PrintWriter? writer)
			{
				const string __id = "save.(Ljava/io/PrintWriter;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((writer == null) ? IntPtr.Zero : ((global::Java.Lang.Object) writer).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (writer);
				}
			}

			static Delegate? cb_set_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetSet_Ljava_lang_String_Ljava_lang_String_Handler ()
			{
				if (cb_set_Ljava_lang_String_Ljava_lang_String_ == null)
					cb_set_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_Set_Ljava_lang_String_Ljava_lang_String_));
				return cb_set_Ljava_lang_String_Ljava_lang_String_;
			}

			static void n_Set_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_option, IntPtr native_value)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties.Section> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var option = JNIEnv.GetString (native_option, JniHandleOwnership.DoNotTransfer);
				var value = JNIEnv.GetString (native_value, JniHandleOwnership.DoNotTransfer);
				__this.Set (option, value);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/method[@name='set' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
			[Register ("set", "(Ljava/lang/String;Ljava/lang/String;)V", "GetSet_Ljava_lang_String_Ljava_lang_String_Handler")]
			public virtual unsafe void Set (string? option, string? value)
			{
				const string __id = "set.(Ljava/lang/String;Ljava/lang/String;)V";
				IntPtr native_option = JNIEnv.NewString ((string?)option);
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_option);
					__args [1] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_option);
					JNIEnv.DeleteLocalRef (native_value);
				}
			}

			static Delegate? cb_set_Ljava_lang_String_Ljava_lang_String_C;
#pragma warning disable 0169
			static Delegate GetSet_Ljava_lang_String_Ljava_lang_String_CHandler ()
			{
				if (cb_set_Ljava_lang_String_Ljava_lang_String_C == null)
					cb_set_Ljava_lang_String_Ljava_lang_String_C = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLC_V (n_Set_Ljava_lang_String_Ljava_lang_String_C));
				return cb_set_Ljava_lang_String_Ljava_lang_String_C;
			}

			static void n_Set_Ljava_lang_String_Ljava_lang_String_C (IntPtr jnienv, IntPtr native__this, IntPtr native_option, IntPtr native_value, char delim)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties.Section> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var option = JNIEnv.GetString (native_option, JniHandleOwnership.DoNotTransfer);
				var value = JNIEnv.GetString (native_value, JniHandleOwnership.DoNotTransfer);
				__this.Set (option, value, delim);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/method[@name='set' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='char']]"
			[Register ("set", "(Ljava/lang/String;Ljava/lang/String;C)V", "GetSet_Ljava_lang_String_Ljava_lang_String_CHandler")]
			public virtual unsafe void Set (string? option, string? value, char delim)
			{
				const string __id = "set.(Ljava/lang/String;Ljava/lang/String;C)V";
				IntPtr native_option = JNIEnv.NewString ((string?)option);
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [3];
					__args [0] = new JniArgumentValue (native_option);
					__args [1] = new JniArgumentValue (native_value);
					__args [2] = new JniArgumentValue (delim);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_option);
					JNIEnv.DeleteLocalRef (native_value);
				}
			}

			static Delegate? cb_setOptionFormat_Ljava_lang_Object_;
#pragma warning disable 0169
			static Delegate GetSetOptionFormat_Ljava_lang_Object_Handler ()
			{
				if (cb_setOptionFormat_Ljava_lang_Object_ == null)
					cb_setOptionFormat_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetOptionFormat_Ljava_lang_Object_));
				return cb_setOptionFormat_Ljava_lang_Object_;
			}

			static void n_SetOptionFormat_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_format)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties.Section> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var format = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_format, JniHandleOwnership.DoNotTransfer);
				__this.SetOptionFormat (format);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/method[@name='setOptionFormat' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]"
			[Register ("setOptionFormat", "(Ljava/lang/Object;)V", "GetSetOptionFormat_Ljava_lang_Object_Handler")]
			public virtual unsafe void SetOptionFormat (global::Java.Lang.Object? format)
			{
				const string __id = "setOptionFormat.(Ljava/lang/Object;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((format == null) ? IntPtr.Zero : ((global::Java.Lang.Object) format).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (format);
				}
			}

			static Delegate? cb_setOptionFormatString_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetSetOptionFormatString_Ljava_lang_String_Handler ()
			{
				if (cb_setOptionFormatString_Ljava_lang_String_ == null)
					cb_setOptionFormatString_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetOptionFormatString_Ljava_lang_String_));
				return cb_setOptionFormatString_Ljava_lang_String_;
			}

			static void n_SetOptionFormatString_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_formatString)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties.Section> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var formatString = JNIEnv.GetString (native_formatString, JniHandleOwnership.DoNotTransfer);
				__this.SetOptionFormatString (formatString);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties.Section']/method[@name='setOptionFormatString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setOptionFormatString", "(Ljava/lang/String;)V", "GetSetOptionFormatString_Ljava_lang_String_Handler")]
			public virtual unsafe void SetOptionFormatString (string? formatString)
			{
				const string __id = "setOptionFormatString.(Ljava/lang/String;)V";
				IntPtr native_formatString = JNIEnv.NewString ((string?)formatString);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_formatString);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_formatString);
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/IniProperties", typeof (IniProperties));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected IniProperties (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/constructor[@name='IniProperties' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe IniProperties () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/constructor[@name='IniProperties' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register (".ctor", "(Z)V", "")]
		public unsafe IniProperties (bool isCaseSensitive) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Z)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (isCaseSensitive);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/constructor[@name='IniProperties' and count(parameter)=1 and parameter[1][@type='char[]']]"
		[Register (".ctor", "([C)V", "")]
		public unsafe IniProperties (char[]? delims) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "([C)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_delims = JNIEnv.NewArray (delims);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_delims);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				if (delims != null) {
					JNIEnv.CopyArray (native_delims, delims);
					JNIEnv.DeleteLocalRef (native_delims);
				}
				global::System.GC.KeepAlive (delims);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/constructor[@name='IniProperties' and count(parameter)=2 and parameter[1][@type='char[]'] and parameter[2][@type='boolean']]"
		[Register (".ctor", "([CZ)V", "")]
		public unsafe IniProperties (char[]? delims, bool isCaseSensitive) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "([CZ)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_delims = JNIEnv.NewArray (delims);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_delims);
				__args [1] = new JniArgumentValue (isCaseSensitive);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				if (delims != null) {
					JNIEnv.CopyArray (native_delims, delims);
					JNIEnv.DeleteLocalRef (native_delims);
				}
				global::System.GC.KeepAlive (delims);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/constructor[@name='IniProperties' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register (".ctor", "(Ljava/lang/String;)V", "")]
		public unsafe IniProperties (string? commonName) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_commonName = JNIEnv.NewString ((string?)commonName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_commonName);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_commonName);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/constructor[@name='IniProperties' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]"
		[Register (".ctor", "(Ljava/lang/String;Z)V", "")]
		public unsafe IniProperties (string? commonName, bool isCaseSensitive) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;Z)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_commonName = JNIEnv.NewString ((string?)commonName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_commonName);
				__args [1] = new JniArgumentValue (isCaseSensitive);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_commonName);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/constructor[@name='IniProperties' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='char[]']]"
		[Register (".ctor", "(Ljava/lang/String;[C)V", "")]
		public unsafe IniProperties (string? commonName, char[]? delims) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;[C)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_commonName = JNIEnv.NewString ((string?)commonName);
			IntPtr native_delims = JNIEnv.NewArray (delims);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_commonName);
				__args [1] = new JniArgumentValue (native_delims);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_commonName);
				if (delims != null) {
					JNIEnv.CopyArray (native_delims, delims);
					JNIEnv.DeleteLocalRef (native_delims);
				}
				global::System.GC.KeepAlive (delims);
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/constructor[@name='IniProperties' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='char[]'] and parameter[3][@type='boolean']]"
		[Register (".ctor", "(Ljava/lang/String;[CZ)V", "")]
		public unsafe IniProperties (string? commonName, char[]? delims, bool isCaseSensitive) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;[CZ)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_commonName = JNIEnv.NewString ((string?)commonName);
			IntPtr native_delims = JNIEnv.NewArray (delims);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_commonName);
				__args [1] = new JniArgumentValue (native_delims);
				__args [2] = new JniArgumentValue (isCaseSensitive);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_commonName);
				if (delims != null) {
					JNIEnv.CopyArray (native_delims, delims);
					JNIEnv.DeleteLocalRef (native_delims);
				}
				global::System.GC.KeepAlive (delims);
			}
		}

		static Delegate? cb_addBlankLine_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetAddBlankLine_Ljava_lang_String_Handler ()
		{
			if (cb_addBlankLine_Ljava_lang_String_ == null)
				cb_addBlankLine_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddBlankLine_Ljava_lang_String_));
			return cb_addBlankLine_Ljava_lang_String_;
		}

		static void n_AddBlankLine_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_section)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var section = JNIEnv.GetString (native_section, JniHandleOwnership.DoNotTransfer);
			__this.AddBlankLine (section);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='addBlankLine' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("addBlankLine", "(Ljava/lang/String;)V", "GetAddBlankLine_Ljava_lang_String_Handler")]
		public virtual unsafe void AddBlankLine (string? section)
		{
			const string __id = "addBlankLine.(Ljava/lang/String;)V";
			IntPtr native_section = JNIEnv.NewString ((string?)section);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_section);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_section);
			}
		}

		static Delegate? cb_addComment_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetAddComment_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_addComment_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_addComment_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_AddComment_Ljava_lang_String_Ljava_lang_String_));
			return cb_addComment_Ljava_lang_String_Ljava_lang_String_;
		}

		static void n_AddComment_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_section, IntPtr native_comment)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var section = JNIEnv.GetString (native_section, JniHandleOwnership.DoNotTransfer);
			var comment = JNIEnv.GetString (native_comment, JniHandleOwnership.DoNotTransfer);
			__this.AddComment (section, comment);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='addComment' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("addComment", "(Ljava/lang/String;Ljava/lang/String;)V", "GetAddComment_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe void AddComment (string? section, string? comment)
		{
			const string __id = "addComment.(Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_section = JNIEnv.NewString ((string?)section);
			IntPtr native_comment = JNIEnv.NewString ((string?)comment);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_section);
				__args [1] = new JniArgumentValue (native_comment);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_section);
				JNIEnv.DeleteLocalRef (native_comment);
			}
		}

		static Delegate? cb_addSection_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetAddSection_Ljava_lang_String_Handler ()
		{
			if (cb_addSection_Ljava_lang_String_ == null)
				cb_addSection_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_AddSection_Ljava_lang_String_));
			return cb_addSection_Ljava_lang_String_;
		}

		static bool n_AddSection_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.AddSection (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='addSection' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("addSection", "(Ljava/lang/String;)Z", "GetAddSection_Ljava_lang_String_Handler")]
		public virtual unsafe bool AddSection (string? name)
		{
			const string __id = "addSection.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_get_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetGet_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_get_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_get_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_Get_Ljava_lang_String_Ljava_lang_String_));
			return cb_get_Ljava_lang_String_Ljava_lang_String_;
		}

		static IntPtr n_Get_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_section, IntPtr native_option)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var section = JNIEnv.GetString (native_section, JniHandleOwnership.DoNotTransfer);
			var option = JNIEnv.GetString (native_option, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewString (__this.Get (section, option));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='get' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("get", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetGet_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe string? Get (string? section, string? option)
		{
			const string __id = "get.(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_section = JNIEnv.NewString ((string?)section);
			IntPtr native_option = JNIEnv.NewString ((string?)option);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_section);
				__args [1] = new JniArgumentValue (native_option);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_section);
				JNIEnv.DeleteLocalRef (native_option);
			}
		}

		static Delegate? cb_hasOption_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetHasOption_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_hasOption_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_hasOption_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_Z (n_HasOption_Ljava_lang_String_Ljava_lang_String_));
			return cb_hasOption_Ljava_lang_String_Ljava_lang_String_;
		}

		static bool n_HasOption_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_section, IntPtr native_option)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var section = JNIEnv.GetString (native_section, JniHandleOwnership.DoNotTransfer);
			var option = JNIEnv.GetString (native_option, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.HasOption (section, option);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='hasOption' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("hasOption", "(Ljava/lang/String;Ljava/lang/String;)Z", "GetHasOption_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe bool HasOption (string? section, string? option)
		{
			const string __id = "hasOption.(Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native_section = JNIEnv.NewString ((string?)section);
			IntPtr native_option = JNIEnv.NewString ((string?)option);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_section);
				__args [1] = new JniArgumentValue (native_option);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_section);
				JNIEnv.DeleteLocalRef (native_option);
			}
		}

		static Delegate? cb_hasSection_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetHasSection_Ljava_lang_String_Handler ()
		{
			if (cb_hasSection_Ljava_lang_String_ == null)
				cb_hasSection_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_HasSection_Ljava_lang_String_));
			return cb_hasSection_Ljava_lang_String_;
		}

		static bool n_HasSection_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.HasSection (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='hasSection' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("hasSection", "(Ljava/lang/String;)Z", "GetHasSection_Ljava_lang_String_Handler")]
		public virtual unsafe bool HasSection (string? name)
		{
			const string __id = "hasSection.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_load_Ljava_io_File_;
#pragma warning disable 0169
		static Delegate GetLoad_Ljava_io_File_Handler ()
		{
			if (cb_load_Ljava_io_File_ == null)
				cb_load_Ljava_io_File_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Load_Ljava_io_File_));
			return cb_load_Ljava_io_File_;
		}

		static void n_Load_Ljava_io_File_ (IntPtr jnienv, IntPtr native__this, IntPtr native_file)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var file = global::Java.Lang.Object.GetObject<global::Java.IO.File> (native_file, JniHandleOwnership.DoNotTransfer);
			__this.Load (file);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='load' and count(parameter)=1 and parameter[1][@type='java.io.File']]"
		[Register ("load", "(Ljava/io/File;)V", "GetLoad_Ljava_io_File_Handler")]
		public virtual unsafe void Load (global::Java.IO.File? file)
		{
			const string __id = "load.(Ljava/io/File;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((file == null) ? IntPtr.Zero : ((global::Java.Lang.Object) file).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (file);
			}
		}

		static Delegate? cb_load_Ljava_io_InputStream_;
#pragma warning disable 0169
		static Delegate GetLoad_Ljava_io_InputStream_Handler ()
		{
			if (cb_load_Ljava_io_InputStream_ == null)
				cb_load_Ljava_io_InputStream_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Load_Ljava_io_InputStream_));
			return cb_load_Ljava_io_InputStream_;
		}

		static void n_Load_Ljava_io_InputStream_ (IntPtr jnienv, IntPtr native__this, IntPtr native_stream)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var stream = global::Android.Runtime.InputStreamInvoker.FromJniHandle (native_stream, JniHandleOwnership.DoNotTransfer);
			__this.Load (stream);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='load' and count(parameter)=1 and parameter[1][@type='java.io.InputStream']]"
		[Register ("load", "(Ljava/io/InputStream;)V", "GetLoad_Ljava_io_InputStream_Handler")]
		public virtual unsafe void Load (global::System.IO.Stream? stream)
		{
			const string __id = "load.(Ljava/io/InputStream;)V";
			IntPtr native_stream = global::Android.Runtime.InputStreamAdapter.ToLocalJniHandle (stream);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_stream);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_stream);
				global::System.GC.KeepAlive (stream);
			}
		}

		static Delegate? cb_load_Ljava_io_InputStreamReader_;
#pragma warning disable 0169
		static Delegate GetLoad_Ljava_io_InputStreamReader_Handler ()
		{
			if (cb_load_Ljava_io_InputStreamReader_ == null)
				cb_load_Ljava_io_InputStreamReader_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Load_Ljava_io_InputStreamReader_));
			return cb_load_Ljava_io_InputStreamReader_;
		}

		static void n_Load_Ljava_io_InputStreamReader_ (IntPtr jnienv, IntPtr native__this, IntPtr native_streamReader)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var streamReader = global::Java.Lang.Object.GetObject<global::Java.IO.InputStreamReader> (native_streamReader, JniHandleOwnership.DoNotTransfer);
			__this.Load (streamReader);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='load' and count(parameter)=1 and parameter[1][@type='java.io.InputStreamReader']]"
		[Register ("load", "(Ljava/io/InputStreamReader;)V", "GetLoad_Ljava_io_InputStreamReader_Handler")]
		public virtual unsafe void Load (global::Java.IO.InputStreamReader? streamReader)
		{
			const string __id = "load.(Ljava/io/InputStreamReader;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((streamReader == null) ? IntPtr.Zero : ((global::Java.Lang.Object) streamReader).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (streamReader);
			}
		}

		static Delegate? cb_load_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetLoad_Ljava_lang_String_Handler ()
		{
			if (cb_load_Ljava_lang_String_ == null)
				cb_load_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Load_Ljava_lang_String_));
			return cb_load_Ljava_lang_String_;
		}

		static void n_Load_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_filename)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var filename = JNIEnv.GetString (native_filename, JniHandleOwnership.DoNotTransfer);
			__this.Load (filename);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='load' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("load", "(Ljava/lang/String;)V", "GetLoad_Ljava_lang_String_Handler")]
		public virtual unsafe void Load (string? filename)
		{
			const string __id = "load.(Ljava/lang/String;)V";
			IntPtr native_filename = JNIEnv.NewString ((string?)filename);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_filename);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_filename);
			}
		}

		static Delegate? cb_optionNames_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetOptionNames_Ljava_lang_String_Handler ()
		{
			if (cb_optionNames_Ljava_lang_String_ == null)
				cb_optionNames_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_OptionNames_Ljava_lang_String_));
			return cb_optionNames_Ljava_lang_String_;
		}

		static IntPtr n_OptionNames_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_section)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var section = JNIEnv.GetString (native_section, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = global::Android.Runtime.JavaList<object>.ToLocalJniHandle (__this.OptionNames (section));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='optionNames' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("optionNames", "(Ljava/lang/String;)Ljava/util/List;", "GetOptionNames_Ljava_lang_String_Handler")]
		public virtual unsafe global::System.Collections.Generic.IList<object>? OptionNames (string? section)
		{
			const string __id = "optionNames.(Ljava/lang/String;)Ljava/util/List;";
			IntPtr native_section = JNIEnv.NewString ((string?)section);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_section);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Android.Runtime.JavaList<object>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_section);
			}
		}

		static Delegate? cb_remove_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetRemove_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_remove_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_remove_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_Z (n_Remove_Ljava_lang_String_Ljava_lang_String_));
			return cb_remove_Ljava_lang_String_Ljava_lang_String_;
		}

		static bool n_Remove_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_section, IntPtr native_option)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var section = JNIEnv.GetString (native_section, JniHandleOwnership.DoNotTransfer);
			var option = JNIEnv.GetString (native_option, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.Remove (section, option);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='remove' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("remove", "(Ljava/lang/String;Ljava/lang/String;)Z", "GetRemove_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe bool Remove (string? section, string? option)
		{
			const string __id = "remove.(Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native_section = JNIEnv.NewString ((string?)section);
			IntPtr native_option = JNIEnv.NewString ((string?)option);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_section);
				__args [1] = new JniArgumentValue (native_option);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_section);
				JNIEnv.DeleteLocalRef (native_option);
			}
		}

		static Delegate? cb_removeSection_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetRemoveSection_Ljava_lang_String_Handler ()
		{
			if (cb_removeSection_Ljava_lang_String_ == null)
				cb_removeSection_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_RemoveSection_Ljava_lang_String_));
			return cb_removeSection_Ljava_lang_String_;
		}

		static bool n_RemoveSection_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.RemoveSection (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='removeSection' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("removeSection", "(Ljava/lang/String;)Z", "GetRemoveSection_Ljava_lang_String_Handler")]
		public virtual unsafe bool RemoveSection (string? name)
		{
			const string __id = "removeSection.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string?)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate? cb_save_Ljava_io_File_;
#pragma warning disable 0169
		static Delegate GetSave_Ljava_io_File_Handler ()
		{
			if (cb_save_Ljava_io_File_ == null)
				cb_save_Ljava_io_File_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Save_Ljava_io_File_));
			return cb_save_Ljava_io_File_;
		}

		static void n_Save_Ljava_io_File_ (IntPtr jnienv, IntPtr native__this, IntPtr native_file)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var file = global::Java.Lang.Object.GetObject<global::Java.IO.File> (native_file, JniHandleOwnership.DoNotTransfer);
			__this.Save (file);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='save' and count(parameter)=1 and parameter[1][@type='java.io.File']]"
		[Register ("save", "(Ljava/io/File;)V", "GetSave_Ljava_io_File_Handler")]
		public virtual unsafe void Save (global::Java.IO.File? file)
		{
			const string __id = "save.(Ljava/io/File;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((file == null) ? IntPtr.Zero : ((global::Java.Lang.Object) file).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (file);
			}
		}

		static Delegate? cb_save_Ljava_io_OutputStream_;
#pragma warning disable 0169
		static Delegate GetSave_Ljava_io_OutputStream_Handler ()
		{
			if (cb_save_Ljava_io_OutputStream_ == null)
				cb_save_Ljava_io_OutputStream_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Save_Ljava_io_OutputStream_));
			return cb_save_Ljava_io_OutputStream_;
		}

		static void n_Save_Ljava_io_OutputStream_ (IntPtr jnienv, IntPtr native__this, IntPtr native_stream)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var stream = global::Android.Runtime.OutputStreamInvoker.FromJniHandle (native_stream, JniHandleOwnership.DoNotTransfer);
			__this.Save (stream);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='save' and count(parameter)=1 and parameter[1][@type='java.io.OutputStream']]"
		[Register ("save", "(Ljava/io/OutputStream;)V", "GetSave_Ljava_io_OutputStream_Handler")]
		public virtual unsafe void Save (global::System.IO.Stream? stream)
		{
			const string __id = "save.(Ljava/io/OutputStream;)V";
			IntPtr native_stream = global::Android.Runtime.OutputStreamAdapter.ToLocalJniHandle (stream);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_stream);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_stream);
				global::System.GC.KeepAlive (stream);
			}
		}

		static Delegate? cb_save_Ljava_io_OutputStreamWriter_;
#pragma warning disable 0169
		static Delegate GetSave_Ljava_io_OutputStreamWriter_Handler ()
		{
			if (cb_save_Ljava_io_OutputStreamWriter_ == null)
				cb_save_Ljava_io_OutputStreamWriter_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Save_Ljava_io_OutputStreamWriter_));
			return cb_save_Ljava_io_OutputStreamWriter_;
		}

		static void n_Save_Ljava_io_OutputStreamWriter_ (IntPtr jnienv, IntPtr native__this, IntPtr native_streamWriter)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var streamWriter = global::Java.Lang.Object.GetObject<global::Java.IO.OutputStreamWriter> (native_streamWriter, JniHandleOwnership.DoNotTransfer);
			__this.Save (streamWriter);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='save' and count(parameter)=1 and parameter[1][@type='java.io.OutputStreamWriter']]"
		[Register ("save", "(Ljava/io/OutputStreamWriter;)V", "GetSave_Ljava_io_OutputStreamWriter_Handler")]
		public virtual unsafe void Save (global::Java.IO.OutputStreamWriter? streamWriter)
		{
			const string __id = "save.(Ljava/io/OutputStreamWriter;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((streamWriter == null) ? IntPtr.Zero : ((global::Java.Lang.Object) streamWriter).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (streamWriter);
			}
		}

		static Delegate? cb_save_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSave_Ljava_lang_String_Handler ()
		{
			if (cb_save_Ljava_lang_String_ == null)
				cb_save_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Save_Ljava_lang_String_));
			return cb_save_Ljava_lang_String_;
		}

		static void n_Save_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_filename)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var filename = JNIEnv.GetString (native_filename, JniHandleOwnership.DoNotTransfer);
			__this.Save (filename);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='save' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("save", "(Ljava/lang/String;)V", "GetSave_Ljava_lang_String_Handler")]
		public virtual unsafe void Save (string? filename)
		{
			const string __id = "save.(Ljava/lang/String;)V";
			IntPtr native_filename = JNIEnv.NewString ((string?)filename);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_filename);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_filename);
			}
		}

		static Delegate? cb_sectionNames;
#pragma warning disable 0169
		static Delegate GetSectionNamesHandler ()
		{
			if (cb_sectionNames == null)
				cb_sectionNames = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_SectionNames));
			return cb_sectionNames;
		}

		static IntPtr n_SectionNames (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return global::Android.Runtime.JavaList<string>.ToLocalJniHandle (__this.SectionNames ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='sectionNames' and count(parameter)=0]"
		[Register ("sectionNames", "()Ljava/util/List;", "GetSectionNamesHandler")]
		public virtual unsafe global::System.Collections.Generic.IList<string>? SectionNames ()
		{
			const string __id = "sectionNames.()Ljava/util/List;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return global::Android.Runtime.JavaList<string>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_set_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSet_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_set_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_set_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_V (n_Set_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_));
			return cb_set_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
		}

		static void n_Set_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_section, IntPtr native_option, IntPtr native_value)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var section = JNIEnv.GetString (native_section, JniHandleOwnership.DoNotTransfer);
			var option = JNIEnv.GetString (native_option, JniHandleOwnership.DoNotTransfer);
			var value = JNIEnv.GetString (native_value, JniHandleOwnership.DoNotTransfer);
			__this.Set (section, option, value);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='set' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("set", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetSet_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe void Set (string? section, string? option, string? value)
		{
			const string __id = "set.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_section = JNIEnv.NewString ((string?)section);
			IntPtr native_option = JNIEnv.NewString ((string?)option);
			IntPtr native_value = JNIEnv.NewString ((string?)value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_section);
				__args [1] = new JniArgumentValue (native_option);
				__args [2] = new JniArgumentValue (native_value);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_section);
				JNIEnv.DeleteLocalRef (native_option);
				JNIEnv.DeleteLocalRef (native_value);
			}
		}

		static Delegate? cb_setOptionFormatString_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetOptionFormatString_Ljava_lang_String_Handler ()
		{
			if (cb_setOptionFormatString_Ljava_lang_String_ == null)
				cb_setOptionFormatString_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetOptionFormatString_Ljava_lang_String_));
			return cb_setOptionFormatString_Ljava_lang_String_;
		}

		static void n_SetOptionFormatString_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_formatString)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.IniProperties> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var formatString = JNIEnv.GetString (native_formatString, JniHandleOwnership.DoNotTransfer);
			__this.SetOptionFormatString (formatString);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniProperties']/method[@name='setOptionFormatString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setOptionFormatString", "(Ljava/lang/String;)V", "GetSetOptionFormatString_Ljava_lang_String_Handler")]
		public virtual unsafe void SetOptionFormatString (string? formatString)
		{
			const string __id = "setOptionFormatString.(Ljava/lang/String;)V";
			IntPtr native_formatString = JNIEnv.NewString ((string?)formatString);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_formatString);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_formatString);
			}
		}

	}
}
