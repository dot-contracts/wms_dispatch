//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AuthFaceApi']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/AuthFaceApi", DoNotGenerateAcw=true)]
	public partial class AuthFaceApi : global::Java.Lang.Object {
		[Register ("com/vanstone/trans/api/AuthFaceApi$Error", DoNotGenerateAcw=true)]
		[global::System.Obsolete (@"Use the 'Com.Vanstone.Trans.Api.AuthFaceApi.IError' type. This class will be removed in a future release.")]
		public abstract class Error : Java.Lang.Object {
			internal Error ()
			{
			}

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Error']/field[@name='ERR_CAMARA_OPEN_FAILED']"
			[Register ("ERR_CAMARA_OPEN_FAILED")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.IError.ErrCamaraOpenFailed'. This class will be removed in a future release.")]
			public const int ErrCamaraOpenFailed = (int) 5;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Error']/field[@name='ERR_DETECT']"
			[Register ("ERR_DETECT")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.IError.ErrDetect'. This class will be removed in a future release.")]
			public const int ErrDetect = (int) 6;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Error']/field[@name='ERR_IN_DETECT']"
			[Register ("ERR_IN_DETECT")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.IError.ErrInDetect'. This class will be removed in a future release.")]
			public const int ErrInDetect = (int) 7;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Error']/field[@name='ERR_NOT_SUPPORT']"
			[Register ("ERR_NOT_SUPPORT")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.IError.ErrNotSupport'. This class will be removed in a future release.")]
			public const int ErrNotSupport = (int) 4;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Error']/field[@name='ERR_NO_LICENSE']"
			[Register ("ERR_NO_LICENSE")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.IError.ErrNoLicense'. This class will be removed in a future release.")]
			public const int ErrNoLicense = (int) 3;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Error']/field[@name='ERR_SERVICE_BIND_FAILED']"
			[Register ("ERR_SERVICE_BIND_FAILED")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.IError.ErrServiceBindFailed'. This class will be removed in a future release.")]
			public const int ErrServiceBindFailed = (int) 2;

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Error']"
		[Register ("com/vanstone/trans/api/AuthFaceApi$Error", "", "Com.Vanstone.Trans.Api.AuthFaceApi/IErrorInvoker")]
		public partial interface IError : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Error']/field[@name='ERR_CAMARA_OPEN_FAILED']"
			[Register ("ERR_CAMARA_OPEN_FAILED")]
			public const int ErrCamaraOpenFailed = (int) 5;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Error']/field[@name='ERR_DETECT']"
			[Register ("ERR_DETECT")]
			public const int ErrDetect = (int) 6;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Error']/field[@name='ERR_IN_DETECT']"
			[Register ("ERR_IN_DETECT")]
			public const int ErrInDetect = (int) 7;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Error']/field[@name='ERR_NOT_SUPPORT']"
			[Register ("ERR_NOT_SUPPORT")]
			public const int ErrNotSupport = (int) 4;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Error']/field[@name='ERR_NO_LICENSE']"
			[Register ("ERR_NO_LICENSE")]
			public const int ErrNoLicense = (int) 3;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Error']/field[@name='ERR_SERVICE_BIND_FAILED']"
			[Register ("ERR_SERVICE_BIND_FAILED")]
			public const int ErrServiceBindFailed = (int) 2;

		}

		[global::Android.Runtime.Register ("com/vanstone/trans/api/AuthFaceApi$Error", DoNotGenerateAcw=true)]
		internal partial class IErrorInvoker : global::Java.Lang.Object, IError {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/AuthFaceApi$Error", typeof (IErrorInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IError? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IError> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.vanstone.trans.api.AuthFaceApi.Error'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IErrorInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.OnFaceDetectListener']"
		[Register ("com/vanstone/trans/api/AuthFaceApi$OnFaceDetectListener", "", "Com.Vanstone.Trans.Api.AuthFaceApi/IOnFaceDetectListenerInvoker")]
		public partial interface IOnFaceDetectListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.OnFaceDetectListener']/method[@name='onError' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("onError", "(I)V", "GetOnError_IHandler:Com.Vanstone.Trans.Api.AuthFaceApi/IOnFaceDetectListenerInvoker, VanstonePosSdk")]
			void OnError (int p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.OnFaceDetectListener']/method[@name='onPreview' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
			[Register ("onPreview", "([BII)V", "GetOnPreview_arrayBIIHandler:Com.Vanstone.Trans.Api.AuthFaceApi/IOnFaceDetectListenerInvoker, VanstonePosSdk")]
			void OnPreview (byte[]? p0, int p1, int p2);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.OnFaceDetectListener']/method[@name='onShowFrame' and count(parameter)=3 and parameter[1][@type='android.graphics.RectF'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
			[Register ("onShowFrame", "(Landroid/graphics/RectF;II)V", "GetOnShowFrame_Landroid_graphics_RectF_IIHandler:Com.Vanstone.Trans.Api.AuthFaceApi/IOnFaceDetectListenerInvoker, VanstonePosSdk")]
			void OnShowFrame (global::Android.Graphics.RectF? p0, int p1, int p2);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.OnFaceDetectListener']/method[@name='onSuccess' and count(parameter)=1 and parameter[1][@type='android.os.Bundle']]"
			[Register ("onSuccess", "(Landroid/os/Bundle;)V", "GetOnSuccess_Landroid_os_Bundle_Handler:Com.Vanstone.Trans.Api.AuthFaceApi/IOnFaceDetectListenerInvoker, VanstonePosSdk")]
			void OnSuccess (global::Android.OS.Bundle? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.OnFaceDetectListener']/method[@name='onTip' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("onTip", "(I)V", "GetOnTip_IHandler:Com.Vanstone.Trans.Api.AuthFaceApi/IOnFaceDetectListenerInvoker, VanstonePosSdk")]
			void OnTip (int p0);

		}

		[global::Android.Runtime.Register ("com/vanstone/trans/api/AuthFaceApi$OnFaceDetectListener", DoNotGenerateAcw=true)]
		internal partial class IOnFaceDetectListenerInvoker : global::Java.Lang.Object, IOnFaceDetectListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/AuthFaceApi$OnFaceDetectListener", typeof (IOnFaceDetectListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IOnFaceDetectListener? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IOnFaceDetectListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.vanstone.trans.api.AuthFaceApi.OnFaceDetectListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IOnFaceDetectListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_onError_I;
#pragma warning disable 0169
			static Delegate GetOnError_IHandler ()
			{
				if (cb_onError_I == null)
					cb_onError_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_OnError_I));
				return cb_onError_I;
			}

			static void n_OnError_I (IntPtr jnienv, IntPtr native__this, int p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.AuthFaceApi.IOnFaceDetectListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnError (p0);
			}
#pragma warning restore 0169

			IntPtr id_onError_I;
			public unsafe void OnError (int p0)
			{
				if (id_onError_I == IntPtr.Zero)
					id_onError_I = JNIEnv.GetMethodID (class_ref, "onError", "(I)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue (p0);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onError_I, __args);
			}

			static Delegate? cb_onPreview_arrayBII;
#pragma warning disable 0169
			static Delegate GetOnPreview_arrayBIIHandler ()
			{
				if (cb_onPreview_arrayBII == null)
					cb_onPreview_arrayBII = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLII_V (n_OnPreview_arrayBII));
				return cb_onPreview_arrayBII;
			}

			static void n_OnPreview_arrayBII (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1, int p2)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.AuthFaceApi.IOnFaceDetectListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = (byte[]?) JNIEnv.GetArray (native_p0, JniHandleOwnership.DoNotTransfer, typeof (byte));
				__this.OnPreview (p0, p1, p2);
				if (p0 != null)
					JNIEnv.CopyArray (p0, native_p0);
			}
#pragma warning restore 0169

			IntPtr id_onPreview_arrayBII;
			public unsafe void OnPreview (byte[]? p0, int p1, int p2)
			{
				if (id_onPreview_arrayBII == IntPtr.Zero)
					id_onPreview_arrayBII = JNIEnv.GetMethodID (class_ref, "onPreview", "([BII)V");
				IntPtr native_p0 = JNIEnv.NewArray (p0);
				JValue* __args = stackalloc JValue [3];
				__args [0] = new JValue (native_p0);
				__args [1] = new JValue (p1);
				__args [2] = new JValue (p2);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onPreview_arrayBII, __args);
				if (p0 != null) {
					JNIEnv.CopyArray (native_p0, p0);
					JNIEnv.DeleteLocalRef (native_p0);
				}
			}

			static Delegate? cb_onShowFrame_Landroid_graphics_RectF_II;
#pragma warning disable 0169
			static Delegate GetOnShowFrame_Landroid_graphics_RectF_IIHandler ()
			{
				if (cb_onShowFrame_Landroid_graphics_RectF_II == null)
					cb_onShowFrame_Landroid_graphics_RectF_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLII_V (n_OnShowFrame_Landroid_graphics_RectF_II));
				return cb_onShowFrame_Landroid_graphics_RectF_II;
			}

			static void n_OnShowFrame_Landroid_graphics_RectF_II (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1, int p2)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.AuthFaceApi.IOnFaceDetectListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Android.Graphics.RectF> (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.OnShowFrame (p0, p1, p2);
			}
#pragma warning restore 0169

			IntPtr id_onShowFrame_Landroid_graphics_RectF_II;
			public unsafe void OnShowFrame (global::Android.Graphics.RectF? p0, int p1, int p2)
			{
				if (id_onShowFrame_Landroid_graphics_RectF_II == IntPtr.Zero)
					id_onShowFrame_Landroid_graphics_RectF_II = JNIEnv.GetMethodID (class_ref, "onShowFrame", "(Landroid/graphics/RectF;II)V");
				JValue* __args = stackalloc JValue [3];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue (p1);
				__args [2] = new JValue (p2);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onShowFrame_Landroid_graphics_RectF_II, __args);
			}

			static Delegate? cb_onSuccess_Landroid_os_Bundle_;
#pragma warning disable 0169
			static Delegate GetOnSuccess_Landroid_os_Bundle_Handler ()
			{
				if (cb_onSuccess_Landroid_os_Bundle_ == null)
					cb_onSuccess_Landroid_os_Bundle_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnSuccess_Landroid_os_Bundle_));
				return cb_onSuccess_Landroid_os_Bundle_;
			}

			static void n_OnSuccess_Landroid_os_Bundle_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.AuthFaceApi.IOnFaceDetectListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Android.OS.Bundle> (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.OnSuccess (p0);
			}
#pragma warning restore 0169

			IntPtr id_onSuccess_Landroid_os_Bundle_;
			public unsafe void OnSuccess (global::Android.OS.Bundle? p0)
			{
				if (id_onSuccess_Landroid_os_Bundle_ == IntPtr.Zero)
					id_onSuccess_Landroid_os_Bundle_ = JNIEnv.GetMethodID (class_ref, "onSuccess", "(Landroid/os/Bundle;)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onSuccess_Landroid_os_Bundle_, __args);
			}

			static Delegate? cb_onTip_I;
#pragma warning disable 0169
			static Delegate GetOnTip_IHandler ()
			{
				if (cb_onTip_I == null)
					cb_onTip_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_OnTip_I));
				return cb_onTip_I;
			}

			static void n_OnTip_I (IntPtr jnienv, IntPtr native__this, int p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.AuthFaceApi.IOnFaceDetectListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnTip (p0);
			}
#pragma warning restore 0169

			IntPtr id_onTip_I;
			public unsafe void OnTip (int p0)
			{
				if (id_onTip_I == IntPtr.Zero)
					id_onTip_I = JNIEnv.GetMethodID (class_ref, "onTip", "(I)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue (p0);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onTip_I, __args);
			}

		}

		// event args for com.vanstone.trans.api.AuthFaceApi.OnFaceDetectListener.onError
		public partial class ErrorEventArgs : global::System.EventArgs {
			public ErrorEventArgs (int p0)
			{
				this.p0 = p0;
			}

			int p0;

			public int P0 {
				get { return p0; }
			}

		}

		// event args for com.vanstone.trans.api.AuthFaceApi.OnFaceDetectListener.onPreview
		public partial class PreviewEventArgs : global::System.EventArgs {
			public PreviewEventArgs (byte[]? p0, int p1, int p2)
			{
				this.p0 = p0;
				this.p1 = p1;
				this.p2 = p2;
			}

			byte[]? p0;

			public byte[]? P0 {
				get { return p0; }
			}

			int p1;

			public int P1 {
				get { return p1; }
			}

			int p2;

			public int P2 {
				get { return p2; }
			}

		}

		// event args for com.vanstone.trans.api.AuthFaceApi.OnFaceDetectListener.onShowFrame
		public partial class ShowFrameEventArgs : global::System.EventArgs {
			public ShowFrameEventArgs (global::Android.Graphics.RectF? p0, int p1, int p2)
			{
				this.p0 = p0;
				this.p1 = p1;
				this.p2 = p2;
			}

			global::Android.Graphics.RectF? p0;

			public global::Android.Graphics.RectF? P0 {
				get { return p0; }
			}

			int p1;

			public int P1 {
				get { return p1; }
			}

			int p2;

			public int P2 {
				get { return p2; }
			}

		}

		// event args for com.vanstone.trans.api.AuthFaceApi.OnFaceDetectListener.onSuccess
		public partial class SuccessEventArgs : global::System.EventArgs {
			public SuccessEventArgs (global::Android.OS.Bundle? p0)
			{
				this.p0 = p0;
			}

			global::Android.OS.Bundle? p0;

			public global::Android.OS.Bundle? P0 {
				get { return p0; }
			}

		}

		// event args for com.vanstone.trans.api.AuthFaceApi.OnFaceDetectListener.onTip
		public partial class TipEventArgs : global::System.EventArgs {
			public TipEventArgs (int p0)
			{
				this.p0 = p0;
			}

			int p0;

			public int P0 {
				get { return p0; }
			}

		}

		[global::Android.Runtime.Register ("mono/com/vanstone/trans/api/AuthFaceApi_OnFaceDetectListenerImplementor")]
		internal sealed partial class IOnFaceDetectListenerImplementor : global::Java.Lang.Object, IOnFaceDetectListener {

			object? sender;

			public unsafe IOnFaceDetectListenerImplementor (object sender) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";
				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;
				var h = JniPeerMembers.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (h.Handle, JniHandleOwnership.TransferLocalRef);
				JniPeerMembers.InstanceMethods.FinishCreateInstance (__id, this, null);
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler<ErrorEventArgs>? OnErrorHandler;
			#pragma warning restore 0649

			public void OnError (int p0)
			{
				var __h = OnErrorHandler;
				if (__h != null)
					__h (sender, new ErrorEventArgs (p0));
			}

			#pragma warning disable 0649
			public EventHandler<PreviewEventArgs>? OnPreviewHandler;
			#pragma warning restore 0649

			public void OnPreview (byte[]? p0, int p1, int p2)
			{
				var __h = OnPreviewHandler;
				if (__h != null)
					__h (sender, new PreviewEventArgs (p0, p1, p2));
			}

			#pragma warning disable 0649
			public EventHandler<ShowFrameEventArgs>? OnShowFrameHandler;
			#pragma warning restore 0649

			public void OnShowFrame (global::Android.Graphics.RectF? p0, int p1, int p2)
			{
				var __h = OnShowFrameHandler;
				if (__h != null)
					__h (sender, new ShowFrameEventArgs (p0, p1, p2));
			}

			#pragma warning disable 0649
			public EventHandler<SuccessEventArgs>? OnSuccessHandler;
			#pragma warning restore 0649

			public void OnSuccess (global::Android.OS.Bundle? p0)
			{
				var __h = OnSuccessHandler;
				if (__h != null)
					__h (sender, new SuccessEventArgs (p0));
			}

			#pragma warning disable 0649
			public EventHandler<TipEventArgs>? OnTipHandler;
			#pragma warning restore 0649

			public void OnTip (int p0)
			{
				var __h = OnTipHandler;
				if (__h != null)
					__h (sender, new TipEventArgs (p0));
			}

			internal static bool __IsEmpty (IOnFaceDetectListenerImplementor value)
			{
				return value.OnErrorHandler == null && value.OnPreviewHandler == null && value.OnShowFrameHandler == null && value.OnSuccessHandler == null && value.OnTipHandler == null;
			}

		}

		[Register ("com/vanstone/trans/api/AuthFaceApi$Tip", DoNotGenerateAcw=true)]
		[global::System.Obsolete (@"Use the 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip' type. This class will be removed in a future release.")]
		public abstract class Tip : Java.Lang.Object {
			internal Tip ()
			{
			}

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='blur_nopass']"
			[Register ("blur_nopass")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.BlurNopass'. This class will be removed in a future release.")]
			public const int BlurNopass = (int) 4;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='chin']"
			[Register ("chin")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.Chin'. This class will be removed in a future release.")]
			public const int Chin = (int) 12;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='illum_nopass']"
			[Register ("illum_nopass")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.IllumNopass'. This class will be removed in a future release.")]
			public const int IllumNopass = (int) 5;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='leftCheek']"
			[Register ("leftCheek")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.LeftCheek'. This class will be removed in a future release.")]
			public const int LeftCheek = (int) 10;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='leftEye']"
			[Register ("leftEye")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.LeftEye'. This class will be removed in a future release.")]
			public const int LeftEye = (int) 6;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='live_nopass']"
			[Register ("live_nopass")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.LiveNopass'. This class will be removed in a future release.")]
			public const int LiveNopass = (int) 19;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='mouth']"
			[Register ("mouth")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.Mouth'. This class will be removed in a future release.")]
			public const int Mouth = (int) 9;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='nose']"
			[Register ("nose")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.Nose'. This class will be removed in a future release.")]
			public const int Nose = (int) 8;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='no_face']"
			[Register ("no_face")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.NoFace'. This class will be removed in a future release.")]
			public const int NoFace = (int) 0;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='pitch_nopass']"
			[Register ("pitch_nopass")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.PitchNopass'. This class will be removed in a future release.")]
			public const int PitchNopass = (int) 3;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='righEye']"
			[Register ("righEye")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.RighEye'. This class will be removed in a future release.")]
			public const int RighEye = (int) 7;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='rightCheek']"
			[Register ("rightCheek")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.RightCheek'. This class will be removed in a future release.")]
			public const int RightCheek = (int) 11;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='roll_nopass']"
			[Register ("roll_nopass")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.RollNopass'. This class will be removed in a future release.")]
			public const int RollNopass = (int) 2;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='too_down']"
			[Register ("too_down")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.TooDown'. This class will be removed in a future release.")]
			public const int TooDown = (int) 17;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='too_far']"
			[Register ("too_far")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.TooFar'. This class will be removed in a future release.")]
			public const int TooFar = (int) 14;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='too_left']"
			[Register ("too_left")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.TooLeft'. This class will be removed in a future release.")]
			public const int TooLeft = (int) 16;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='too_near']"
			[Register ("too_near")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.TooNear'. This class will be removed in a future release.")]
			public const int TooNear = (int) 13;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='too_right']"
			[Register ("too_right")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.TooRight'. This class will be removed in a future release.")]
			public const int TooRight = (int) 15;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='too_up']"
			[Register ("too_up")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.TooUp'. This class will be removed in a future release.")]
			public const int TooUp = (int) 18;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='yaw_nopass']"
			[Register ("yaw_nopass")]
			[global::System.Obsolete (@"Use 'Com.Vanstone.Trans.Api.AuthFaceApi.ITip.YawNopass'. This class will be removed in a future release.")]
			public const int YawNopass = (int) 1;

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']"
		[Register ("com/vanstone/trans/api/AuthFaceApi$Tip", "", "Com.Vanstone.Trans.Api.AuthFaceApi/ITipInvoker")]
		public partial interface ITip : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='blur_nopass']"
			[Register ("blur_nopass")]
			public const int BlurNopass = (int) 4;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='chin']"
			[Register ("chin")]
			public const int Chin = (int) 12;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='illum_nopass']"
			[Register ("illum_nopass")]
			public const int IllumNopass = (int) 5;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='leftCheek']"
			[Register ("leftCheek")]
			public const int LeftCheek = (int) 10;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='leftEye']"
			[Register ("leftEye")]
			public const int LeftEye = (int) 6;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='live_nopass']"
			[Register ("live_nopass")]
			public const int LiveNopass = (int) 19;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='mouth']"
			[Register ("mouth")]
			public const int Mouth = (int) 9;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='nose']"
			[Register ("nose")]
			public const int Nose = (int) 8;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='no_face']"
			[Register ("no_face")]
			public const int NoFace = (int) 0;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='pitch_nopass']"
			[Register ("pitch_nopass")]
			public const int PitchNopass = (int) 3;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='righEye']"
			[Register ("righEye")]
			public const int RighEye = (int) 7;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='rightCheek']"
			[Register ("rightCheek")]
			public const int RightCheek = (int) 11;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='roll_nopass']"
			[Register ("roll_nopass")]
			public const int RollNopass = (int) 2;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='too_down']"
			[Register ("too_down")]
			public const int TooDown = (int) 17;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='too_far']"
			[Register ("too_far")]
			public const int TooFar = (int) 14;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='too_left']"
			[Register ("too_left")]
			public const int TooLeft = (int) 16;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='too_near']"
			[Register ("too_near")]
			public const int TooNear = (int) 13;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='too_right']"
			[Register ("too_right")]
			public const int TooRight = (int) 15;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='too_up']"
			[Register ("too_up")]
			public const int TooUp = (int) 18;

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='AuthFaceApi.Tip']/field[@name='yaw_nopass']"
			[Register ("yaw_nopass")]
			public const int YawNopass = (int) 1;

		}

		[global::Android.Runtime.Register ("com/vanstone/trans/api/AuthFaceApi$Tip", DoNotGenerateAcw=true)]
		internal partial class ITipInvoker : global::Java.Lang.Object, ITip {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/AuthFaceApi$Tip", typeof (ITipInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static ITip? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<ITip> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.vanstone.trans.api.AuthFaceApi.Tip'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public ITipInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/AuthFaceApi", typeof (AuthFaceApi));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected AuthFaceApi (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AuthFaceApi']/constructor[@name='AuthFaceApi' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe AuthFaceApi () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AuthFaceApi']/method[@name='FaceGetFirmwareInfo_Api' and count(parameter)=0]"
		[Register ("FaceGetFirmwareInfo_Api", "()Landroid/os/Bundle;", "")]
		public static unsafe global::Android.OS.Bundle? FaceGetFirmwareInfo_Api ()
		{
			const string __id = "FaceGetFirmwareInfo_Api.()Landroid/os/Bundle;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return global::Java.Lang.Object.GetObject<global::Android.OS.Bundle> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AuthFaceApi']/method[@name='FaceGetParam_Api' and count(parameter)=0]"
		[Register ("FaceGetParam_Api", "()Landroid/os/Bundle;", "")]
		public static unsafe global::Android.OS.Bundle? FaceGetParam_Api ()
		{
			const string __id = "FaceGetParam_Api.()Landroid/os/Bundle;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return global::Java.Lang.Object.GetObject<global::Android.OS.Bundle> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AuthFaceApi']/method[@name='FaceSetParam_Api' and count(parameter)=1 and parameter[1][@type='android.os.Bundle']]"
		[Register ("FaceSetParam_Api", "(Landroid/os/Bundle;)V", "")]
		public static unsafe void FaceSetParam_Api (global::Android.OS.Bundle? param)
		{
			const string __id = "FaceSetParam_Api.(Landroid/os/Bundle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((param == null) ? IntPtr.Zero : ((global::Java.Lang.Object) param).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (param);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AuthFaceApi']/method[@name='FaceStartDetect_Api' and count(parameter)=2 and parameter[1][@type='android.os.Bundle'] and parameter[2][@type='com.vanstone.trans.api.AuthFaceApi.OnFaceDetectListener']]"
		[Register ("FaceStartDetect_Api", "(Landroid/os/Bundle;Lcom/vanstone/trans/api/AuthFaceApi$OnFaceDetectListener;)V", "")]
		public static unsafe void FaceStartDetect_Api (global::Android.OS.Bundle? @params, global::Com.Vanstone.Trans.Api.AuthFaceApi.IOnFaceDetectListener? listener)
		{
			const string __id = "FaceStartDetect_Api.(Landroid/os/Bundle;Lcom/vanstone/trans/api/AuthFaceApi$OnFaceDetectListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((@params == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @params).Handle);
				__args [1] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (@params);
				global::System.GC.KeepAlive (listener);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='AuthFaceApi']/method[@name='FaceStopDetect_Api' and count(parameter)=0]"
		[Register ("FaceStopDetect_Api", "()V", "")]
		public static unsafe void FaceStopDetect_Api ()
		{
			const string __id = "FaceStopDetect_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

	}
}
