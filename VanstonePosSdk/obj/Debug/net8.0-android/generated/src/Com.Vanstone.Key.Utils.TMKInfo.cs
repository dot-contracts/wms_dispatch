//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Key.Utils {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.key.utils']/class[@name='TMKInfo']"
	[global::Android.Runtime.Register ("com/vanstone/key/utils/TMKInfo", DoNotGenerateAcw=true)]
	public abstract partial class TMKInfo : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/key/utils/TMKInfo", typeof (TMKInfo));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected TMKInfo (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.key.utils']/class[@name='TMKInfo']/constructor[@name='TMKInfo' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe TMKInfo () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getByteArray;
#pragma warning disable 0169
		static Delegate GetGetByteArrayHandler ()
		{
			if (cb_getByteArray == null)
				cb_getByteArray = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetByteArray));
			return cb_getByteArray;
		}

		static IntPtr n_GetByteArray (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Key.Utils.TMKInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetByteArray ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.key.utils']/class[@name='TMKInfo']/method[@name='getByteArray' and count(parameter)=0]"
		[Register ("getByteArray", "()[B", "GetGetByteArrayHandler")]
		public abstract byte[]? GetByteArray ();

		static Delegate? cb_setByteArray_arrayB;
#pragma warning disable 0169
		static Delegate GetSetByteArray_arrayBHandler ()
		{
			if (cb_setByteArray_arrayB == null)
				cb_setByteArray_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_SetByteArray_arrayB));
			return cb_setByteArray_arrayB;
		}

		static bool n_SetByteArray_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Key.Utils.TMKInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var p0 = (byte[]?) JNIEnv.GetArray (native_p0, JniHandleOwnership.DoNotTransfer, typeof (byte));
			bool __ret = __this.SetByteArray (p0);
			if (p0 != null)
				JNIEnv.CopyArray (p0, native_p0);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.key.utils']/class[@name='TMKInfo']/method[@name='setByteArray' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setByteArray", "([B)Z", "GetSetByteArray_arrayBHandler")]
		public abstract bool SetByteArray (byte[]? p0);

	}

	[global::Android.Runtime.Register ("com/vanstone/key/utils/TMKInfo", DoNotGenerateAcw=true)]
	internal partial class TMKInfoInvoker : TMKInfo {
		public TMKInfoInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/key/utils/TMKInfo", typeof (TMKInfoInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.key.utils']/class[@name='TMKInfo']/method[@name='getByteArray' and count(parameter)=0]"
		[Register ("getByteArray", "()[B", "GetGetByteArrayHandler")]
		public override unsafe byte[]? GetByteArray ()
		{
			const string __id = "getByteArray.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeAbstractObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.key.utils']/class[@name='TMKInfo']/method[@name='setByteArray' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setByteArray", "([B)Z", "GetSetByteArray_arrayBHandler")]
		public override unsafe bool SetByteArray (byte[]? p0)
		{
			const string __id = "setByteArray.([B)Z";
			IntPtr native_p0 = JNIEnv.NewArray (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.InstanceMethods.InvokeAbstractBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				if (p0 != null) {
					JNIEnv.CopyArray (native_p0, p0);
					JNIEnv.DeleteLocalRef (native_p0);
				}
				global::System.GC.KeepAlive (p0);
			}
		}

	}
}
