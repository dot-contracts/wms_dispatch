//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Utils {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader']"
	[global::Android.Runtime.Register ("com/vanstone/utils/UpdateFileReader", DoNotGenerateAcw=true)]
	public partial class UpdateFileReader : global::Java.Lang.Object {
		// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.AssetsFileReader']"
		[global::Android.Runtime.Register ("com/vanstone/utils/UpdateFileReader$AssetsFileReader", DoNotGenerateAcw=true)]
		public partial class AssetsFileReader : global::Java.Lang.Object {

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.AssetsFileReader']/field[@name='mAssetsFileReader']"
			[Register ("mAssetsFileReader")]
			protected static global::Com.Vanstone.Utils.UpdateFileReader.AssetsFileReader.IAssetsReader? MAssetsFileReader {
				get {
					const string __id = "mAssetsFileReader.Lcom/vanstone/utils/UpdateFileReader$AssetsFileReader$AssetsReader;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdateFileReader.AssetsFileReader.IAssetsReader> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
				set {
					const string __id = "mAssetsFileReader.Lcom/vanstone/utils/UpdateFileReader$AssetsFileReader$AssetsReader;";

					IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
					try {
						_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
					} finally {
						global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
					}
				}
			}

			// Metadata.xml XPath interface reference: path="/api/package[@name='com.vanstone.utils']/interface[@name='UpdateFileReader.AssetsFileReader.AssetsReader']"
			[Register ("com/vanstone/utils/UpdateFileReader$AssetsFileReader$AssetsReader", "", "Com.Vanstone.Utils.UpdateFileReader/AssetsFileReader/IAssetsReaderInvoker")]
			public partial interface IAssetsReader : IJavaObject, IJavaPeerable {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/interface[@name='UpdateFileReader.AssetsFileReader.AssetsReader']/method[@name='openAssetsFile' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
				[Register ("openAssetsFile", "(Ljava/lang/String;)Ljava/io/InputStream;", "GetOpenAssetsFile_Ljava_lang_String_Handler:Com.Vanstone.Utils.UpdateFileReader/AssetsFileReader/IAssetsReaderInvoker, VanstonePosSdk")]
				global::System.IO.Stream? OpenAssetsFile (string? p0);

			}

			[global::Android.Runtime.Register ("com/vanstone/utils/UpdateFileReader$AssetsFileReader$AssetsReader", DoNotGenerateAcw=true)]
			internal partial class IAssetsReaderInvoker : global::Java.Lang.Object, IAssetsReader {
				static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/UpdateFileReader$AssetsFileReader$AssetsReader", typeof (IAssetsReaderInvoker));

				static IntPtr java_class_ref {
					get { return _members.JniPeerType.PeerReference.Handle; }
				}

				[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
				[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
				public override global::Java.Interop.JniPeerMembers JniPeerMembers {
					get { return _members; }
				}

				[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
				[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
				protected override IntPtr ThresholdClass {
					get { return class_ref; }
				}

				[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
				[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
				protected override global::System.Type ThresholdType {
					get { return _members.ManagedPeerType; }
				}

				IntPtr class_ref;

				public static IAssetsReader? GetObject (IntPtr handle, JniHandleOwnership transfer)
				{
					return global::Java.Lang.Object.GetObject<IAssetsReader> (handle, transfer);
				}

				static IntPtr Validate (IntPtr handle)
				{
					if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
						throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.vanstone.utils.UpdateFileReader.AssetsFileReader.AssetsReader'.");
					return handle;
				}

				protected override void Dispose (bool disposing)
				{
					if (this.class_ref != IntPtr.Zero)
						JNIEnv.DeleteGlobalRef (this.class_ref);
					this.class_ref = IntPtr.Zero;
					base.Dispose (disposing);
				}

				public IAssetsReaderInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
				{
					IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
					this.class_ref = JNIEnv.NewGlobalRef (local_ref);
					JNIEnv.DeleteLocalRef (local_ref);
				}

				static Delegate? cb_openAssetsFile_Ljava_lang_String_;
#pragma warning disable 0169
				static Delegate GetOpenAssetsFile_Ljava_lang_String_Handler ()
				{
					if (cb_openAssetsFile_Ljava_lang_String_ == null)
						cb_openAssetsFile_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_OpenAssetsFile_Ljava_lang_String_));
					return cb_openAssetsFile_Ljava_lang_String_;
				}

				static IntPtr n_OpenAssetsFile_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
				{
					var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdateFileReader.AssetsFileReader.IAssetsReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
					var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
					IntPtr __ret = global::Android.Runtime.InputStreamAdapter.ToLocalJniHandle (__this.OpenAssetsFile (p0));
					return __ret;
				}
#pragma warning restore 0169

				IntPtr id_openAssetsFile_Ljava_lang_String_;
				public unsafe global::System.IO.Stream? OpenAssetsFile (string? p0)
				{
					if (id_openAssetsFile_Ljava_lang_String_ == IntPtr.Zero)
						id_openAssetsFile_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "openAssetsFile", "(Ljava/lang/String;)Ljava/io/InputStream;");
					IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
					JValue* __args = stackalloc JValue [1];
					__args [0] = new JValue (native_p0);
					var __ret = global::Android.Runtime.InputStreamInvoker.FromJniHandle (JNIEnv.CallObjectMethod (((global::Java.Lang.Object) this).Handle, id_openAssetsFile_Ljava_lang_String_, __args), JniHandleOwnership.TransferLocalRef);
					JNIEnv.DeleteLocalRef (native_p0);
					return __ret;
				}

			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/UpdateFileReader$AssetsFileReader", typeof (AssetsFileReader));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected AssetsFileReader (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.AssetsFileReader']/constructor[@name='UpdateFileReader.AssetsFileReader' and count(parameter)=0]"
			[Register (".ctor", "()V", "")]
			public unsafe AssetsFileReader () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, null);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.AssetsFileReader']/method[@name='getFileSize' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("getFileSize", "(Ljava/lang/String;)I", "")]
			protected static unsafe int GetFileSize (string? fileName)
			{
				const string __id = "getFileSize.(Ljava/lang/String;)I";
				IntPtr native_fileName = JNIEnv.NewString ((string?)fileName);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_fileName);
					var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
					return __rm;
				} finally {
					JNIEnv.DeleteLocalRef (native_fileName);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.AssetsFileReader']/method[@name='openFile' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("openFile", "(Ljava/lang/String;)Ljava/io/InputStream;", "")]
			protected static unsafe global::System.IO.Stream? OpenFile (string? fileName)
			{
				const string __id = "openFile.(Ljava/lang/String;)Ljava/io/InputStream;";
				IntPtr native_fileName = JNIEnv.NewString ((string?)fileName);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_fileName);
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
					return global::Android.Runtime.InputStreamInvoker.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_fileName);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.AssetsFileReader']/method[@name='readAssetsFile' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='byte[]'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
			[Register ("readAssetsFile", "(Ljava/lang/String;[BII)I", "")]
			protected static unsafe int ReadAssetsFile (string? fileName, byte[]? outBytes, int offset, int readLen)
			{
				const string __id = "readAssetsFile.(Ljava/lang/String;[BII)I";
				IntPtr native_fileName = JNIEnv.NewString ((string?)fileName);
				IntPtr native_outBytes = JNIEnv.NewArray (outBytes);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [4];
					__args [0] = new JniArgumentValue (native_fileName);
					__args [1] = new JniArgumentValue (native_outBytes);
					__args [2] = new JniArgumentValue (offset);
					__args [3] = new JniArgumentValue (readLen);
					var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
					return __rm;
				} finally {
					JNIEnv.DeleteLocalRef (native_fileName);
					if (outBytes != null) {
						JNIEnv.CopyArray (native_outBytes, outBytes);
						JNIEnv.DeleteLocalRef (native_outBytes);
					}
					global::System.GC.KeepAlive (outBytes);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.AssetsFileReader']/method[@name='setAssetsReader' and count(parameter)=1 and parameter[1][@type='com.vanstone.utils.UpdateFileReader.AssetsFileReader.AssetsReader']]"
			[Register ("setAssetsReader", "(Lcom/vanstone/utils/UpdateFileReader$AssetsFileReader$AssetsReader;)V", "")]
			public static unsafe void SetAssetsReader (global::Com.Vanstone.Utils.UpdateFileReader.AssetsFileReader.IAssetsReader? assetsReader)
			{
				const string __id = "setAssetsReader.(Lcom/vanstone/utils/UpdateFileReader$AssetsFileReader$AssetsReader;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((assetsReader == null) ? IntPtr.Zero : ((global::Java.Lang.Object) assetsReader).Handle);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					global::System.GC.KeepAlive (assetsReader);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.IniReader']"
		[global::Android.Runtime.Register ("com/vanstone/utils/UpdateFileReader$IniReader", DoNotGenerateAcw=true)]
		public partial class IniReader : global::Java.Lang.Object {

			// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.IniReader']/field[@name='sections']"
			[Register ("sections")]
			protected global::System.Collections.IDictionary? Sections {
				get {
					const string __id = "sections.Ljava/util/HashMap;";

					var __v = _members.InstanceFields.GetObjectValue (__id, this);
					return global::Android.Runtime.JavaDictionary.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
				set {
					const string __id = "sections.Ljava/util/HashMap;";

					IntPtr native_value = global::Android.Runtime.JavaDictionary.ToLocalJniHandle (value);
					try {
						_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
					} finally {
						JNIEnv.DeleteLocalRef (native_value);
					}
				}
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/UpdateFileReader$IniReader", typeof (IniReader));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected IniReader (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.IniReader']/constructor[@name='UpdateFileReader.IniReader' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register (".ctor", "(Ljava/lang/String;)V", "")]
			public unsafe IniReader (string? iniFileName) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljava/lang/String;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_iniFileName = JNIEnv.NewString ((string?)iniFileName);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_iniFileName);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_iniFileName);
				}
			}

			static Delegate? cb_containsKey_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetContainsKey_Ljava_lang_String_Ljava_lang_String_Handler ()
			{
				if (cb_containsKey_Ljava_lang_String_Ljava_lang_String_ == null)
					cb_containsKey_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_Z (n_ContainsKey_Ljava_lang_String_Ljava_lang_String_));
				return cb_containsKey_Ljava_lang_String_Ljava_lang_String_;
			}

			static bool n_ContainsKey_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_section, IntPtr native_key)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdateFileReader.IniReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var section = JNIEnv.GetString (native_section, JniHandleOwnership.DoNotTransfer);
				var key = JNIEnv.GetString (native_key, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.ContainsKey (section, key);
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.IniReader']/method[@name='containsKey' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
			[Register ("containsKey", "(Ljava/lang/String;Ljava/lang/String;)Z", "GetContainsKey_Ljava_lang_String_Ljava_lang_String_Handler")]
			public virtual unsafe bool ContainsKey (string? section, string? key)
			{
				const string __id = "containsKey.(Ljava/lang/String;Ljava/lang/String;)Z";
				IntPtr native_section = JNIEnv.NewString ((string?)section);
				IntPtr native_key = JNIEnv.NewString ((string?)key);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_section);
					__args [1] = new JniArgumentValue (native_key);
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
					return __rm;
				} finally {
					JNIEnv.DeleteLocalRef (native_section);
					JNIEnv.DeleteLocalRef (native_key);
				}
			}

			static Delegate? cb_getValue_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetGetValue_Ljava_lang_String_Ljava_lang_String_Handler ()
			{
				if (cb_getValue_Ljava_lang_String_Ljava_lang_String_ == null)
					cb_getValue_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_GetValue_Ljava_lang_String_Ljava_lang_String_));
				return cb_getValue_Ljava_lang_String_Ljava_lang_String_;
			}

			static IntPtr n_GetValue_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_section, IntPtr native_name)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdateFileReader.IniReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var section = JNIEnv.GetString (native_section, JniHandleOwnership.DoNotTransfer);
				var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
				IntPtr __ret = JNIEnv.NewString (__this.GetValue (section, name));
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.IniReader']/method[@name='getValue' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
			[Register ("getValue", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetGetValue_Ljava_lang_String_Ljava_lang_String_Handler")]
			public virtual unsafe string? GetValue (string? section, string? name)
			{
				const string __id = "getValue.(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
				IntPtr native_section = JNIEnv.NewString ((string?)section);
				IntPtr native_name = JNIEnv.NewString ((string?)name);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_section);
					__args [1] = new JniArgumentValue (native_name);
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_section);
					JNIEnv.DeleteLocalRef (native_name);
				}
			}

			static Delegate? cb_parseLine_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetParseLine_Ljava_lang_String_Handler ()
			{
				if (cb_parseLine_Ljava_lang_String_ == null)
					cb_parseLine_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ParseLine_Ljava_lang_String_));
				return cb_parseLine_Ljava_lang_String_;
			}

			static void n_ParseLine_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_line)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdateFileReader.IniReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var line = JNIEnv.GetString (native_line, JniHandleOwnership.DoNotTransfer);
				__this.ParseLine (line);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.IniReader']/method[@name='parseLine' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("parseLine", "(Ljava/lang/String;)V", "GetParseLine_Ljava_lang_String_Handler")]
			protected virtual unsafe void ParseLine (string? line)
			{
				const string __id = "parseLine.(Ljava/lang/String;)V";
				IntPtr native_line = JNIEnv.NewString ((string?)line);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_line);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_line);
				}
			}

			static Delegate? cb_read_Ljava_io_BufferedReader_;
#pragma warning disable 0169
			static Delegate GetRead_Ljava_io_BufferedReader_Handler ()
			{
				if (cb_read_Ljava_io_BufferedReader_ == null)
					cb_read_Ljava_io_BufferedReader_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Read_Ljava_io_BufferedReader_));
				return cb_read_Ljava_io_BufferedReader_;
			}

			static void n_Read_Ljava_io_BufferedReader_ (IntPtr jnienv, IntPtr native__this, IntPtr native_reader)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdateFileReader.IniReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var reader = global::Java.Lang.Object.GetObject<global::Java.IO.BufferedReader> (native_reader, JniHandleOwnership.DoNotTransfer);
				__this.Read (reader);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader.IniReader']/method[@name='read' and count(parameter)=1 and parameter[1][@type='java.io.BufferedReader']]"
			[Register ("read", "(Ljava/io/BufferedReader;)V", "GetRead_Ljava_io_BufferedReader_Handler")]
			protected virtual unsafe void Read (global::Java.IO.BufferedReader? reader)
			{
				const string __id = "read.(Ljava/io/BufferedReader;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((reader == null) ? IntPtr.Zero : ((global::Java.Lang.Object) reader).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (reader);
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/UpdateFileReader", typeof (UpdateFileReader));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected UpdateFileReader (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader']/constructor[@name='UpdateFileReader' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe UpdateFileReader () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader']/method[@name='getFileSize' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("getFileSize", "(Ljava/lang/String;)I", "")]
		public static unsafe int GetFileSize (string? fileName)
		{
			const string __id = "getFileSize.(Ljava/lang/String;)I";
			IntPtr native_fileName = JNIEnv.NewString ((string?)fileName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_fileName);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_fileName);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader']/method[@name='readFile' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='byte[]'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("readFile", "(Ljava/lang/String;[BII)I", "")]
		public static unsafe int ReadFile (string? fileName, byte[]? outBytes, int offset, int readLen)
		{
			const string __id = "readFile.(Ljava/lang/String;[BII)I";
			IntPtr native_fileName = JNIEnv.NewString ((string?)fileName);
			IntPtr native_outBytes = JNIEnv.NewArray (outBytes);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_fileName);
				__args [1] = new JniArgumentValue (native_outBytes);
				__args [2] = new JniArgumentValue (offset);
				__args [3] = new JniArgumentValue (readLen);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_fileName);
				if (outBytes != null) {
					JNIEnv.CopyArray (native_outBytes, outBytes);
					JNIEnv.DeleteLocalRef (native_outBytes);
				}
				global::System.GC.KeepAlive (outBytes);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdateFileReader']/method[@name='readFile' and count(parameter)=5 and parameter[1][@type='java.lang.String'] and parameter[2][@type='byte[]'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]"
		[Register ("readFile", "(Ljava/lang/String;[BIII)I", "")]
		public static unsafe int ReadFile (string? fileName, byte[]? outBytes, int outSince, int offset, int readLen)
		{
			const string __id = "readFile.(Ljava/lang/String;[BIII)I";
			IntPtr native_fileName = JNIEnv.NewString ((string?)fileName);
			IntPtr native_outBytes = JNIEnv.NewArray (outBytes);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (native_fileName);
				__args [1] = new JniArgumentValue (native_outBytes);
				__args [2] = new JniArgumentValue (outSince);
				__args [3] = new JniArgumentValue (offset);
				__args [4] = new JniArgumentValue (readLen);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_fileName);
				if (outBytes != null) {
					JNIEnv.CopyArray (native_outBytes, outBytes);
					JNIEnv.DeleteLocalRef (native_outBytes);
				}
				global::System.GC.KeepAlive (outBytes);
			}
		}

	}
}
