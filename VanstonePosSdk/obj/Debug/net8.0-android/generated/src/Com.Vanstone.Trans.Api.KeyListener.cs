//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyListener']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/KeyListener", DoNotGenerateAcw=true)]
	public partial class KeyListener : global::Java.Lang.Object, global::Com.Vanstone.Page.Widget.Body.Custom.IOnKeyBoardClickListener {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyListener']/field[@name='KEYVALUE']"
		[Register ("KEYVALUE")]
		public string? Keyvalue {
			get {
				const string __id = "KEYVALUE.Ljava/lang/String;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "KEYVALUE.Ljava/lang/String;";

				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/KeyListener", typeof (KeyListener));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected KeyListener (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyListener']/constructor[@name='KeyListener' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe KeyListener () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getKeyValue;
#pragma warning disable 0169
		static Delegate GetGetKeyValueHandler ()
		{
			if (cb_getKeyValue == null)
				cb_getKeyValue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetKeyValue));
			return cb_getKeyValue;
		}

		static IntPtr n_GetKeyValue (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.KeyListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.KeyValue);
		}
#pragma warning restore 0169

		public virtual unsafe string? KeyValue {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyListener']/method[@name='getKeyValue' and count(parameter)=0]"
			[Register ("getKeyValue", "()Ljava/lang/String;", "GetGetKeyValueHandler")]
			get {
				const string __id = "getKeyValue.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_KeyListener;
#pragma warning disable 0169
		static Delegate GetInvokeKeyListenerHandler ()
		{
			if (cb_KeyListener == null)
				cb_KeyListener = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_InvokeKeyListener));
			return cb_KeyListener;
		}

		static void n_InvokeKeyListener (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.KeyListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.InvokeKeyListener ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyListener']/method[@name='KeyListener' and count(parameter)=0]"
		[Register ("KeyListener", "()V", "GetInvokeKeyListenerHandler")]
		public virtual unsafe void InvokeKeyListener ()
		{
			const string __id = "KeyListener.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_onCancel;
#pragma warning disable 0169
		static Delegate GetOnCancelHandler ()
		{
			if (cb_onCancel == null)
				cb_onCancel = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnCancel));
			return cb_onCancel;
		}

		static void n_OnCancel (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.KeyListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.OnCancel ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyListener']/method[@name='onCancel' and count(parameter)=0]"
		[Register ("onCancel", "()V", "GetOnCancelHandler")]
		public virtual unsafe void OnCancel ()
		{
			const string __id = "onCancel.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_onEnter_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetOnEnter_Ljava_lang_String_Handler ()
		{
			if (cb_onEnter_Ljava_lang_String_ == null)
				cb_onEnter_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnEnter_Ljava_lang_String_));
			return cb_onEnter_Ljava_lang_String_;
		}

		static void n_OnEnter_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_keyValue)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.KeyListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var keyValue = JNIEnv.GetString (native_keyValue, JniHandleOwnership.DoNotTransfer);
			__this.OnEnter (keyValue);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyListener']/method[@name='onEnter' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("onEnter", "(Ljava/lang/String;)V", "GetOnEnter_Ljava_lang_String_Handler")]
		public virtual unsafe void OnEnter (string? keyValue)
		{
			const string __id = "onEnter.(Ljava/lang/String;)V";
			IntPtr native_keyValue = JNIEnv.NewString ((string?)keyValue);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_keyValue);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_keyValue);
			}
		}

		static Delegate? cb_onKeyBoardClick_Landroid_view_View_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetOnKeyBoardClick_Landroid_view_View_Ljava_lang_String_Handler ()
		{
			if (cb_onKeyBoardClick_Landroid_view_View_Ljava_lang_String_ == null)
				cb_onKeyBoardClick_Landroid_view_View_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OnKeyBoardClick_Landroid_view_View_Ljava_lang_String_));
			return cb_onKeyBoardClick_Landroid_view_View_Ljava_lang_String_;
		}

		static void n_OnKeyBoardClick_Landroid_view_View_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_view, IntPtr native_key)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.KeyListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var view = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_view, JniHandleOwnership.DoNotTransfer);
			var key = JNIEnv.GetString (native_key, JniHandleOwnership.DoNotTransfer);
			__this.OnKeyBoardClick (view, key);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyListener']/method[@name='onKeyBoardClick' and count(parameter)=2 and parameter[1][@type='android.view.View'] and parameter[2][@type='java.lang.String']]"
		[Register ("onKeyBoardClick", "(Landroid/view/View;Ljava/lang/String;)V", "GetOnKeyBoardClick_Landroid_view_View_Ljava_lang_String_Handler")]
		public virtual unsafe void OnKeyBoardClick (global::Android.Views.View? view, string? key)
		{
			const string __id = "onKeyBoardClick.(Landroid/view/View;Ljava/lang/String;)V";
			IntPtr native_key = JNIEnv.NewString ((string?)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((view == null) ? IntPtr.Zero : ((global::Java.Lang.Object) view).Handle);
				__args [1] = new JniArgumentValue (native_key);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_key);
				global::System.GC.KeepAlive (view);
			}
		}

		static Delegate? cb_onKeyClick_I;
#pragma warning disable 0169
		static Delegate GetOnKeyClick_IHandler ()
		{
			if (cb_onKeyClick_I == null)
				cb_onKeyClick_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_OnKeyClick_I));
			return cb_onKeyClick_I;
		}

		static void n_OnKeyClick_I (IntPtr jnienv, IntPtr native__this, int keyLen)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.KeyListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.OnKeyClick (keyLen);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='KeyListener']/method[@name='onKeyClick' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("onKeyClick", "(I)V", "GetOnKeyClick_IHandler")]
		public virtual unsafe void OnKeyClick (int keyLen)
		{
			const string __id = "onKeyClick.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (keyLen);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

	}
}
