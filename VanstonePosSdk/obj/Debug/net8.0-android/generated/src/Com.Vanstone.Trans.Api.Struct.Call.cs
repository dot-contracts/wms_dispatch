//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api.Struct {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/struct/Call", DoNotGenerateAcw=true)]
	public partial class Call : global::Java.Lang.Object, global::Com.Vanstone.Base.Interfaces.IStructInterface {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/struct/Call", typeof (Call));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Call (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/constructor[@name='Call' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe Call () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getFlag;
#pragma warning disable 0169
		static Delegate GetGetFlagHandler ()
		{
			if (cb_getFlag == null)
				cb_getFlag = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_B (n_GetFlag));
			return cb_getFlag;
		}

		static sbyte n_GetFlag (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Flag;
		}
#pragma warning restore 0169

		static Delegate? cb_setFlag_B;
#pragma warning disable 0169
		static Delegate GetSetFlag_BHandler ()
		{
			if (cb_setFlag_B == null)
				cb_setFlag_B = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPB_V (n_SetFlag_B));
			return cb_setFlag_B;
		}

		static void n_SetFlag_B (IntPtr jnienv, IntPtr native__this, sbyte flag)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Flag = flag;
		}
#pragma warning restore 0169

		public virtual unsafe sbyte Flag {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='getFlag' and count(parameter)=0]"
			[Register ("getFlag", "()B", "GetGetFlagHandler")]
			get {
				const string __id = "getFlag.()B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSByteMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='setFlag' and count(parameter)=1 and parameter[1][@type='byte']]"
			[Register ("setFlag", "(B)V", "GetSetFlag_BHandler")]
			set {
				const string __id = "setFlag.(B)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getSetTell;
#pragma warning disable 0169
		static Delegate GetGetSetTellHandler ()
		{
			if (cb_getSetTell == null)
				cb_getSetTell = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetSetTell));
			return cb_getSetTell;
		}

		static IntPtr n_GetSetTell (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.SetTell);
		}
#pragma warning restore 0169

		static Delegate? cb_setSetTell_Lcom_vanstone_trans_api_struct_TellSet_;
#pragma warning disable 0169
		static Delegate GetSetSetTell_Lcom_vanstone_trans_api_struct_TellSet_Handler ()
		{
			if (cb_setSetTell_Lcom_vanstone_trans_api_struct_TellSet_ == null)
				cb_setSetTell_Lcom_vanstone_trans_api_struct_TellSet_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetSetTell_Lcom_vanstone_trans_api_struct_TellSet_));
			return cb_setSetTell_Lcom_vanstone_trans_api_struct_TellSet_;
		}

		static void n_SetSetTell_Lcom_vanstone_trans_api_struct_TellSet_ (IntPtr jnienv, IntPtr native__this, IntPtr native_setTell)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var setTell = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TellSet> (native_setTell, JniHandleOwnership.DoNotTransfer);
			__this.SetTell = setTell;
		}
#pragma warning restore 0169

		public virtual unsafe global::Com.Vanstone.Trans.Api.Struct.TellSet? SetTell {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='getSetTell' and count(parameter)=0]"
			[Register ("getSetTell", "()Lcom/vanstone/trans/api/struct/TellSet;", "GetGetSetTellHandler")]
			get {
				const string __id = "getSetTell.()Lcom/vanstone/trans/api/struct/TellSet;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TellSet> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='setSetTell' and count(parameter)=1 and parameter[1][@type='com.vanstone.trans.api.struct.TellSet']]"
			[Register ("setSetTell", "(Lcom/vanstone/trans/api/struct/TellSet;)V", "GetSetSetTell_Lcom_vanstone_trans_api_struct_TellSet_Handler")]
			set {
				const string __id = "setSetTell.(Lcom/vanstone/trans/api/struct/TellSet;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		static Delegate? cb_getDataTime;
#pragma warning disable 0169
		static Delegate GetGetDataTimeHandler ()
		{
			if (cb_getDataTime == null)
				cb_getDataTime = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetDataTime));
			return cb_getDataTime;
		}

		static IntPtr n_GetDataTime (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetDataTime ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='getDataTime' and count(parameter)=0]"
		[Register ("getDataTime", "()[B", "GetGetDataTimeHandler")]
		public virtual unsafe byte[]? GetDataTime ()
		{
			const string __id = "getDataTime.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_getPhoneName;
#pragma warning disable 0169
		static Delegate GetGetPhoneNameHandler ()
		{
			if (cb_getPhoneName == null)
				cb_getPhoneName = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetPhoneName));
			return cb_getPhoneName;
		}

		static IntPtr n_GetPhoneName (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetPhoneName ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='getPhoneName' and count(parameter)=0]"
		[Register ("getPhoneName", "()[B", "GetGetPhoneNameHandler")]
		public virtual unsafe byte[]? GetPhoneName ()
		{
			const string __id = "getPhoneName.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_getPhoneNum;
#pragma warning disable 0169
		static Delegate GetGetPhoneNumHandler ()
		{
			if (cb_getPhoneNum == null)
				cb_getPhoneNum = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetPhoneNum));
			return cb_getPhoneNum;
		}

		static IntPtr n_GetPhoneNum (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetPhoneNum ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='getPhoneNum' and count(parameter)=0]"
		[Register ("getPhoneNum", "()[B", "GetGetPhoneNumHandler")]
		public virtual unsafe byte[]? GetPhoneNum ()
		{
			const string __id = "getPhoneNum.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_getPhoneNumDis;
#pragma warning disable 0169
		static Delegate GetGetPhoneNumDisHandler ()
		{
			if (cb_getPhoneNumDis == null)
				cb_getPhoneNumDis = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetPhoneNumDis));
			return cb_getPhoneNumDis;
		}

		static IntPtr n_GetPhoneNumDis (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetPhoneNumDis ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='getPhoneNumDis' and count(parameter)=0]"
		[Register ("getPhoneNumDis", "()[B", "GetGetPhoneNumDisHandler")]
		public virtual unsafe byte[]? GetPhoneNumDis ()
		{
			const string __id = "getPhoneNumDis.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_setDataTime_arrayB;
#pragma warning disable 0169
		static Delegate GetSetDataTime_arrayBHandler ()
		{
			if (cb_setDataTime_arrayB == null)
				cb_setDataTime_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetDataTime_arrayB));
			return cb_setDataTime_arrayB;
		}

		static void n_SetDataTime_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_dataTime)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var dataTime = (byte[]?) JNIEnv.GetArray (native_dataTime, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetDataTime (dataTime);
			if (dataTime != null)
				JNIEnv.CopyArray (dataTime, native_dataTime);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='setDataTime' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setDataTime", "([B)V", "GetSetDataTime_arrayBHandler")]
		public virtual unsafe void SetDataTime (byte[]? dataTime)
		{
			const string __id = "setDataTime.([B)V";
			IntPtr native_dataTime = JNIEnv.NewArray (dataTime);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_dataTime);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (dataTime != null) {
					JNIEnv.CopyArray (native_dataTime, dataTime);
					JNIEnv.DeleteLocalRef (native_dataTime);
				}
				global::System.GC.KeepAlive (dataTime);
			}
		}

		static Delegate? cb_setPhoneName_arrayB;
#pragma warning disable 0169
		static Delegate GetSetPhoneName_arrayBHandler ()
		{
			if (cb_setPhoneName_arrayB == null)
				cb_setPhoneName_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetPhoneName_arrayB));
			return cb_setPhoneName_arrayB;
		}

		static void n_SetPhoneName_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_phoneName)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var phoneName = (byte[]?) JNIEnv.GetArray (native_phoneName, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetPhoneName (phoneName);
			if (phoneName != null)
				JNIEnv.CopyArray (phoneName, native_phoneName);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='setPhoneName' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setPhoneName", "([B)V", "GetSetPhoneName_arrayBHandler")]
		public virtual unsafe void SetPhoneName (byte[]? phoneName)
		{
			const string __id = "setPhoneName.([B)V";
			IntPtr native_phoneName = JNIEnv.NewArray (phoneName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_phoneName);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (phoneName != null) {
					JNIEnv.CopyArray (native_phoneName, phoneName);
					JNIEnv.DeleteLocalRef (native_phoneName);
				}
				global::System.GC.KeepAlive (phoneName);
			}
		}

		static Delegate? cb_setPhoneNum_arrayB;
#pragma warning disable 0169
		static Delegate GetSetPhoneNum_arrayBHandler ()
		{
			if (cb_setPhoneNum_arrayB == null)
				cb_setPhoneNum_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetPhoneNum_arrayB));
			return cb_setPhoneNum_arrayB;
		}

		static void n_SetPhoneNum_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_phoneNum)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var phoneNum = (byte[]?) JNIEnv.GetArray (native_phoneNum, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetPhoneNum (phoneNum);
			if (phoneNum != null)
				JNIEnv.CopyArray (phoneNum, native_phoneNum);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='setPhoneNum' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setPhoneNum", "([B)V", "GetSetPhoneNum_arrayBHandler")]
		public virtual unsafe void SetPhoneNum (byte[]? phoneNum)
		{
			const string __id = "setPhoneNum.([B)V";
			IntPtr native_phoneNum = JNIEnv.NewArray (phoneNum);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_phoneNum);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (phoneNum != null) {
					JNIEnv.CopyArray (native_phoneNum, phoneNum);
					JNIEnv.DeleteLocalRef (native_phoneNum);
				}
				global::System.GC.KeepAlive (phoneNum);
			}
		}

		static Delegate? cb_setPhoneNumDis_arrayB;
#pragma warning disable 0169
		static Delegate GetSetPhoneNumDis_arrayBHandler ()
		{
			if (cb_setPhoneNumDis_arrayB == null)
				cb_setPhoneNumDis_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetPhoneNumDis_arrayB));
			return cb_setPhoneNumDis_arrayB;
		}

		static void n_SetPhoneNumDis_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_phoneNumDis)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var phoneNumDis = (byte[]?) JNIEnv.GetArray (native_phoneNumDis, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetPhoneNumDis (phoneNumDis);
			if (phoneNumDis != null)
				JNIEnv.CopyArray (phoneNumDis, native_phoneNumDis);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='setPhoneNumDis' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setPhoneNumDis", "([B)V", "GetSetPhoneNumDis_arrayBHandler")]
		public virtual unsafe void SetPhoneNumDis (byte[]? phoneNumDis)
		{
			const string __id = "setPhoneNumDis.([B)V";
			IntPtr native_phoneNumDis = JNIEnv.NewArray (phoneNumDis);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_phoneNumDis);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (phoneNumDis != null) {
					JNIEnv.CopyArray (native_phoneNumDis, phoneNumDis);
					JNIEnv.DeleteLocalRef (native_phoneNumDis);
				}
				global::System.GC.KeepAlive (phoneNumDis);
			}
		}

		static Delegate? cb_size;
#pragma warning disable 0169
		static Delegate GetSizeHandler ()
		{
			if (cb_size == null)
				cb_size = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Size));
			return cb_size;
		}

		static int n_Size (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Size ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='size' and count(parameter)=0]"
		[Register ("size", "()I", "GetSizeHandler")]
		public virtual unsafe int Size ()
		{
			const string __id = "size.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_toBean_arrayB;
#pragma warning disable 0169
		static Delegate GetToBean_arrayBHandler ()
		{
			if (cb_toBean_arrayB == null)
				cb_toBean_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ToBean_arrayB));
			return cb_toBean_arrayB;
		}

		static void n_ToBean_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_buf)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var buf = (byte[]?) JNIEnv.GetArray (native_buf, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.ToBean (buf);
			if (buf != null)
				JNIEnv.CopyArray (buf, native_buf);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='toBean' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("toBean", "([B)V", "GetToBean_arrayBHandler")]
		public virtual unsafe void ToBean (byte[]? buf)
		{
			const string __id = "toBean.([B)V";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_buf);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		static Delegate? cb_toBytes;
#pragma warning disable 0169
		static Delegate GetToBytesHandler ()
		{
			if (cb_toBytes == null)
				cb_toBytes = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToBytes));
			return cb_toBytes;
		}

		static IntPtr n_ToBytes (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.Call> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.ToBytes ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='Call']/method[@name='toBytes' and count(parameter)=0]"
		[Register ("toBytes", "()[B", "GetToBytesHandler")]
		public virtual unsafe byte[]? ToBytes ()
		{
			const string __id = "toBytes.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

	}
}
