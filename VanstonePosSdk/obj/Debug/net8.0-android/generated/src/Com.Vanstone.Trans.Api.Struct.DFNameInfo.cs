//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api.Struct {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/struct/DFNameInfo", DoNotGenerateAcw=true)]
	public partial class DFNameInfo : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/field[@name='AID']"
		[Register ("AID")]
		public IList<byte>? Aid {
			get {
				const string __id = "AID.[B";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Android.Runtime.JavaArray<byte>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "AID.[B";

				IntPtr native_value = global::Android.Runtime.JavaArray<byte>.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/field[@name='DFName']"
		[Register ("DFName")]
		public IList<byte>? DFName {
			get {
				const string __id = "DFName.[B";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Android.Runtime.JavaArray<byte>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "DFName.[B";

				IntPtr native_value = global::Android.Runtime.JavaArray<byte>.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/field[@name='FID']"
		[Register ("FID")]
		public IList<byte>? Fid {
			get {
				const string __id = "FID.[B";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Android.Runtime.JavaArray<byte>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "FID.[B";

				IntPtr native_value = global::Android.Runtime.JavaArray<byte>.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/field[@name='RFU']"
		[Register ("RFU")]
		public IList<byte>? Rfu {
			get {
				const string __id = "RFU.[B";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Android.Runtime.JavaArray<byte>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "RFU.[B";

				IntPtr native_value = global::Android.Runtime.JavaArray<byte>.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/struct/DFNameInfo", typeof (DFNameInfo));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected DFNameInfo (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/constructor[@name='DFNameInfo' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe DFNameInfo () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getLenOfDFName;
#pragma warning disable 0169
		static Delegate GetGetLenOfDFNameHandler ()
		{
			if (cb_getLenOfDFName == null)
				cb_getLenOfDFName = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_B (n_GetLenOfDFName));
			return cb_getLenOfDFName;
		}

		static sbyte n_GetLenOfDFName (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DFNameInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.LenOfDFName;
		}
#pragma warning restore 0169

		static Delegate? cb_setLenOfDFName_B;
#pragma warning disable 0169
		static Delegate GetSetLenOfDFName_BHandler ()
		{
			if (cb_setLenOfDFName_B == null)
				cb_setLenOfDFName_B = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPB_V (n_SetLenOfDFName_B));
			return cb_setLenOfDFName_B;
		}

		static void n_SetLenOfDFName_B (IntPtr jnienv, IntPtr native__this, sbyte lenOfDFName)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DFNameInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.LenOfDFName = lenOfDFName;
		}
#pragma warning restore 0169

		public virtual unsafe sbyte LenOfDFName {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/method[@name='getLenOfDFName' and count(parameter)=0]"
			[Register ("getLenOfDFName", "()B", "GetGetLenOfDFNameHandler")]
			get {
				const string __id = "getLenOfDFName.()B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSByteMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/method[@name='setLenOfDFName' and count(parameter)=1 and parameter[1][@type='byte']]"
			[Register ("setLenOfDFName", "(B)V", "GetSetLenOfDFName_BHandler")]
			set {
				const string __id = "setLenOfDFName.(B)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getAID;
#pragma warning disable 0169
		static Delegate GetGetAIDHandler ()
		{
			if (cb_getAID == null)
				cb_getAID = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetAID));
			return cb_getAID;
		}

		static IntPtr n_GetAID (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DFNameInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetAID ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/method[@name='getAID' and count(parameter)=0]"
		[Register ("getAID", "()[B", "GetGetAIDHandler")]
		public virtual unsafe byte[]? GetAID ()
		{
			const string __id = "getAID.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_getDFName;
#pragma warning disable 0169
		static Delegate GetGetDFNameHandler ()
		{
			if (cb_getDFName == null)
				cb_getDFName = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetDFName));
			return cb_getDFName;
		}

		static IntPtr n_GetDFName (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DFNameInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetDFName ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/method[@name='getDFName' and count(parameter)=0]"
		[Register ("getDFName", "()[B", "GetGetDFNameHandler")]
		public virtual unsafe byte[]? GetDFName ()
		{
			const string __id = "getDFName.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_getFID;
#pragma warning disable 0169
		static Delegate GetGetFIDHandler ()
		{
			if (cb_getFID == null)
				cb_getFID = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetFID));
			return cb_getFID;
		}

		static IntPtr n_GetFID (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DFNameInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetFID ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/method[@name='getFID' and count(parameter)=0]"
		[Register ("getFID", "()[B", "GetGetFIDHandler")]
		public virtual unsafe byte[]? GetFID ()
		{
			const string __id = "getFID.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_getRFU;
#pragma warning disable 0169
		static Delegate GetGetRFUHandler ()
		{
			if (cb_getRFU == null)
				cb_getRFU = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetRFU));
			return cb_getRFU;
		}

		static IntPtr n_GetRFU (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DFNameInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetRFU ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/method[@name='getRFU' and count(parameter)=0]"
		[Register ("getRFU", "()[B", "GetGetRFUHandler")]
		public virtual unsafe byte[]? GetRFU ()
		{
			const string __id = "getRFU.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_setAID_arrayB;
#pragma warning disable 0169
		static Delegate GetSetAID_arrayBHandler ()
		{
			if (cb_setAID_arrayB == null)
				cb_setAID_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetAID_arrayB));
			return cb_setAID_arrayB;
		}

		static void n_SetAID_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_aID)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DFNameInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var aID = (byte[]?) JNIEnv.GetArray (native_aID, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetAID (aID);
			if (aID != null)
				JNIEnv.CopyArray (aID, native_aID);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/method[@name='setAID' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setAID", "([B)V", "GetSetAID_arrayBHandler")]
		public virtual unsafe void SetAID (byte[]? aID)
		{
			const string __id = "setAID.([B)V";
			IntPtr native_aID = JNIEnv.NewArray (aID);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_aID);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (aID != null) {
					JNIEnv.CopyArray (native_aID, aID);
					JNIEnv.DeleteLocalRef (native_aID);
				}
				global::System.GC.KeepAlive (aID);
			}
		}

		static Delegate? cb_setDFName_arrayB;
#pragma warning disable 0169
		static Delegate GetSetDFName_arrayBHandler ()
		{
			if (cb_setDFName_arrayB == null)
				cb_setDFName_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetDFName_arrayB));
			return cb_setDFName_arrayB;
		}

		static void n_SetDFName_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_dFName)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DFNameInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var dFName = (byte[]?) JNIEnv.GetArray (native_dFName, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetDFName (dFName);
			if (dFName != null)
				JNIEnv.CopyArray (dFName, native_dFName);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/method[@name='setDFName' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setDFName", "([B)V", "GetSetDFName_arrayBHandler")]
		public virtual unsafe void SetDFName (byte[]? dFName)
		{
			const string __id = "setDFName.([B)V";
			IntPtr native_dFName = JNIEnv.NewArray (dFName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_dFName);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (dFName != null) {
					JNIEnv.CopyArray (native_dFName, dFName);
					JNIEnv.DeleteLocalRef (native_dFName);
				}
				global::System.GC.KeepAlive (dFName);
			}
		}

		static Delegate? cb_setFID_arrayB;
#pragma warning disable 0169
		static Delegate GetSetFID_arrayBHandler ()
		{
			if (cb_setFID_arrayB == null)
				cb_setFID_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetFID_arrayB));
			return cb_setFID_arrayB;
		}

		static void n_SetFID_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_fID)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DFNameInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var fID = (byte[]?) JNIEnv.GetArray (native_fID, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetFID (fID);
			if (fID != null)
				JNIEnv.CopyArray (fID, native_fID);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/method[@name='setFID' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setFID", "([B)V", "GetSetFID_arrayBHandler")]
		public virtual unsafe void SetFID (byte[]? fID)
		{
			const string __id = "setFID.([B)V";
			IntPtr native_fID = JNIEnv.NewArray (fID);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_fID);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (fID != null) {
					JNIEnv.CopyArray (native_fID, fID);
					JNIEnv.DeleteLocalRef (native_fID);
				}
				global::System.GC.KeepAlive (fID);
			}
		}

		static Delegate? cb_setRFU_arrayB;
#pragma warning disable 0169
		static Delegate GetSetRFU_arrayBHandler ()
		{
			if (cb_setRFU_arrayB == null)
				cb_setRFU_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetRFU_arrayB));
			return cb_setRFU_arrayB;
		}

		static void n_SetRFU_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_rFU)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DFNameInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var rFU = (byte[]?) JNIEnv.GetArray (native_rFU, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetRFU (rFU);
			if (rFU != null)
				JNIEnv.CopyArray (rFU, native_rFU);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DFNameInfo']/method[@name='setRFU' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setRFU", "([B)V", "GetSetRFU_arrayBHandler")]
		public virtual unsafe void SetRFU (byte[]? rFU)
		{
			const string __id = "setRFU.([B)V";
			IntPtr native_rFU = JNIEnv.NewArray (rFU);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_rFU);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (rFU != null) {
					JNIEnv.CopyArray (native_rFU, rFU);
					JNIEnv.DeleteLocalRef (native_rFU);
				}
				global::System.GC.KeepAlive (rFU);
			}
		}

	}
}
