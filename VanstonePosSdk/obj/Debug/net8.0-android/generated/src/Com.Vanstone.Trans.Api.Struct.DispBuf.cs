//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api.Struct {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/struct/DispBuf", DoNotGenerateAcw=true)]
	public partial class DispBuf : global::Java.Lang.Object, global::Com.Vanstone.Base.Interfaces.IStructInterface {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/struct/DispBuf", typeof (DispBuf));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected DispBuf (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/constructor[@name='DispBuf' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe DispBuf () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getCol;
#pragma warning disable 0169
		static Delegate GetGetColHandler ()
		{
			if (cb_getCol == null)
				cb_getCol = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_B (n_GetCol));
			return cb_getCol;
		}

		static sbyte n_GetCol (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Col;
		}
#pragma warning restore 0169

		static Delegate? cb_setCol_B;
#pragma warning disable 0169
		static Delegate GetSetCol_BHandler ()
		{
			if (cb_setCol_B == null)
				cb_setCol_B = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPB_V (n_SetCol_B));
			return cb_setCol_B;
		}

		static void n_SetCol_B (IntPtr jnienv, IntPtr native__this, sbyte col)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Col = col;
		}
#pragma warning restore 0169

		public virtual unsafe sbyte Col {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='getCol' and count(parameter)=0]"
			[Register ("getCol", "()B", "GetGetColHandler")]
			get {
				const string __id = "getCol.()B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSByteMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='setCol' and count(parameter)=1 and parameter[1][@type='byte']]"
			[Register ("setCol", "(B)V", "GetSetCol_BHandler")]
			set {
				const string __id = "setCol.(B)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getCurrentAddr;
#pragma warning disable 0169
		static Delegate GetGetCurrentAddrHandler ()
		{
			if (cb_getCurrentAddr == null)
				cb_getCurrentAddr = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetCurrentAddr));
			return cb_getCurrentAddr;
		}

		static int n_GetCurrentAddr (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.CurrentAddr;
		}
#pragma warning restore 0169

		static Delegate? cb_setCurrentAddr_I;
#pragma warning disable 0169
		static Delegate GetSetCurrentAddr_IHandler ()
		{
			if (cb_setCurrentAddr_I == null)
				cb_setCurrentAddr_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetCurrentAddr_I));
			return cb_setCurrentAddr_I;
		}

		static void n_SetCurrentAddr_I (IntPtr jnienv, IntPtr native__this, int currentAddr)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.CurrentAddr = currentAddr;
		}
#pragma warning restore 0169

		public virtual unsafe int CurrentAddr {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='getCurrentAddr' and count(parameter)=0]"
			[Register ("getCurrentAddr", "()I", "GetGetCurrentAddrHandler")]
			get {
				const string __id = "getCurrentAddr.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='setCurrentAddr' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setCurrentAddr", "(I)V", "GetSetCurrentAddr_IHandler")]
			set {
				const string __id = "setCurrentAddr.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getNextAddr;
#pragma warning disable 0169
		static Delegate GetGetNextAddrHandler ()
		{
			if (cb_getNextAddr == null)
				cb_getNextAddr = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetNextAddr));
			return cb_getNextAddr;
		}

		static int n_GetNextAddr (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.NextAddr;
		}
#pragma warning restore 0169

		static Delegate? cb_setNextAddr_I;
#pragma warning disable 0169
		static Delegate GetSetNextAddr_IHandler ()
		{
			if (cb_setNextAddr_I == null)
				cb_setNextAddr_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetNextAddr_I));
			return cb_setNextAddr_I;
		}

		static void n_SetNextAddr_I (IntPtr jnienv, IntPtr native__this, int nextAddr)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.NextAddr = nextAddr;
		}
#pragma warning restore 0169

		public virtual unsafe int NextAddr {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='getNextAddr' and count(parameter)=0]"
			[Register ("getNextAddr", "()I", "GetGetNextAddrHandler")]
			get {
				const string __id = "getNextAddr.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='setNextAddr' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setNextAddr", "(I)V", "GetSetNextAddr_IHandler")]
			set {
				const string __id = "setNextAddr.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getPreAddr;
#pragma warning disable 0169
		static Delegate GetGetPreAddrHandler ()
		{
			if (cb_getPreAddr == null)
				cb_getPreAddr = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetPreAddr));
			return cb_getPreAddr;
		}

		static int n_GetPreAddr (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.PreAddr;
		}
#pragma warning restore 0169

		static Delegate? cb_setPreAddr_I;
#pragma warning disable 0169
		static Delegate GetSetPreAddr_IHandler ()
		{
			if (cb_setPreAddr_I == null)
				cb_setPreAddr_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetPreAddr_I));
			return cb_setPreAddr_I;
		}

		static void n_SetPreAddr_I (IntPtr jnienv, IntPtr native__this, int preAddr)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.PreAddr = preAddr;
		}
#pragma warning restore 0169

		public virtual unsafe int PreAddr {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='getPreAddr' and count(parameter)=0]"
			[Register ("getPreAddr", "()I", "GetGetPreAddrHandler")]
			get {
				const string __id = "getPreAddr.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='setPreAddr' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setPreAddr", "(I)V", "GetSetPreAddr_IHandler")]
			set {
				const string __id = "setPreAddr.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getUpdate;
#pragma warning disable 0169
		static Delegate GetGetUpdateHandler ()
		{
			if (cb_getUpdate == null)
				cb_getUpdate = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_B (n_GetUpdate));
			return cb_getUpdate;
		}

		static sbyte n_GetUpdate (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Update;
		}
#pragma warning restore 0169

		static Delegate? cb_setUpdate_B;
#pragma warning disable 0169
		static Delegate GetSetUpdate_BHandler ()
		{
			if (cb_setUpdate_B == null)
				cb_setUpdate_B = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPB_V (n_SetUpdate_B));
			return cb_setUpdate_B;
		}

		static void n_SetUpdate_B (IntPtr jnienv, IntPtr native__this, sbyte update)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Update = update;
		}
#pragma warning restore 0169

		public virtual unsafe sbyte Update {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='getUpdate' and count(parameter)=0]"
			[Register ("getUpdate", "()B", "GetGetUpdateHandler")]
			get {
				const string __id = "getUpdate.()B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSByteMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='setUpdate' and count(parameter)=1 and parameter[1][@type='byte']]"
			[Register ("setUpdate", "(B)V", "GetSetUpdate_BHandler")]
			set {
				const string __id = "setUpdate.(B)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getChinese;
#pragma warning disable 0169
		static Delegate GetGetChineseHandler ()
		{
			if (cb_getChinese == null)
				cb_getChinese = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetChinese));
			return cb_getChinese;
		}

		static IntPtr n_GetChinese (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetChinese ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='getChinese' and count(parameter)=0]"
		[Register ("getChinese", "()[B", "GetGetChineseHandler")]
		public virtual unsafe byte[]? GetChinese ()
		{
			const string __id = "getChinese.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_setChinese_arrayB;
#pragma warning disable 0169
		static Delegate GetSetChinese_arrayBHandler ()
		{
			if (cb_setChinese_arrayB == null)
				cb_setChinese_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetChinese_arrayB));
			return cb_setChinese_arrayB;
		}

		static void n_SetChinese_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_chinese)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var chinese = (byte[]?) JNIEnv.GetArray (native_chinese, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetChinese (chinese);
			if (chinese != null)
				JNIEnv.CopyArray (chinese, native_chinese);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='setChinese' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setChinese", "([B)V", "GetSetChinese_arrayBHandler")]
		public virtual unsafe void SetChinese (byte[]? chinese)
		{
			const string __id = "setChinese.([B)V";
			IntPtr native_chinese = JNIEnv.NewArray (chinese);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_chinese);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (chinese != null) {
					JNIEnv.CopyArray (native_chinese, chinese);
					JNIEnv.DeleteLocalRef (native_chinese);
				}
				global::System.GC.KeepAlive (chinese);
			}
		}

		static Delegate? cb_size;
#pragma warning disable 0169
		static Delegate GetSizeHandler ()
		{
			if (cb_size == null)
				cb_size = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Size));
			return cb_size;
		}

		static int n_Size (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Size ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='size' and count(parameter)=0]"
		[Register ("size", "()I", "GetSizeHandler")]
		public virtual unsafe int Size ()
		{
			const string __id = "size.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_toBean_arrayB;
#pragma warning disable 0169
		static Delegate GetToBean_arrayBHandler ()
		{
			if (cb_toBean_arrayB == null)
				cb_toBean_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ToBean_arrayB));
			return cb_toBean_arrayB;
		}

		static void n_ToBean_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_buf)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var buf = (byte[]?) JNIEnv.GetArray (native_buf, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.ToBean (buf);
			if (buf != null)
				JNIEnv.CopyArray (buf, native_buf);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='toBean' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("toBean", "([B)V", "GetToBean_arrayBHandler")]
		public virtual unsafe void ToBean (byte[]? buf)
		{
			const string __id = "toBean.([B)V";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_buf);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		static Delegate? cb_toBytes;
#pragma warning disable 0169
		static Delegate GetToBytesHandler ()
		{
			if (cb_toBytes == null)
				cb_toBytes = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToBytes));
			return cb_toBytes;
		}

		static IntPtr n_ToBytes (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.DispBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.ToBytes ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='DispBuf']/method[@name='toBytes' and count(parameter)=0]"
		[Register ("toBytes", "()[B", "GetToBytesHandler")]
		public virtual unsafe byte[]? ToBytes ()
		{
			const string __id = "toBytes.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

	}
}
