//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Utils.Object {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']"
	[global::Android.Runtime.Register ("com/vanstone/utils/object/TestStruct", DoNotGenerateAcw=true)]
	public partial class TestStruct : global::Java.Lang.Object, global::Com.Vanstone.Base.Interfaces.IStructInterface, global::Com.Vanstone.Utils.Object.ISaveJSonStr {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/object/TestStruct", typeof (TestStruct));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected TestStruct (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/constructor[@name='TestStruct' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe TestStruct () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getparam1;
#pragma warning disable 0169
		static Delegate GetGetparam1Handler ()
		{
			if (cb_getparam1 == null)
				cb_getparam1 = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Getparam1));
			return cb_getparam1;
		}

		static int n_Getparam1 (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.Object.TestStruct> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Getparam1 ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/method[@name='getparam1' and count(parameter)=0]"
		[Register ("getparam1", "()I", "GetGetparam1Handler")]
		public virtual unsafe int Getparam1 ()
		{
			const string __id = "getparam1.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_getparam2;
#pragma warning disable 0169
		static Delegate GetGetparam2Handler ()
		{
			if (cb_getparam2 == null)
				cb_getparam2 = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Getparam2));
			return cb_getparam2;
		}

		static int n_Getparam2 (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.Object.TestStruct> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Getparam2 ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/method[@name='getparam2' and count(parameter)=0]"
		[Register ("getparam2", "()I", "GetGetparam2Handler")]
		public virtual unsafe int Getparam2 ()
		{
			const string __id = "getparam2.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_getparam3;
#pragma warning disable 0169
		static Delegate GetGetparam3Handler ()
		{
			if (cb_getparam3 == null)
				cb_getparam3 = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_Getparam3));
			return cb_getparam3;
		}

		static IntPtr n_Getparam3 (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.Object.TestStruct> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.Getparam3 ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/method[@name='getparam3' and count(parameter)=0]"
		[Register ("getparam3", "()[B", "GetGetparam3Handler")]
		public virtual unsafe byte[]? Getparam3 ()
		{
			const string __id = "getparam3.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_getparam4;
#pragma warning disable 0169
		static Delegate GetGetparam4Handler ()
		{
			if (cb_getparam4 == null)
				cb_getparam4 = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_Getparam4));
			return cb_getparam4;
		}

		static IntPtr n_Getparam4 (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.Object.TestStruct> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.Getparam4 ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/method[@name='getparam4' and count(parameter)=0]"
		[Register ("getparam4", "()[B", "GetGetparam4Handler")]
		public virtual unsafe byte[]? Getparam4 ()
		{
			const string __id = "getparam4.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_setJsonStr_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetJsonStr_Ljava_lang_String_Handler ()
		{
			if (cb_setJsonStr_Ljava_lang_String_ == null)
				cb_setJsonStr_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetJsonStr_Ljava_lang_String_));
			return cb_setJsonStr_Ljava_lang_String_;
		}

		static void n_SetJsonStr_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_jsonStr)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.Object.TestStruct> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var jsonStr = JNIEnv.GetString (native_jsonStr, JniHandleOwnership.DoNotTransfer);
			__this.SetJsonStr (jsonStr);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/method[@name='setJsonStr' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setJsonStr", "(Ljava/lang/String;)V", "GetSetJsonStr_Ljava_lang_String_Handler")]
		public virtual unsafe void SetJsonStr (string? jsonStr)
		{
			const string __id = "setJsonStr.(Ljava/lang/String;)V";
			IntPtr native_jsonStr = JNIEnv.NewString ((string?)jsonStr);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_jsonStr);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_jsonStr);
			}
		}

		static Delegate? cb_setparam1_I;
#pragma warning disable 0169
		static Delegate GetSetparam1_IHandler ()
		{
			if (cb_setparam1_I == null)
				cb_setparam1_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_Setparam1_I));
			return cb_setparam1_I;
		}

		static void n_Setparam1_I (IntPtr jnienv, IntPtr native__this, int param)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.Object.TestStruct> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Setparam1 (param);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/method[@name='setparam1' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setparam1", "(I)V", "GetSetparam1_IHandler")]
		public virtual unsafe void Setparam1 (int param)
		{
			const string __id = "setparam1.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (param);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setparam2_I;
#pragma warning disable 0169
		static Delegate GetSetparam2_IHandler ()
		{
			if (cb_setparam2_I == null)
				cb_setparam2_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_Setparam2_I));
			return cb_setparam2_I;
		}

		static void n_Setparam2_I (IntPtr jnienv, IntPtr native__this, int param)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.Object.TestStruct> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Setparam2 (param);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/method[@name='setparam2' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setparam2", "(I)V", "GetSetparam2_IHandler")]
		public virtual unsafe void Setparam2 (int param)
		{
			const string __id = "setparam2.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (param);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setparam3_arrayB;
#pragma warning disable 0169
		static Delegate GetSetparam3_arrayBHandler ()
		{
			if (cb_setparam3_arrayB == null)
				cb_setparam3_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Setparam3_arrayB));
			return cb_setparam3_arrayB;
		}

		static void n_Setparam3_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_param)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.Object.TestStruct> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var param = (byte[]?) JNIEnv.GetArray (native_param, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.Setparam3 (param);
			if (param != null)
				JNIEnv.CopyArray (param, native_param);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/method[@name='setparam3' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setparam3", "([B)V", "GetSetparam3_arrayBHandler")]
		public virtual unsafe void Setparam3 (byte[]? param)
		{
			const string __id = "setparam3.([B)V";
			IntPtr native_param = JNIEnv.NewArray (param);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_param);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (param != null) {
					JNIEnv.CopyArray (native_param, param);
					JNIEnv.DeleteLocalRef (native_param);
				}
				global::System.GC.KeepAlive (param);
			}
		}

		static Delegate? cb_setparam4_arrayB;
#pragma warning disable 0169
		static Delegate GetSetparam4_arrayBHandler ()
		{
			if (cb_setparam4_arrayB == null)
				cb_setparam4_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Setparam4_arrayB));
			return cb_setparam4_arrayB;
		}

		static void n_Setparam4_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_param)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.Object.TestStruct> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var param = (byte[]?) JNIEnv.GetArray (native_param, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.Setparam4 (param);
			if (param != null)
				JNIEnv.CopyArray (param, native_param);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/method[@name='setparam4' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setparam4", "([B)V", "GetSetparam4_arrayBHandler")]
		public virtual unsafe void Setparam4 (byte[]? param)
		{
			const string __id = "setparam4.([B)V";
			IntPtr native_param = JNIEnv.NewArray (param);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_param);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (param != null) {
					JNIEnv.CopyArray (native_param, param);
					JNIEnv.DeleteLocalRef (native_param);
				}
				global::System.GC.KeepAlive (param);
			}
		}

		static Delegate? cb_size;
#pragma warning disable 0169
		static Delegate GetSizeHandler ()
		{
			if (cb_size == null)
				cb_size = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Size));
			return cb_size;
		}

		static int n_Size (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.Object.TestStruct> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Size ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/method[@name='size' and count(parameter)=0]"
		[Register ("size", "()I", "GetSizeHandler")]
		public virtual unsafe int Size ()
		{
			const string __id = "size.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_toBean_arrayB;
#pragma warning disable 0169
		static Delegate GetToBean_arrayBHandler ()
		{
			if (cb_toBean_arrayB == null)
				cb_toBean_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ToBean_arrayB));
			return cb_toBean_arrayB;
		}

		static void n_ToBean_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_buf)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.Object.TestStruct> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var buf = (byte[]?) JNIEnv.GetArray (native_buf, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.ToBean (buf);
			if (buf != null)
				JNIEnv.CopyArray (buf, native_buf);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/method[@name='toBean' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("toBean", "([B)V", "GetToBean_arrayBHandler")]
		public virtual unsafe void ToBean (byte[]? buf)
		{
			const string __id = "toBean.([B)V";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_buf);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		static Delegate? cb_toBytes;
#pragma warning disable 0169
		static Delegate GetToBytesHandler ()
		{
			if (cb_toBytes == null)
				cb_toBytes = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToBytes));
			return cb_toBytes;
		}

		static IntPtr n_ToBytes (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.Object.TestStruct> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.ToBytes ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/method[@name='toBytes' and count(parameter)=0]"
		[Register ("toBytes", "()[B", "GetToBytesHandler")]
		public virtual unsafe byte[]? ToBytes ()
		{
			const string __id = "toBytes.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_toJSonStr;
#pragma warning disable 0169
		static Delegate GetToJSonStrHandler ()
		{
			if (cb_toJSonStr == null)
				cb_toJSonStr = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToJSonStr));
			return cb_toJSonStr;
		}

		static IntPtr n_ToJSonStr (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.Object.TestStruct> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.ToJSonStr ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils.object']/class[@name='TestStruct']/method[@name='toJSonStr' and count(parameter)=0]"
		[Register ("toJSonStr", "()Ljava/lang/String;", "GetToJSonStrHandler")]
		public virtual unsafe string? ToJSonStr ()
		{
			const string __id = "toJSonStr.()Ljava/lang/String;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

	}
}
