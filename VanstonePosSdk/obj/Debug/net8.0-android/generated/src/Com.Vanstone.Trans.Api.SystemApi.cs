//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/SystemApi", DoNotGenerateAcw=true)]
	public partial class SystemApi : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='APKINSTALL_RESULT_ACTION']"
		[Register ("APKINSTALL_RESULT_ACTION")]
		public const string ApkinstallResultAction = (string) "com.vanstone.system.apkinstall.result";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='BASE_BOARD_ACTION']"
		[Register ("BASE_BOARD_ACTION")]
		public const string BaseBoardAction = (string) "com.vanstone.system.base.state";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='BATTERY_LEAVE']"
		[Register ("BATTERY_LEAVE")]
		public const string BatteryLeave = (string) "batteryLeave";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='BATTERY_STATE']"
		[Register ("BATTERY_STATE")]
		public const string BatteryState = (string) "batteryState";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='BATTERY_TOTAL']"
		[Register ("BATTERY_TOTAL")]
		public const string BatteryTotal = (string) "batteryTotal";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_BEEP']"
		[Register ("HARD_BEEP")]
		public const string HardBeep = (string) "beep";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_BTH']"
		[Register ("HARD_BTH")]
		public const string HardBth = (string) "bth";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_CDMA']"
		[Register ("HARD_CDMA")]
		public const string HardCdma = (string) "cdma";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_GM']"
		[Register ("HARD_GM")]
		public const string HardGm = (string) "gm";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_GPRS']"
		[Register ("HARD_GPRS")]
		public const string HardGprs = (string) "gprs";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_IC']"
		[Register ("HARD_IC")]
		public const string HardIc = (string) "ic";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_LAN']"
		[Register ("HARD_LAN")]
		public const string HardLan = (string) "lan";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_LED']"
		[Register ("HARD_LED")]
		public const string HardLed = (string) "led";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_LOCATION']"
		[Register ("HARD_LOCATION")]
		public const string HardLocation = (string) "location";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_MAG']"
		[Register ("HARD_MAG")]
		public const string HardMag = (string) "mag";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_MODEM']"
		[Register ("HARD_MODEM")]
		public const string HardModem = (string) "modem";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_PICC']"
		[Register ("HARD_PICC")]
		public const string HardPicc = (string) "picc";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_PRINTER']"
		[Register ("HARD_PRINTER")]
		public const string HardPrinter = (string) "printer";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_WCDMA']"
		[Register ("HARD_WCDMA")]
		public const string HardWcdma = (string) "wcdma";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='HARD_WIFI']"
		[Register ("HARD_WIFI")]
		public const string HardWifi = (string) "wifi";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='IC_LEAVE']"
		[Register ("IC_LEAVE")]
		public const string IcLeave = (string) "icLeave";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='IC_STATE']"
		[Register ("IC_STATE")]
		public const string IcState = (string) "icState";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='IC_TOTAL']"
		[Register ("IC_TOTAL")]
		public const string IcTotal = (string) "icTotal";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_3G']"
		[Register ("MODULE_3G")]
		public const int Module3g = (int) 13;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_BACKSRC']"
		[Register ("MODULE_BACKSRC")]
		public const int ModuleBacksrc = (int) 8;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_BUZZER']"
		[Register ("MODULE_BUZZER")]
		public const int ModuleBuzzer = (int) 6;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_CAMERA']"
		[Register ("MODULE_CAMERA")]
		public const int ModuleCamera = (int) 18;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_COM']"
		[Register ("MODULE_COM")]
		public const int ModuleCom = (int) 16;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_ETHERNET']"
		[Register ("MODULE_ETHERNET")]
		public const int ModuleEthernet = (int) 15;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_HDMI']"
		[Register ("MODULE_HDMI")]
		public const int ModuleHdmi = (int) 17;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_HIBERNATE']"
		[Register ("MODULE_HIBERNATE")]
		public const int ModuleHibernate = (int) 23;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_ICCARD']"
		[Register ("MODULE_ICCARD")]
		public const int ModuleIccard = (int) 5;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_MIC']"
		[Register ("MODULE_MIC")]
		public const int ModuleMic = (int) 10;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_MSCR']"
		[Register ("MODULE_MSCR")]
		public const int ModuleMscr = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_NOT_SUPPORT']"
		[Register ("MODULE_NOT_SUPPORT")]
		public const int ModuleNotSupport = (int) -1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_OS']"
		[Register ("MODULE_OS")]
		public const int ModuleOs = (int) 19;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_PINPAD']"
		[Register ("MODULE_PINPAD")]
		public const int ModulePinpad = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_POWEROFF']"
		[Register ("MODULE_POWEROFF")]
		public const int ModulePoweroff = (int) 22;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_POWERON']"
		[Register ("MODULE_POWERON")]
		public const int ModulePoweron = (int) 21;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_PRINTER']"
		[Register ("MODULE_PRINTER")]
		public const int ModulePrinter = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_PSAM']"
		[Register ("MODULE_PSAM")]
		public const int ModulePsam = (int) 7;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_RFCARD']"
		[Register ("MODULE_RFCARD")]
		public const int ModuleRfcard = (int) 4;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_SCREEN']"
		[Register ("MODULE_SCREEN")]
		public const int ModuleScreen = (int) 9;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_SDCARD']"
		[Register ("MODULE_SDCARD")]
		public const int ModuleSdcard = (int) 11;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_STATUS_ERROR']"
		[Register ("MODULE_STATUS_ERROR")]
		public const int ModuleStatusError = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_STATUS_NORMAL']"
		[Register ("MODULE_STATUS_NORMAL")]
		public const int ModuleStatusNormal = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_STORAGE']"
		[Register ("MODULE_STORAGE")]
		public const int ModuleStorage = (int) 20;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_USB']"
		[Register ("MODULE_USB")]
		public const int ModuleUsb = (int) 12;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_WAKEUP']"
		[Register ("MODULE_WAKEUP")]
		public const int ModuleWakeup = (int) 24;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='MODULE_WIFI']"
		[Register ("MODULE_WIFI")]
		public const int ModuleWifi = (int) 14;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='PRINT_LEAVE']"
		[Register ("PRINT_LEAVE")]
		public const string PrintLeave = (string) "printLeave";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='PRINT_STATE']"
		[Register ("PRINT_STATE")]
		public const string PrintState = (string) "printState";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='PRINT_TOTAL']"
		[Register ("PRINT_TOTAL")]
		public const string PrintTotal = (string) "printTotal";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_ANDROID_KERNELVERSION']"
		[Register ("SYS_ANDROID_KERNELVERSION")]
		public const string SysAndroidKernelversion = (string) "androidKernelVersion";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_ANDROID_OSVERSION']"
		[Register ("SYS_ANDROID_OSVERSION")]
		public const string SysAndroidOsversion = (string) "androidOsVersion";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_BANKNAME']"
		[Register ("SYS_BANKNAME")]
		public const string SysBankname = (string) "bankName";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_FIRMWARE']"
		[Register ("SYS_FIRMWARE")]
		public const string SysFirmware = (string) "firmware";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_HARDWARE']"
		[Register ("SYS_HARDWARE")]
		public const string SysHardware = (string) "hardware";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_ICCID']"
		[Register ("SYS_ICCID")]
		public const string SysIccid = (string) "ICCID";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_IMEI']"
		[Register ("SYS_IMEI")]
		public const string SysImei = (string) "IMEI";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_IMSI']"
		[Register ("SYS_IMSI")]
		public const string SysImsi = (string) "IMSI";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_MANUFACTURENAME']"
		[Register ("SYS_MANUFACTURENAME")]
		public const string SysManufacturename = (string) "ManufactureName";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_MANUFACTURER']"
		[Register ("SYS_MANUFACTURER")]
		public const string SysManufacturer = (string) "manufacturer";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_MODEL']"
		[Register ("SYS_MODEL")]
		public const string SysModel = (string) "model";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_OTAVERSION']"
		[Register ("SYS_OTAVERSION")]
		public const string SysOtaversion = (string) "otaVersion";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_SN']"
		[Register ("SYS_SN")]
		public const string SysSn = (string) "sn";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_TERMTYPE']"
		[Register ("SYS_TERMTYPE")]
		public const string SysTermtype = (string) "termType";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/field[@name='SYS_VOS']"
		[Register ("SYS_VOS")]
		public const string SysVos = (string) "vos";

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='SystemApi.IAppInstallResult']"
		[Register ("com/vanstone/trans/api/SystemApi$IAppInstallResult", "", "Com.Vanstone.Trans.Api.SystemApi/IAppInstallResultInvoker")]
		public partial interface IAppInstallResult : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='SystemApi.IAppInstallResult']/method[@name='onInstallFinished' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String']]"
			[Register ("onInstallFinished", "(Ljava/lang/String;ILjava/lang/String;)V", "GetOnInstallFinished_Ljava_lang_String_ILjava_lang_String_Handler:Com.Vanstone.Trans.Api.SystemApi/IAppInstallResultInvoker, VanstonePosSdk")]
			void OnInstallFinished (string? p0, int p1, string? p2);

		}

		[global::Android.Runtime.Register ("com/vanstone/trans/api/SystemApi$IAppInstallResult", DoNotGenerateAcw=true)]
		internal partial class IAppInstallResultInvoker : global::Java.Lang.Object, IAppInstallResult {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/SystemApi$IAppInstallResult", typeof (IAppInstallResultInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IAppInstallResult? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IAppInstallResult> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.vanstone.trans.api.SystemApi.IAppInstallResult'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IAppInstallResultInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_onInstallFinished_Ljava_lang_String_ILjava_lang_String_;
#pragma warning disable 0169
			static Delegate GetOnInstallFinished_Ljava_lang_String_ILjava_lang_String_Handler ()
			{
				if (cb_onInstallFinished_Ljava_lang_String_ILjava_lang_String_ == null)
					cb_onInstallFinished_Ljava_lang_String_ILjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLIL_V (n_OnInstallFinished_Ljava_lang_String_ILjava_lang_String_));
				return cb_onInstallFinished_Ljava_lang_String_ILjava_lang_String_;
			}

			static void n_OnInstallFinished_Ljava_lang_String_ILjava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1, IntPtr native_p2)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.SystemApi.IAppInstallResult> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
				var p2 = JNIEnv.GetString (native_p2, JniHandleOwnership.DoNotTransfer);
				__this.OnInstallFinished (p0, p1, p2);
			}
#pragma warning restore 0169

			IntPtr id_onInstallFinished_Ljava_lang_String_ILjava_lang_String_;
			public unsafe void OnInstallFinished (string? p0, int p1, string? p2)
			{
				if (id_onInstallFinished_Ljava_lang_String_ILjava_lang_String_ == IntPtr.Zero)
					id_onInstallFinished_Ljava_lang_String_ILjava_lang_String_ = JNIEnv.GetMethodID (class_ref, "onInstallFinished", "(Ljava/lang/String;ILjava/lang/String;)V");
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				IntPtr native_p2 = JNIEnv.NewString ((string?)p2);
				JValue* __args = stackalloc JValue [3];
				__args [0] = new JValue (native_p0);
				__args [1] = new JValue (p1);
				__args [2] = new JValue (native_p2);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onInstallFinished_Ljava_lang_String_ILjava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p2);
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='SystemApi.IAppUninstallResult']"
		[Register ("com/vanstone/trans/api/SystemApi$IAppUninstallResult", "", "Com.Vanstone.Trans.Api.SystemApi/IAppUninstallResultInvoker")]
		public partial interface IAppUninstallResult : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='SystemApi.IAppUninstallResult']/method[@name='onUnInstallFinished' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String']]"
			[Register ("onUnInstallFinished", "(Ljava/lang/String;ILjava/lang/String;)V", "GetOnUnInstallFinished_Ljava_lang_String_ILjava_lang_String_Handler:Com.Vanstone.Trans.Api.SystemApi/IAppUninstallResultInvoker, VanstonePosSdk")]
			void OnUnInstallFinished (string? p0, int p1, string? p2);

		}

		[global::Android.Runtime.Register ("com/vanstone/trans/api/SystemApi$IAppUninstallResult", DoNotGenerateAcw=true)]
		internal partial class IAppUninstallResultInvoker : global::Java.Lang.Object, IAppUninstallResult {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/SystemApi$IAppUninstallResult", typeof (IAppUninstallResultInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IAppUninstallResult? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IAppUninstallResult> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.vanstone.trans.api.SystemApi.IAppUninstallResult'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IAppUninstallResultInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_onUnInstallFinished_Ljava_lang_String_ILjava_lang_String_;
#pragma warning disable 0169
			static Delegate GetOnUnInstallFinished_Ljava_lang_String_ILjava_lang_String_Handler ()
			{
				if (cb_onUnInstallFinished_Ljava_lang_String_ILjava_lang_String_ == null)
					cb_onUnInstallFinished_Ljava_lang_String_ILjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLIL_V (n_OnUnInstallFinished_Ljava_lang_String_ILjava_lang_String_));
				return cb_onUnInstallFinished_Ljava_lang_String_ILjava_lang_String_;
			}

			static void n_OnUnInstallFinished_Ljava_lang_String_ILjava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1, IntPtr native_p2)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.SystemApi.IAppUninstallResult> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
				var p2 = JNIEnv.GetString (native_p2, JniHandleOwnership.DoNotTransfer);
				__this.OnUnInstallFinished (p0, p1, p2);
			}
#pragma warning restore 0169

			IntPtr id_onUnInstallFinished_Ljava_lang_String_ILjava_lang_String_;
			public unsafe void OnUnInstallFinished (string? p0, int p1, string? p2)
			{
				if (id_onUnInstallFinished_Ljava_lang_String_ILjava_lang_String_ == IntPtr.Zero)
					id_onUnInstallFinished_Ljava_lang_String_ILjava_lang_String_ = JNIEnv.GetMethodID (class_ref, "onUnInstallFinished", "(Ljava/lang/String;ILjava/lang/String;)V");
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				IntPtr native_p2 = JNIEnv.NewString ((string?)p2);
				JValue* __args = stackalloc JValue [3];
				__args [0] = new JValue (native_p0);
				__args [1] = new JValue (p1);
				__args [2] = new JValue (native_p2);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onUnInstallFinished_Ljava_lang_String_ILjava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p2);
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/SystemApi", typeof (SystemApi));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected SystemApi (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/constructor[@name='SystemApi' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe SystemApi () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public static unsafe string? AdminPassword_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getAdminPassword_Api' and count(parameter)=0]"
			[Register ("getAdminPassword_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getAdminPassword_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe global::Android.OS.Bundle? AllVersion_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='GetAllVersion_Api' and count(parameter)=0]"
			[Register ("GetAllVersion_Api", "()Landroid/os/Bundle;", "")]
			get {
				const string __id = "GetAllVersion_Api.()Landroid/os/Bundle;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Android.OS.Bundle> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		[global::System.Obsolete (@"deprecated")]
		public static unsafe string? AndroidKernelVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getAndroidKernelVersion' and count(parameter)=0]"
			[Register ("getAndroidKernelVersion", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getAndroidKernelVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? AndroidKernelVersion_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getAndroidKernelVersion_Api' and count(parameter)=0]"
			[Register ("getAndroidKernelVersion_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getAndroidKernelVersion_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe int AntennaState {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getAntennaState' and count(parameter)=0]"
			[Register ("getAntennaState", "()I", "")]
			get {
				const string __id = "getAntennaState.()I";
				try {
					var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool AutoTimeState_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getAutoTimeState_Api' and count(parameter)=0]"
			[Register ("getAutoTimeState_Api", "()Z", "")]
			get {
				const string __id = "getAutoTimeState_Api.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool AutoTimeZoneState_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getAutoTimeZoneState_Api' and count(parameter)=0]"
			[Register ("getAutoTimeZoneState_Api", "()Z", "")]
			get {
				const string __id = "getAutoTimeZoneState_Api.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		[global::System.Obsolete (@"deprecated")]
		public static unsafe string? CSN {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getCSN' and count(parameter)=0]"
			[Register ("getCSN", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getCSN.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? CSN_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getCSN_Api' and count(parameter)=0]"
			[Register ("getCSN_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getCSN_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? DefaultDataSIM_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getDefaultDataSIM_Api' and count(parameter)=0]"
			[Register ("getDefaultDataSIM_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getDefaultDataSIM_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		[global::System.Obsolete (@"deprecated")]
		public static unsafe string? FirmwareVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getFirmwareVersion' and count(parameter)=0]"
			[Register ("getFirmwareVersion", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getFirmwareVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? FirmwareVersion_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getFirmwareVersion_Api' and count(parameter)=0]"
			[Register ("getFirmwareVersion_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getFirmwareVersion_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		[global::System.Obsolete (@"deprecated")]
		public static unsafe string? HardwareVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getHardwareVersion' and count(parameter)=0]"
			[Register ("getHardwareVersion", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getHardwareVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? HardwareVersion_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getHardwareVersion_Api' and count(parameter)=0]"
			[Register ("getHardwareVersion_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getHardwareVersion_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe global::System.Collections.Generic.IList<global::Com.Vanstone.Utils.TrafficInfos>? InternetTrafficInfos {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getInternetTrafficInfos' and count(parameter)=0]"
			[Register ("getInternetTrafficInfos", "()Ljava/util/List;", "")]
			get {
				const string __id = "getInternetTrafficInfos.()Ljava/util/List;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Android.Runtime.JavaList<global::Com.Vanstone.Utils.TrafficInfos>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe bool IsDebug_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='isDebug_Api' and count(parameter)=0]"
			[Register ("isDebug_Api", "()Z", "")]
			get {
				const string __id = "isDebug_Api.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool IsEnvParam_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='IsEnvParam_Api' and count(parameter)=0]"
			[Register ("IsEnvParam_Api", "()Z", "")]
			get {
				const string __id = "IsEnvParam_Api.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool IsServicsBinded {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='IsServicsBinded' and count(parameter)=0]"
			[Register ("IsServicsBinded", "()Z", "")]
			get {
				const string __id = "IsServicsBinded.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe int LastShutdownCause_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getLastShutdownCause_Api' and count(parameter)=0]"
			[Register ("getLastShutdownCause_Api", "()I", "")]
			get {
				const string __id = "getLastShutdownCause_Api.()I";
				try {
					var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe string? MachineType_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getMachineType_Api' and count(parameter)=0]"
			[Register ("getMachineType_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getMachineType_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? NtpServer_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getNtpServer_Api' and count(parameter)=0]"
			[Register ("getNtpServer_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getNtpServer_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		[global::System.Obsolete (@"deprecated")]
		public static unsafe string? ROMVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getROMVersion' and count(parameter)=0]"
			[Register ("getROMVersion", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getROMVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? ROMVersion_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getROMVersion_Api' and count(parameter)=0]"
			[Register ("getROMVersion_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getROMVersion_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? ResumeRechargeValue {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getResumeRechargeValue' and count(parameter)=0]"
			[Register ("getResumeRechargeValue", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getResumeRechargeValue.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? RootCertName_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getRootCertName_Api' and count(parameter)=0]"
			[Register ("getRootCertName_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getRootCertName_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? RootCertVersion_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getRootCertVersion_Api' and count(parameter)=0]"
			[Register ("getRootCertVersion_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getRootCertVersion_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? SettingsPWD_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getSettingsPWD_Api' and count(parameter)=0]"
			[Register ("getSettingsPWD_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getSettingsPWD_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		[global::System.Obsolete (@"deprecated")]
		public static unsafe global::Android.Content.Intent? SysHWMaintainIntent {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getSysHWMaintainIntent' and count(parameter)=0]"
			[Register ("getSysHWMaintainIntent", "()Landroid/content/Intent;", "")]
			get {
				const string __id = "getSysHWMaintainIntent.()Landroid/content/Intent;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Android.Content.Intent> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe global::Android.Content.Intent? SysHWMaintainIntent_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getSysHWMaintainIntent_Api' and count(parameter)=0]"
			[Register ("getSysHWMaintainIntent_Api", "()Landroid/content/Intent;", "")]
			get {
				const string __id = "getSysHWMaintainIntent_Api.()Landroid/content/Intent;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Android.Content.Intent> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? SysOTAVerison_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getSysOTAVerison_Api' and count(parameter)=0]"
			[Register ("getSysOTAVerison_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getSysOTAVerison_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		[global::System.Obsolete (@"deprecated")]
		public static unsafe global::Android.Content.Intent? SysgHWDetectionIntent {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getSysgHWDetectionIntent' and count(parameter)=0]"
			[Register ("getSysgHWDetectionIntent", "()Landroid/content/Intent;", "")]
			get {
				const string __id = "getSysgHWDetectionIntent.()Landroid/content/Intent;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Android.Content.Intent> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe global::Android.Content.Intent? SysgHWDetectionIntent_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getSysgHWDetectionIntent_Api' and count(parameter)=0]"
			[Register ("getSysgHWDetectionIntent_Api", "()Landroid/content/Intent;", "")]
			get {
				const string __id = "getSysgHWDetectionIntent_Api.()Landroid/content/Intent;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Android.Content.Intent> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string? TimeZone_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getTimeZone_Api' and count(parameter)=0]"
			[Register ("getTimeZone_Api", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getTimeZone_Api.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe global::System.Collections.Generic.IList<string>? UndeletableAppList_Api {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getUndeletableAppList_Api' and count(parameter)=0]"
			[Register ("getUndeletableAppList_Api", "()Ljava/util/List;", "")]
			get {
				const string __id = "getUndeletableAppList_Api.()Ljava/util/List;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Android.Runtime.JavaList<string>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='Beef_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("Beef_Api", "(II)V", "")]
		public static unsafe void Beef_Api (int ucMode, int DlyTime)
		{
			const string __id = "Beef_Api.(II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (ucMode);
				__args [1] = new JniArgumentValue (DlyTime);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='Beep_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("Beep_Api", "(I)V", "")]
		public static unsafe void Beep_Api (int flag)
		{
			const string __id = "Beep_Api.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (flag);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='CheckModuleStatue_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("CheckModuleStatue_Api", "(I)I", "")]
		public static unsafe int CheckModuleStatue_Api (int moduleId)
		{
			const string __id = "CheckModuleStatue_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (moduleId);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='ClearEnvParam_Api' and count(parameter)=0]"
		[Register ("ClearEnvParam_Api", "()V", "")]
		public static unsafe void ClearEnvParam_Api ()
		{
			const string __id = "ClearEnvParam_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='ClearTouchPoint' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("ClearTouchPoint", "(Landroid/content/Context;)V", "")]
		public static unsafe void ClearTouchPoint (global::Android.Content.Context? conte)
		{
			const string __id = "ClearTouchPoint.(Landroid/content/Context;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((conte == null) ? IntPtr.Zero : ((global::Java.Lang.Object) conte).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (conte);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='Delay_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("Delay_Api", "(I)V", "")]
		public static unsafe void Delay_Api (int ms)
		{
			const string __id = "Delay_Api.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (ms);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='DownLoadSn_Api' and count(parameter)=0]"
		[Register ("DownLoadSn_Api", "()Z", "")]
		public static unsafe bool DownLoadSn_Api ()
		{
			const string __id = "DownLoadSn_Api.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='DownLoadSn_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("DownLoadSn_Api", "(I)I", "")]
		public static unsafe int DownLoadSn_Api (int port)
		{
			const string __id = "DownLoadSn_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (port);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='FormatFileSystem_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("FormatFileSystem_Api", "(I)I", "")]
		public static unsafe int FormatFileSystem_Api (int Flag)
		{
			const string __id = "FormatFileSystem_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (Flag);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='GetEnv_Api' and count(parameter)=6 and parameter[1][@type='java.lang.String'] and parameter[2][@type='byte[]'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int']]"
		[Register ("GetEnv_Api", "(Ljava/lang/String;[BIIII)I", "")]
		public static unsafe int GetEnv_Api (string? szName, byte[]? szValue, int flag, int bufsize, int Min, int Max)
		{
			const string __id = "GetEnv_Api.(Ljava/lang/String;[BIIII)I";
			IntPtr native_szName = JNIEnv.NewString ((string?)szName);
			IntPtr native_szValue = JNIEnv.NewArray (szValue);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (native_szName);
				__args [1] = new JniArgumentValue (native_szValue);
				__args [2] = new JniArgumentValue (flag);
				__args [3] = new JniArgumentValue (bufsize);
				__args [4] = new JniArgumentValue (Min);
				__args [5] = new JniArgumentValue (Max);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_szName);
				if (szValue != null) {
					JNIEnv.CopyArray (native_szValue, szValue);
					JNIEnv.DeleteLocalRef (native_szValue);
				}
				global::System.GC.KeepAlive (szValue);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='GetHandPinPadVer' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("GetHandPinPadVer", "([B)I", "")]
		public static unsafe int GetHandPinPadVer (byte[]? Ver)
		{
			const string __id = "GetHandPinPadVer.([B)I";
			IntPtr native_Ver = JNIEnv.NewArray (Ver);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_Ver);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (Ver != null) {
					JNIEnv.CopyArray (native_Ver, Ver);
					JNIEnv.DeleteLocalRef (native_Ver);
				}
				global::System.GC.KeepAlive (Ver);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='GetPciRand' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("GetPciRand", "(I)[B", "")]
		public static unsafe byte[]? GetPciRand (int Len)
		{
			const string __id = "GetPciRand.(I)[B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (Len);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='GetSysTime_Api' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("GetSysTime_Api", "([B)V", "")]
		public static unsafe void GetSysTime_Api (byte[]? Buf)
		{
			const string __id = "GetSysTime_Api.([B)V";
			IntPtr native_Buf = JNIEnv.NewArray (Buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_Buf);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (Buf != null) {
					JNIEnv.CopyArray (native_Buf, Buf);
					JNIEnv.DeleteLocalRef (native_Buf);
				}
				global::System.GC.KeepAlive (Buf);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='GetTime_Api' and count(parameter)=2 and parameter[1][@type='com.vanstone.trans.api.struct.DateUser'] and parameter[2][@type='com.vanstone.trans.api.struct.TimeUser']]"
		[Register ("GetTime_Api", "(Lcom/vanstone/trans/api/struct/DateUser;Lcom/vanstone/trans/api/struct/TimeUser;)I", "")]
		public static unsafe int GetTime_Api (global::Com.Vanstone.Trans.Api.Struct.DateUser? Dt, global::Com.Vanstone.Trans.Api.Struct.TimeUser? Tm)
		{
			const string __id = "GetTime_Api.(Lcom/vanstone/trans/api/struct/DateUser;Lcom/vanstone/trans/api/struct/TimeUser;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((Dt == null) ? IntPtr.Zero : ((global::Java.Lang.Object) Dt).Handle);
				__args [1] = new JniArgumentValue ((Tm == null) ? IntPtr.Zero : ((global::Java.Lang.Object) Tm).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (Dt);
				global::System.GC.KeepAlive (Tm);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='GetTouchPoint' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("GetTouchPoint", "(Landroid/content/Context;)Lcom/vanstone/trans/api/struct/TCpoint;", "")]
		public static unsafe global::Com.Vanstone.Trans.Api.Struct.TCpoint? GetTouchPoint (global::Android.Content.Context? conte)
		{
			const string __id = "GetTouchPoint.(Landroid/content/Context;)Lcom/vanstone/trans/api/struct/TCpoint;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((conte == null) ? IntPtr.Zero : ((global::Java.Lang.Object) conte).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TCpoint> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (conte);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='GetVersion_Api' and count(parameter)=2 and parameter[1][@type='byte[]'] and parameter[2][@type='byte[]']]"
		[Register ("GetVersion_Api", "([B[B)I", "")]
		public static unsafe int GetVersion_Api (byte[]? lpOut, byte[]? VersionNum)
		{
			const string __id = "GetVersion_Api.([B[B)I";
			IntPtr native_lpOut = JNIEnv.NewArray (lpOut);
			IntPtr native_VersionNum = JNIEnv.NewArray (VersionNum);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_lpOut);
				__args [1] = new JniArgumentValue (native_VersionNum);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (lpOut != null) {
					JNIEnv.CopyArray (native_lpOut, lpOut);
					JNIEnv.DeleteLocalRef (native_lpOut);
				}
				if (VersionNum != null) {
					JNIEnv.CopyArray (native_VersionNum, VersionNum);
					JNIEnv.DeleteLocalRef (native_VersionNum);
				}
				global::System.GC.KeepAlive (lpOut);
				global::System.GC.KeepAlive (VersionNum);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='IsHandleOnBase_Api' and count(parameter)=0]"
		[Register ("IsHandleOnBase_Api", "()I", "")]
		public static unsafe int IsHandleOnBase_Api ()
		{
			const string __id = "IsHandleOnBase_Api.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='PlaySound_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("PlaySound_Api", "(II)V", "")]
		public static unsafe void PlaySound_Api (int SoundNum, int SoundVolume)
		{
			const string __id = "PlaySound_Api.(II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (SoundNum);
				__args [1] = new JniArgumentValue (SoundVolume);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='PutEnv_Api' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int']]"
		[Register ("PutEnv_Api", "(Ljava/lang/String;Ljava/lang/String;I)I", "")]
		public static unsafe int PutEnv_Api (string? szEvnName, string? szEvnValue, int EnvVaulueLen)
		{
			const string __id = "PutEnv_Api.(Ljava/lang/String;Ljava/lang/String;I)I";
			IntPtr native_szEvnName = JNIEnv.NewString ((string?)szEvnName);
			IntPtr native_szEvnValue = JNIEnv.NewString ((string?)szEvnValue);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_szEvnName);
				__args [1] = new JniArgumentValue (native_szEvnValue);
				__args [2] = new JniArgumentValue (EnvVaulueLen);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_szEvnName);
				JNIEnv.DeleteLocalRef (native_szEvnValue);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='ReadAppInfo_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='byte[]']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ReadAppInfo_Api", "(I[B)I", "")]
		public static unsafe int ReadAppInfo_Api (int AppNo, byte[]? ai)
		{
			const string __id = "ReadAppInfo_Api.(I[B)I";
			IntPtr native_ai = JNIEnv.NewArray (ai);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (AppNo);
				__args [1] = new JniArgumentValue (native_ai);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (ai != null) {
					JNIEnv.CopyArray (native_ai, ai);
					JNIEnv.DeleteLocalRef (native_ai);
				}
				global::System.GC.KeepAlive (ai);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='ReadPosSn' and count(parameter)=0]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ReadPosSn", "()Ljava/lang/String;", "")]
		public static unsafe string? ReadPosSn ()
		{
			const string __id = "ReadPosSn.()Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='ReadPosSn_Api' and count(parameter)=0]"
		[Register ("ReadPosSn_Api", "()Ljava/lang/String;", "")]
		public static unsafe string? ReadPosSn_Api ()
		{
			const string __id = "ReadPosSn_Api.()Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='ReadPosTUSN' and count(parameter)=0]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ReadPosTUSN", "()Ljava/lang/String;", "")]
		public static unsafe string? ReadPosTUSN ()
		{
			const string __id = "ReadPosTUSN.()Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='ReadPosTUSN_Api' and count(parameter)=0]"
		[Register ("ReadPosTUSN_Api", "()Ljava/lang/String;", "")]
		public static unsafe string? ReadPosTUSN_Api ()
		{
			const string __id = "ReadPosTUSN_Api.()Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='RunApp_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("RunApp_Api", "(I)I", "")]
		public static unsafe int RunApp_Api (int AppNo)
		{
			const string __id = "RunApp_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (AppNo);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SetAdbEnable_Api' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("SetAdbEnable_Api", "(Z)Z", "")]
		public static unsafe bool SetAdbEnable_Api (bool enable)
		{
			const string __id = "SetAdbEnable_Api.(Z)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (enable);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SetBackParamFile_Api' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("SetBackParamFile_Api", "(Ljava/lang/String;)I", "")]
		public static unsafe int SetBackParamFile_Api (string? fileName)
		{
			const string __id = "SetBackParamFile_Api.(Ljava/lang/String;)I";
			IntPtr native_fileName = JNIEnv.NewString ((string?)fileName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_fileName);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_fileName);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SetBaseBroadcast_Api' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("SetBaseBroadcast_Api", "(Z)V", "")]
		public static unsafe void SetBaseBroadcast_Api (bool open)
		{
			const string __id = "SetBaseBroadcast_Api.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (open);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SetBluetoothEnable_Api' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("SetBluetoothEnable_Api", "(Z)Z", "")]
		public static unsafe bool SetBluetoothEnable_Api (bool enable)
		{
			const string __id = "SetBluetoothEnable_Api.(Z)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (enable);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SetContext' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("SetContext", "(Landroid/content/Context;)V", "")]
		public static unsafe void SetContext (global::Android.Content.Context? Context)
		{
			const string __id = "SetContext.(Landroid/content/Context;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((Context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) Context).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (Context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SetOtgEnable_Api' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("SetOtgEnable_Api", "(Z)Z", "")]
		public static unsafe bool SetOtgEnable_Api (bool enable)
		{
			const string __id = "SetOtgEnable_Api.(Z)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (enable);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SetSetScreenOffTimeout_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("SetSetScreenOffTimeout_Api", "(I)Z", "")]
		public static unsafe bool SetSetScreenOffTimeout_Api (int time)
		{
			const string __id = "SetSetScreenOffTimeout_Api.(I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (time);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SetTime_Api' and count(parameter)=2 and parameter[1][@type='com.vanstone.trans.api.struct.DateUser'] and parameter[2][@type='com.vanstone.trans.api.struct.TimeUser']]"
		[Register ("SetTime_Api", "(Lcom/vanstone/trans/api/struct/DateUser;Lcom/vanstone/trans/api/struct/TimeUser;)I", "")]
		public static unsafe int SetTime_Api (global::Com.Vanstone.Trans.Api.Struct.DateUser? Dt, global::Com.Vanstone.Trans.Api.Struct.TimeUser? Tm)
		{
			const string __id = "SetTime_Api.(Lcom/vanstone/trans/api/struct/DateUser;Lcom/vanstone/trans/api/struct/TimeUser;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((Dt == null) ? IntPtr.Zero : ((global::Java.Lang.Object) Dt).Handle);
				__args [1] = new JniArgumentValue ((Tm == null) ? IntPtr.Zero : ((global::Java.Lang.Object) Tm).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (Dt);
				global::System.GC.KeepAlive (Tm);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SetWifiAddNetworkEnable_Api' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("SetWifiAddNetworkEnable_Api", "(Z)Z", "")]
		public static unsafe bool SetWifiAddNetworkEnable_Api (bool enable)
		{
			const string __id = "SetWifiAddNetworkEnable_Api.(Z)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (enable);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='StartJumpSec_Api' and count(parameter)=0]"
		[Register ("StartJumpSec_Api", "()I", "")]
		public static unsafe int StartJumpSec_Api ()
		{
			const string __id = "StartJumpSec_Api.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='StopJumpSec_Api' and count(parameter)=0]"
		[Register ("StopJumpSec_Api", "()V", "")]
		public static unsafe void StopJumpSec_Api ()
		{
			const string __id = "StopJumpSec_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SystemExit_Api' and count(parameter)=0]"
		[Register ("SystemExit_Api", "()V", "")]
		public static unsafe void SystemExit_Api ()
		{
			const string __id = "SystemExit_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SystemInit_Api' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='byte[]'] and parameter[3][@type='android.content.Context']]"
		[Register ("SystemInit_Api", "(I[BLandroid/content/Context;)I", "")]
		public static unsafe int SystemInit_Api (int argc, byte[]? argr, global::Android.Content.Context? context)
		{
			const string __id = "SystemInit_Api.(I[BLandroid/content/Context;)I";
			IntPtr native_argr = JNIEnv.NewArray (argr);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (argc);
				__args [1] = new JniArgumentValue (native_argr);
				__args [2] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (argr != null) {
					JNIEnv.CopyArray (native_argr, argr);
					JNIEnv.DeleteLocalRef (native_argr);
				}
				global::System.GC.KeepAlive (argr);
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SystemInit_Api' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='byte[]'] and parameter[3][@type='android.content.Context'] and parameter[4][@type='com.vanstone.appsdk.client.ISdkStatue']]"
		[Register ("SystemInit_Api", "(I[BLandroid/content/Context;Lcom/vanstone/appsdk/client/ISdkStatue;)I", "")]
		public static unsafe int SystemInit_Api (int argc, byte[]? argr, global::Android.Content.Context? context, global::Com.Vanstone.Appsdk.Client.ISdkStatue? sdkStatue)
		{
			const string __id = "SystemInit_Api.(I[BLandroid/content/Context;Lcom/vanstone/appsdk/client/ISdkStatue;)I";
			IntPtr native_argr = JNIEnv.NewArray (argr);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (argc);
				__args [1] = new JniArgumentValue (native_argr);
				__args [2] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [3] = new JniArgumentValue ((sdkStatue == null) ? IntPtr.Zero : ((global::Java.Lang.Object) sdkStatue).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (argr != null) {
					JNIEnv.CopyArray (native_argr, argr);
					JNIEnv.DeleteLocalRef (native_argr);
				}
				global::System.GC.KeepAlive (argr);
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (sdkStatue);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SystemPowerOff_Api' and count(parameter)=0]"
		[Register ("SystemPowerOff_Api", "()V", "")]
		public static unsafe void SystemPowerOff_Api ()
		{
			const string __id = "SystemPowerOff_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='SystemReboot_Api' and count(parameter)=0]"
		[Register ("SystemReboot_Api", "()V", "")]
		public static unsafe void SystemReboot_Api ()
		{
			const string __id = "SystemReboot_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='TimerCheck_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("TimerCheck_Api", "(II)I", "")]
		public static unsafe int TimerCheck_Api (int Timeid, int ms)
		{
			const string __id = "TimerCheck_Api.(II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (Timeid);
				__args [1] = new JniArgumentValue (ms);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='TimerSet_Api' and count(parameter)=0]"
		[Register ("TimerSet_Api", "()I", "")]
		public static unsafe int TimerSet_Api ()
		{
			const string __id = "TimerSet_Api.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='catchMainLog_Api' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("catchMainLog_Api", "(Ljava/lang/String;)Z", "")]
		public static unsafe bool CatchMainLog_Api (string? pkgName)
		{
			const string __id = "catchMainLog_Api.(Ljava/lang/String;)Z";
			IntPtr native_pkgName = JNIEnv.NewString ((string?)pkgName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_pkgName);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_pkgName);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='deleteDir' and count(parameter)=1 and parameter[1][@type='java.io.File']]"
		[Register ("deleteDir", "(Ljava/io/File;)Z", "")]
		public static unsafe bool DeleteDir (global::Java.IO.File? file)
		{
			const string __id = "deleteDir.(Ljava/io/File;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((file == null) ? IntPtr.Zero : ((global::Java.Lang.Object) file).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (file);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='deleteFileInSe_Api' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("deleteFileInSe_Api", "(Ljava/lang/String;)I", "")]
		public static unsafe int DeleteFileInSe_Api (string? fileName)
		{
			const string __id = "deleteFileInSe_Api.(Ljava/lang/String;)I";
			IntPtr native_fileName = JNIEnv.NewString ((string?)fileName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_fileName);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_fileName);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='deleteFlashData_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("deleteFlashData_Api", "(II)I", "")]
		public static unsafe int DeleteFlashData_Api (int addr, int deleteLen)
		{
			const string __id = "deleteFlashData_Api.(II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (addr);
				__args [1] = new JniArgumentValue (deleteLen);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='deleteRsakey_Api' and count(parameter)=0]"
		[Register ("deleteRsakey_Api", "()Z", "")]
		public static unsafe bool DeleteRsakey_Api ()
		{
			const string __id = "deleteRsakey_Api.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getAllAppDataTraffic_Api' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='long'] and parameter[3][@type='long']]"
		[Register ("getAllAppDataTraffic_Api", "(IJJ)Ljava/util/Map;", "")]
		public static unsafe global::System.Collections.Generic.IDictionary<global::Java.Lang.Integer, string>? GetAllAppDataTraffic_Api (int netType, long start, long end)
		{
			const string __id = "getAllAppDataTraffic_Api.(IJJ)Ljava/util/Map;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (netType);
				__args [1] = new JniArgumentValue (start);
				__args [2] = new JniArgumentValue (end);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.JavaDictionary<global::Java.Lang.Integer, string>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getFileListInSe_Api' and count(parameter)=1 and parameter[1][@type='java.util.ArrayList&lt;java.lang.String&gt;']]"
		[Register ("getFileListInSe_Api", "(Ljava/util/ArrayList;)I", "")]
		public static unsafe int GetFileListInSe_Api (global::System.Collections.Generic.IList<string>? fileList)
		{
			const string __id = "getFileListInSe_Api.(Ljava/util/ArrayList;)I";
			IntPtr native_fileList = global::Android.Runtime.JavaList<string>.ToLocalJniHandle (fileList);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_fileList);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_fileList);
				global::System.GC.KeepAlive (fileList);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getImei' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("getImei", "(Landroid/content/Context;)Ljava/lang/String;", "")]
		public static unsafe string? GetImei (global::Android.Content.Context? context)
		{
			const string __id = "getImei.(Landroid/content/Context;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getImei_Api' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("getImei_Api", "(Landroid/content/Context;)Ljava/lang/String;", "")]
		public static unsafe string? GetImei_Api (global::Android.Content.Context? context)
		{
			const string __id = "getImei_Api.(Landroid/content/Context;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getLifeInform_Api' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("getLifeInform_Api", "(Landroid/content/Context;)Landroid/os/Bundle;", "")]
		public static unsafe global::Android.OS.Bundle? GetLifeInform_Api (global::Android.Content.Context? context)
		{
			const string __id = "getLifeInform_Api.(Landroid/content/Context;)Landroid/os/Bundle;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Android.OS.Bundle> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getModuleSupport_Api' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("getModuleSupport_Api", "(Landroid/content/Context;)Landroid/os/Bundle;", "")]
		public static unsafe global::Android.OS.Bundle? GetModuleSupport_Api (global::Android.Content.Context? context)
		{
			const string __id = "getModuleSupport_Api.(Landroid/content/Context;)Landroid/os/Bundle;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Android.OS.Bundle> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getRandom_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("getRandom_Api", "(I)[B", "")]
		public static unsafe byte[]? GetRandom_Api (int length)
		{
			const string __id = "getRandom_Api.(I)[B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (length);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getSmartPosID' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("getSmartPosID", "([B)I", "")]
		public static unsafe int GetSmartPosID (byte[]? buffer)
		{
			const string __id = "getSmartPosID.([B)I";
			IntPtr native_buffer = JNIEnv.NewArray (buffer);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_buffer);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (buffer != null) {
					JNIEnv.CopyArray (native_buffer, buffer);
					JNIEnv.DeleteLocalRef (native_buffer);
				}
				global::System.GC.KeepAlive (buffer);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getSmartPosID_Api' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("getSmartPosID_Api", "([B)I", "")]
		public static unsafe int GetSmartPosID_Api (byte[]? buffer)
		{
			const string __id = "getSmartPosID_Api.([B)I";
			IntPtr native_buffer = JNIEnv.NewArray (buffer);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_buffer);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (buffer != null) {
					JNIEnv.CopyArray (native_buffer, buffer);
					JNIEnv.DeleteLocalRef (native_buffer);
				}
				global::System.GC.KeepAlive (buffer);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getSystemInform_Api' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("getSystemInform_Api", "(Landroid/content/Context;)Landroid/os/Bundle;", "")]
		public static unsafe global::Android.OS.Bundle? GetSystemInform_Api (global::Android.Content.Context? context)
		{
			const string __id = "getSystemInform_Api.(Landroid/content/Context;)Landroid/os/Bundle;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Android.OS.Bundle> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getTotalDataTraffic_Api' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='long'] and parameter[3][@type='long']]"
		[Register ("getTotalDataTraffic_Api", "(IJJ)J", "")]
		public static unsafe long GetTotalDataTraffic_Api (int netType, long start, long end)
		{
			const string __id = "getTotalDataTraffic_Api.(IJJ)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (netType);
				__args [1] = new JniArgumentValue (start);
				__args [2] = new JniArgumentValue (end);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='getTrafficStats_Api' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("getTrafficStats_Api", "(Ljava/lang/String;Ljava/lang/String;)Lcom/vanstone/appsdk/api/struct/AidlTrafficStats;", "")]
		public static unsafe global::Com.Vanstone.Appsdk.Api.Struct.AidlTrafficStats? GetTrafficStats_Api (string? start, string? end)
		{
			const string __id = "getTrafficStats_Api.(Ljava/lang/String;Ljava/lang/String;)Lcom/vanstone/appsdk/api/struct/AidlTrafficStats;";
			IntPtr native_start = JNIEnv.NewString ((string?)start);
			IntPtr native_end = JNIEnv.NewString ((string?)end);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_start);
				__args [1] = new JniArgumentValue (native_end);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Vanstone.Appsdk.Api.Struct.AidlTrafficStats> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_start);
				JNIEnv.DeleteLocalRef (native_end);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='isForeground_Api' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isForeground_Api", "(Ljava/lang/String;)Z", "")]
		public static unsafe bool IsForeground_Api (string? packageName)
		{
			const string __id = "isForeground_Api.(Ljava/lang/String;)Z";
			IntPtr native_packageName = JNIEnv.NewString ((string?)packageName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_packageName);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_packageName);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='isdeviceEnabled_Api' and count(parameter)=0]"
		[Register ("isdeviceEnabled_Api", "()Z", "")]
		public static unsafe bool IsdeviceEnabled_Api ()
		{
			const string __id = "isdeviceEnabled_Api.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='readFileFromSE_Api' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='byte[]'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("readFileFromSE_Api", "(Ljava/lang/String;[BII)I", "")]
		public static unsafe int ReadFileFromSE_Api (string? fileName, byte[]? dataOut, int offset, int dataLen)
		{
			const string __id = "readFileFromSE_Api.(Ljava/lang/String;[BII)I";
			IntPtr native_fileName = JNIEnv.NewString ((string?)fileName);
			IntPtr native_dataOut = JNIEnv.NewArray (dataOut);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_fileName);
				__args [1] = new JniArgumentValue (native_dataOut);
				__args [2] = new JniArgumentValue (offset);
				__args [3] = new JniArgumentValue (dataLen);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_fileName);
				if (dataOut != null) {
					JNIEnv.CopyArray (native_dataOut, dataOut);
					JNIEnv.DeleteLocalRef (native_dataOut);
				}
				global::System.GC.KeepAlive (dataOut);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='readFlashData_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='byte[]']]"
		[Register ("readFlashData_Api", "(I[B)I", "")]
		public static unsafe int ReadFlashData_Api (int addr, byte[]? buffer)
		{
			const string __id = "readFlashData_Api.(I[B)I";
			IntPtr native_buffer = JNIEnv.NewArray (buffer);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (addr);
				__args [1] = new JniArgumentValue (native_buffer);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (buffer != null) {
					JNIEnv.CopyArray (native_buffer, buffer);
					JNIEnv.DeleteLocalRef (native_buffer);
				}
				global::System.GC.KeepAlive (buffer);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='readNvRamFile_Api' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='byte[]'] and parameter[3][@type='int']]"
		[Register ("readNvRamFile_Api", "(I[BI)I", "")]
		public static unsafe int ReadNvRamFile_Api (int offset, byte[]? buf, int len)
		{
			const string __id = "readNvRamFile_Api.(I[BI)I";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (offset);
				__args [1] = new JniArgumentValue (native_buf);
				__args [2] = new JniArgumentValue (len);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='readRsaKey_Api' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("readRsaKey_Api", "([B)I", "")]
		public static unsafe int ReadRsaKey_Api (byte[]? ReadRsaKeyOut)
		{
			const string __id = "readRsaKey_Api.([B)I";
			IntPtr native_ReadRsaKeyOut = JNIEnv.NewArray (ReadRsaKeyOut);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_ReadRsaKeyOut);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (ReadRsaKeyOut != null) {
					JNIEnv.CopyArray (native_ReadRsaKeyOut, ReadRsaKeyOut);
					JNIEnv.DeleteLocalRef (native_ReadRsaKeyOut);
				}
				global::System.GC.KeepAlive (ReadRsaKeyOut);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setAdminPassword_Api' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setAdminPassword_Api", "(Ljava/lang/String;)I", "")]
		public static unsafe int SetAdminPassword_Api (string? pwd)
		{
			const string __id = "setAdminPassword_Api.(Ljava/lang/String;)I";
			IntPtr native_pwd = JNIEnv.NewString ((string?)pwd);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_pwd);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_pwd);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setApplicationType_Api' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setApplicationType_Api", "(Z)V", "")]
		public static unsafe void SetApplicationType_Api (bool isSpecialType)
		{
			const string __id = "setApplicationType_Api.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (isSpecialType);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setAutoTimeZone_Api' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setAutoTimeZone_Api", "(Z)Z", "")]
		public static unsafe bool SetAutoTimeZone_Api (bool state)
		{
			const string __id = "setAutoTimeZone_Api.(Z)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (state);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setAutoTime_Api' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setAutoTime_Api", "(Z)Z", "")]
		public static unsafe bool SetAutoTime_Api (bool state)
		{
			const string __id = "setAutoTime_Api.(Z)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (state);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setDataEnabled_Api' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setDataEnabled_Api", "(Z)Z", "")]
		public static unsafe bool SetDataEnabled_Api (bool enabled)
		{
			const string __id = "setDataEnabled_Api.(Z)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (enabled);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setLauncherApp_Api' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("setLauncherApp_Api", "(Ljava/lang/String;Ljava/lang/String;)Z", "")]
		public static unsafe bool SetLauncherApp_Api (string? packageName, string? activityName)
		{
			const string __id = "setLauncherApp_Api.(Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native_packageName = JNIEnv.NewString ((string?)packageName);
			IntPtr native_activityName = JNIEnv.NewString ((string?)activityName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_packageName);
				__args [1] = new JniArgumentValue (native_activityName);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_packageName);
				JNIEnv.DeleteLocalRef (native_activityName);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setNtpServer_Api' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setNtpServer_Api", "(Ljava/lang/String;)Z", "")]
		public static unsafe bool SetNtpServer_Api (string? ntpServer)
		{
			const string __id = "setNtpServer_Api.(Ljava/lang/String;)Z";
			IntPtr native_ntpServer = JNIEnv.NewString ((string?)ntpServer);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_ntpServer);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_ntpServer);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setResumeRechargeValue' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setResumeRechargeValue", "(Ljava/lang/String;)Z", "")]
		public static unsafe bool SetResumeRechargeValue (string? value)
		{
			const string __id = "setResumeRechargeValue.(Ljava/lang/String;)Z";
			IntPtr native_value = JNIEnv.NewString ((string?)value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_value);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_value);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setSettingsPWD_Api' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setSettingsPWD_Api", "(Ljava/lang/String;)I", "")]
		public static unsafe int SetSettingsPWD_Api (string? pwd)
		{
			const string __id = "setSettingsPWD_Api.(Ljava/lang/String;)I";
			IntPtr native_pwd = JNIEnv.NewString ((string?)pwd);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_pwd);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_pwd);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setSgnCheckEnable_Api' and count(parameter)=2 and parameter[1][@type='boolean'] and parameter[2][@type='java.lang.String']]"
		[Register ("setSgnCheckEnable_Api", "(ZLjava/lang/String;)I", "")]
		public static unsafe int SetSgnCheckEnable_Api (bool enable, string? pwd)
		{
			const string __id = "setSgnCheckEnable_Api.(ZLjava/lang/String;)I";
			IntPtr native_pwd = JNIEnv.NewString ((string?)pwd);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (enable);
				__args [1] = new JniArgumentValue (native_pwd);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_pwd);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setSmartPosID' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("setSmartPosID", "([B)I", "")]
		public static unsafe int SetSmartPosID (byte[]? data)
		{
			const string __id = "setSmartPosID.([B)I";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setSmartPosID_Api' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setSmartPosID_Api", "([B)I", "")]
		public static unsafe int SetSmartPosID_Api (byte[]? data)
		{
			const string __id = "setSmartPosID_Api.([B)I";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setSystemFunction' and count(parameter)=1 and parameter[1][@type='android.os.Bundle']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("setSystemFunction", "(Landroid/os/Bundle;)Z", "")]
		public static unsafe bool SetSystemFunction (global::Android.OS.Bundle? bundle)
		{
			const string __id = "setSystemFunction.(Landroid/os/Bundle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((bundle == null) ? IntPtr.Zero : ((global::Java.Lang.Object) bundle).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (bundle);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setSystemFunction_Api' and count(parameter)=1 and parameter[1][@type='android.os.Bundle']]"
		[Register ("setSystemFunction_Api", "(Landroid/os/Bundle;)Z", "")]
		public static unsafe bool SetSystemFunction_Api (global::Android.OS.Bundle? bundle)
		{
			const string __id = "setSystemFunction_Api.(Landroid/os/Bundle;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((bundle == null) ? IntPtr.Zero : ((global::Java.Lang.Object) bundle).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (bundle);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setTimeZone_Api' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setTimeZone_Api", "(Ljava/lang/String;)Z", "")]
		public static unsafe bool SetTimeZone_Api (string? timeZone)
		{
			const string __id = "setTimeZone_Api.(Ljava/lang/String;)Z";
			IntPtr native_timeZone = JNIEnv.NewString ((string?)timeZone);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_timeZone);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_timeZone);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='setTrustedBluetoothMAC_Api' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;java.lang.String&gt;']]"
		[Register ("setTrustedBluetoothMAC_Api", "(Ljava/util/List;)Z", "")]
		public static unsafe bool SetTrustedBluetoothMAC_Api (global::System.Collections.Generic.IList<string>? list)
		{
			const string __id = "setTrustedBluetoothMAC_Api.(Ljava/util/List;)Z";
			IntPtr native_list = global::Android.Runtime.JavaList<string>.ToLocalJniHandle (list);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_list);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_list);
				global::System.GC.KeepAlive (list);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='silentInstallApk_Api' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='com.vanstone.trans.api.SystemApi.IAppInstallResult']]"
		[Register ("silentInstallApk_Api", "(Ljava/lang/String;Ljava/lang/String;Lcom/vanstone/trans/api/SystemApi$IAppInstallResult;)V", "")]
		public static unsafe void SilentInstallApk_Api (string? filePath, string? pkgName, global::Com.Vanstone.Trans.Api.SystemApi.IAppInstallResult? result)
		{
			const string __id = "silentInstallApk_Api.(Ljava/lang/String;Ljava/lang/String;Lcom/vanstone/trans/api/SystemApi$IAppInstallResult;)V";
			IntPtr native_filePath = JNIEnv.NewString ((string?)filePath);
			IntPtr native_pkgName = JNIEnv.NewString ((string?)pkgName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_filePath);
				__args [1] = new JniArgumentValue (native_pkgName);
				__args [2] = new JniArgumentValue ((result == null) ? IntPtr.Zero : ((global::Java.Lang.Object) result).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_filePath);
				JNIEnv.DeleteLocalRef (native_pkgName);
				global::System.GC.KeepAlive (result);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='silentUnInstallApk_Api' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("silentUnInstallApk_Api", "(Ljava/lang/String;)V", "")]
		public static unsafe void SilentUnInstallApk_Api (string? pkgName)
		{
			const string __id = "silentUnInstallApk_Api.(Ljava/lang/String;)V";
			IntPtr native_pkgName = JNIEnv.NewString ((string?)pkgName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_pkgName);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_pkgName);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='silentUnInstallApk_Api' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='com.vanstone.trans.api.SystemApi.IAppUninstallResult']]"
		[Register ("silentUnInstallApk_Api", "(Ljava/lang/String;Lcom/vanstone/trans/api/SystemApi$IAppUninstallResult;)V", "")]
		public static unsafe void SilentUnInstallApk_Api (string? pkgName, global::Com.Vanstone.Trans.Api.SystemApi.IAppUninstallResult? result)
		{
			const string __id = "silentUnInstallApk_Api.(Ljava/lang/String;Lcom/vanstone/trans/api/SystemApi$IAppUninstallResult;)V";
			IntPtr native_pkgName = JNIEnv.NewString ((string?)pkgName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_pkgName);
				__args [1] = new JniArgumentValue ((result == null) ? IntPtr.Zero : ((global::Java.Lang.Object) result).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_pkgName);
				global::System.GC.KeepAlive (result);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='stopBeep_api' and count(parameter)=0]"
		[Register ("stopBeep_api", "()V", "")]
		public static unsafe void StopBeep_api ()
		{
			const string __id = "stopBeep_api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='stopCatch_Api' and count(parameter)=0]"
		[Register ("stopCatch_Api", "()Z", "")]
		public static unsafe bool StopCatch_Api ()
		{
			const string __id = "stopCatch_Api.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='switchAppEnable_Api' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]"
		[Register ("switchAppEnable_Api", "(Ljava/lang/String;Z)Z", "")]
		public static unsafe bool SwitchAppEnable_Api (string? packageName, bool enable)
		{
			const string __id = "switchAppEnable_Api.(Ljava/lang/String;Z)Z";
			IntPtr native_packageName = JNIEnv.NewString ((string?)packageName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_packageName);
				__args [1] = new JniArgumentValue (enable);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_packageName);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='switchChargeOnRS232_Api' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("switchChargeOnRS232_Api", "(Z)Z", "")]
		public static unsafe bool SwitchChargeOnRS232_Api (bool enable)
		{
			const string __id = "switchChargeOnRS232_Api.(Z)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (enable);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='switchDefaultDataSIM_Api' and count(parameter)=0]"
		[Register ("switchDefaultDataSIM_Api", "()Z", "")]
		public static unsafe bool SwitchDefaultDataSIM_Api ()
		{
			const string __id = "switchDefaultDataSIM_Api.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='switchGPS_Api' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("switchGPS_Api", "(Z)Z", "")]
		public static unsafe bool SwitchGPS_Api (bool enable)
		{
			const string __id = "switchGPS_Api.(Z)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (enable);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='updateSystem_Api' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='com.vanstone.base.interfaces.ISystemOper']]"
		[Register ("updateSystem_Api", "(Landroid/content/Context;Ljava/lang/String;Lcom/vanstone/base/interfaces/ISystemOper;)I", "")]
		public static unsafe int UpdateSystem_Api (global::Android.Content.Context? context, string? filePaths, global::Com.Vanstone.Base.Interfaces.ISystemOper? systemOper)
		{
			const string __id = "updateSystem_Api.(Landroid/content/Context;Ljava/lang/String;Lcom/vanstone/base/interfaces/ISystemOper;)I";
			IntPtr native_filePaths = JNIEnv.NewString ((string?)filePaths);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue (native_filePaths);
				__args [2] = new JniArgumentValue ((systemOper == null) ? IntPtr.Zero : ((global::Java.Lang.Object) systemOper).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_filePaths);
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (systemOper);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='validatePermission' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("validatePermission", "(Z)V", "")]
		public static unsafe void ValidatePermission (bool checkFlag)
		{
			const string __id = "validatePermission.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (checkFlag);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='writeFileToSE_Api' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='byte[]'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("writeFileToSE_Api", "(Ljava/lang/String;[BII)I", "")]
		public static unsafe int WriteFileToSE_Api (string? fileName, byte[]? data, int offset, int dataLen)
		{
			const string __id = "writeFileToSE_Api.(Ljava/lang/String;[BII)I";
			IntPtr native_fileName = JNIEnv.NewString ((string?)fileName);
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_fileName);
				__args [1] = new JniArgumentValue (native_data);
				__args [2] = new JniArgumentValue (offset);
				__args [3] = new JniArgumentValue (dataLen);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_fileName);
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='writeFlashData_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='byte[]']]"
		[Register ("writeFlashData_Api", "(I[B)I", "")]
		public static unsafe int WriteFlashData_Api (int addr, byte[]? data)
		{
			const string __id = "writeFlashData_Api.(I[B)I";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (addr);
				__args [1] = new JniArgumentValue (native_data);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='writeNvRamFile_Api' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='byte[]'] and parameter[3][@type='int']]"
		[Register ("writeNvRamFile_Api", "(I[BI)I", "")]
		public static unsafe int WriteNvRamFile_Api (int offset, byte[]? data, int len)
		{
			const string __id = "writeNvRamFile_Api.(I[BI)I";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (offset);
				__args [1] = new JniArgumentValue (native_data);
				__args [2] = new JniArgumentValue (len);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='SystemApi']/method[@name='writeRsaKey_Api' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("writeRsaKey_Api", "([B)Z", "")]
		public static unsafe bool WriteRsaKey_Api (byte[]? bytes)
		{
			const string __id = "writeRsaKey_Api.([B)Z";
			IntPtr native_bytes = JNIEnv.NewArray (bytes);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_bytes);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				if (bytes != null) {
					JNIEnv.CopyArray (native_bytes, bytes);
					JNIEnv.DeleteLocalRef (native_bytes);
				}
				global::System.GC.KeepAlive (bytes);
			}
		}

	}
}
