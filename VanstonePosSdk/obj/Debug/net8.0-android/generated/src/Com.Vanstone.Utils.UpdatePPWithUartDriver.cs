//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Utils {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']"
	[global::Android.Runtime.Register ("com/vanstone/utils/UpdatePPWithUartDriver", DoNotGenerateAcw=true)]
	public partial class UpdatePPWithUartDriver : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/UpdatePPWithUartDriver", typeof (UpdatePPWithUartDriver));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected UpdatePPWithUartDriver (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/constructor[@name='UpdatePPWithUartDriver' and count(parameter)=1 and parameter[1][@type='android.app.Activity']]"
		[Register (".ctor", "(Landroid/app/Activity;)V", "")]
		public unsafe UpdatePPWithUartDriver (global::Android.App.Activity? activity) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/app/Activity;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((activity == null) ? IntPtr.Zero : ((global::Java.Lang.Object) activity).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (activity);
			}
		}

		static Delegate? cb_getBaudPort;
#pragma warning disable 0169
		static Delegate GetGetBaudPortHandler ()
		{
			if (cb_getBaudPort == null)
				cb_getBaudPort = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetBaudPort));
			return cb_getBaudPort;
		}

		static int n_GetBaudPort (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.BaudPort;
		}
#pragma warning restore 0169

		static Delegate? cb_setBaudPort_I;
#pragma warning disable 0169
		static Delegate GetSetBaudPort_IHandler ()
		{
			if (cb_setBaudPort_I == null)
				cb_setBaudPort_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetBaudPort_I));
			return cb_setBaudPort_I;
		}

		static void n_SetBaudPort_I (IntPtr jnienv, IntPtr native__this, int baudPort)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.BaudPort = baudPort;
		}
#pragma warning restore 0169

		public virtual unsafe int BaudPort {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='getBaudPort' and count(parameter)=0]"
			[Register ("getBaudPort", "()I", "GetGetBaudPortHandler")]
			get {
				const string __id = "getBaudPort.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='setBaudPort' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setBaudPort", "(I)V", "GetSetBaudPort_IHandler")]
			set {
				const string __id = "setBaudPort.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_isUsbOpen;
#pragma warning disable 0169
		static Delegate GetIsUsbOpenHandler ()
		{
			if (cb_isUsbOpen == null)
				cb_isUsbOpen = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsUsbOpen));
			return cb_isUsbOpen;
		}

		static bool n_IsUsbOpen (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsUsbOpen;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsUsbOpen {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='isUsbOpen' and count(parameter)=0]"
			[Register ("isUsbOpen", "()Z", "GetIsUsbOpenHandler")]
			get {
				const string __id = "isUsbOpen.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_AlertDialogSetSingleChoiceItems;
#pragma warning disable 0169
		static Delegate GetAlertDialogSetSingleChoiceItemsHandler ()
		{
			if (cb_AlertDialogSetSingleChoiceItems == null)
				cb_AlertDialogSetSingleChoiceItems = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_AlertDialogSetSingleChoiceItems));
			return cb_AlertDialogSetSingleChoiceItems;
		}

		static void n_AlertDialogSetSingleChoiceItems (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.AlertDialogSetSingleChoiceItems ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='AlertDialogSetSingleChoiceItems' and count(parameter)=0]"
		[Register ("AlertDialogSetSingleChoiceItems", "()V", "GetAlertDialogSetSingleChoiceItemsHandler")]
		public virtual unsafe void AlertDialogSetSingleChoiceItems ()
		{
			const string __id = "AlertDialogSetSingleChoiceItems.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_PortBaudSet;
#pragma warning disable 0169
		static Delegate GetPortBaudSetHandler ()
		{
			if (cb_PortBaudSet == null)
				cb_PortBaudSet = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_PortBaudSet));
			return cb_PortBaudSet;
		}

		static IntPtr n_PortBaudSet (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.PortBaudSet ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='PortBaudSet' and count(parameter)=0]"
		[Register ("PortBaudSet", "()Ljava/lang/String;", "GetPortBaudSetHandler")]
		public virtual unsafe string? PortBaudSet ()
		{
			const string __id = "PortBaudSet.()Ljava/lang/String;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_PortClose;
#pragma warning disable 0169
		static Delegate GetPortCloseHandler ()
		{
			if (cb_PortClose == null)
				cb_PortClose = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_PortClose));
			return cb_PortClose;
		}

		static void n_PortClose (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.PortClose ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='PortClose' and count(parameter)=0]"
		[Register ("PortClose", "()V", "GetPortCloseHandler")]
		public virtual unsafe void PortClose ()
		{
			const string __id = "PortClose.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_PortOpen;
#pragma warning disable 0169
		static Delegate GetPortOpenHandler ()
		{
			if (cb_PortOpen == null)
				cb_PortOpen = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_PortOpen));
			return cb_PortOpen;
		}

		static int n_PortOpen (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.PortOpen ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='PortOpen' and count(parameter)=0]"
		[Register ("PortOpen", "()I", "GetPortOpenHandler")]
		public virtual unsafe int PortOpen ()
		{
			const string __id = "PortOpen.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_PortParamsShowText;
#pragma warning disable 0169
		static Delegate GetPortParamsShowTextHandler ()
		{
			if (cb_PortParamsShowText == null)
				cb_PortParamsShowText = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_PortParamsShowText));
			return cb_PortParamsShowText;
		}

		static IntPtr n_PortParamsShowText (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.PortParamsShowText ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='PortParamsShowText' and count(parameter)=0]"
		[Register ("PortParamsShowText", "()Ljava/lang/String;", "GetPortParamsShowTextHandler")]
		public virtual unsafe string? PortParamsShowText ()
		{
			const string __id = "PortParamsShowText.()Ljava/lang/String;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_setDataPort_B;
#pragma warning disable 0169
		static Delegate GetSetDataPort_BHandler ()
		{
			if (cb_setDataPort_B == null)
				cb_setDataPort_B = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPB_V (n_SetDataPort_B));
			return cb_setDataPort_B;
		}

		static void n_SetDataPort_B (IntPtr jnienv, IntPtr native__this, sbyte dataPort)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetDataPort (dataPort);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='setDataPort' and count(parameter)=1 and parameter[1][@type='byte']]"
		[Register ("setDataPort", "(B)V", "GetSetDataPort_BHandler")]
		public virtual unsafe void SetDataPort (sbyte dataPort)
		{
			const string __id = "setDataPort.(B)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (dataPort);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setFlowPort_B;
#pragma warning disable 0169
		static Delegate GetSetFlowPort_BHandler ()
		{
			if (cb_setFlowPort_B == null)
				cb_setFlowPort_B = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPB_V (n_SetFlowPort_B));
			return cb_setFlowPort_B;
		}

		static void n_SetFlowPort_B (IntPtr jnienv, IntPtr native__this, sbyte flowPort)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetFlowPort (flowPort);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='setFlowPort' and count(parameter)=1 and parameter[1][@type='byte']]"
		[Register ("setFlowPort", "(B)V", "GetSetFlowPort_BHandler")]
		public virtual unsafe void SetFlowPort (sbyte flowPort)
		{
			const string __id = "setFlowPort.(B)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (flowPort);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setParityPort_B;
#pragma warning disable 0169
		static Delegate GetSetParityPort_BHandler ()
		{
			if (cb_setParityPort_B == null)
				cb_setParityPort_B = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPB_V (n_SetParityPort_B));
			return cb_setParityPort_B;
		}

		static void n_SetParityPort_B (IntPtr jnienv, IntPtr native__this, sbyte parityPort)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetParityPort (parityPort);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='setParityPort' and count(parameter)=1 and parameter[1][@type='byte']]"
		[Register ("setParityPort", "(B)V", "GetSetParityPort_BHandler")]
		public virtual unsafe void SetParityPort (sbyte parityPort)
		{
			const string __id = "setParityPort.(B)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (parityPort);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setStopPort_B;
#pragma warning disable 0169
		static Delegate GetSetStopPort_BHandler ()
		{
			if (cb_setStopPort_B == null)
				cb_setStopPort_B = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPB_V (n_SetStopPort_B));
			return cb_setStopPort_B;
		}

		static void n_SetStopPort_B (IntPtr jnienv, IntPtr native__this, sbyte stopPort)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetStopPort (stopPort);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='setStopPort' and count(parameter)=1 and parameter[1][@type='byte']]"
		[Register ("setStopPort", "(B)V", "GetSetStopPort_BHandler")]
		public virtual unsafe void SetStopPort (sbyte stopPort)
		{
			const string __id = "setStopPort.(B)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (stopPort);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_uartPortRecv_arrayBI;
#pragma warning disable 0169
		static Delegate GetUartPortRecv_arrayBIHandler ()
		{
			if (cb_uartPortRecv_arrayBI == null)
				cb_uartPortRecv_arrayBI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_I (n_UartPortRecv_arrayBI));
			return cb_uartPortRecv_arrayBI;
		}

		static int n_UartPortRecv_arrayBI (IntPtr jnienv, IntPtr native__this, IntPtr native_recvbuff, int len)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var recvbuff = (byte[]?) JNIEnv.GetArray (native_recvbuff, JniHandleOwnership.DoNotTransfer, typeof (byte));
			int __ret = __this.UartPortRecv (recvbuff, len);
			if (recvbuff != null)
				JNIEnv.CopyArray (recvbuff, native_recvbuff);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='uartPortRecv' and count(parameter)=2 and parameter[1][@type='byte[]'] and parameter[2][@type='int']]"
		[Register ("uartPortRecv", "([BI)I", "GetUartPortRecv_arrayBIHandler")]
		public virtual unsafe int UartPortRecv (byte[]? recvbuff, int len)
		{
			const string __id = "uartPortRecv.([BI)I";
			IntPtr native_recvbuff = JNIEnv.NewArray (recvbuff);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_recvbuff);
				__args [1] = new JniArgumentValue (len);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				if (recvbuff != null) {
					JNIEnv.CopyArray (native_recvbuff, recvbuff);
					JNIEnv.DeleteLocalRef (native_recvbuff);
				}
				global::System.GC.KeepAlive (recvbuff);
			}
		}

		static Delegate? cb_uartPortSend_arrayBI;
#pragma warning disable 0169
		static Delegate GetUartPortSend_arrayBIHandler ()
		{
			if (cb_uartPortSend_arrayBI == null)
				cb_uartPortSend_arrayBI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLI_I (n_UartPortSend_arrayBI));
			return cb_uartPortSend_arrayBI;
		}

		static int n_UartPortSend_arrayBI (IntPtr jnienv, IntPtr native__this, IntPtr native_sendbuff, int len)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.UpdatePPWithUartDriver> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var sendbuff = (byte[]?) JNIEnv.GetArray (native_sendbuff, JniHandleOwnership.DoNotTransfer, typeof (byte));
			int __ret = __this.UartPortSend (sendbuff, len);
			if (sendbuff != null)
				JNIEnv.CopyArray (sendbuff, native_sendbuff);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='UpdatePPWithUartDriver']/method[@name='uartPortSend' and count(parameter)=2 and parameter[1][@type='byte[]'] and parameter[2][@type='int']]"
		[Register ("uartPortSend", "([BI)I", "GetUartPortSend_arrayBIHandler")]
		public virtual unsafe int UartPortSend (byte[]? sendbuff, int len)
		{
			const string __id = "uartPortSend.([BI)I";
			IntPtr native_sendbuff = JNIEnv.NewArray (sendbuff);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_sendbuff);
				__args [1] = new JniArgumentValue (len);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				if (sendbuff != null) {
					JNIEnv.CopyArray (native_sendbuff, sendbuff);
					JNIEnv.DeleteLocalRef (native_sendbuff);
				}
				global::System.GC.KeepAlive (sendbuff);
			}
		}

	}
}
