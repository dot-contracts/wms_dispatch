//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/CommApi", DoNotGenerateAcw=true)]
	public partial class CommApi : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='ApnUri']"
		[Register ("ApnUri")]
		public static global::Android.Net.Uri? ApnUri {
			get {
				const string __id = "ApnUri.Landroid/net/Uri;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Android.Net.Uri> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "ApnUri.Landroid/net/Uri;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='BLUETOOTH']"
		[Register ("BLUETOOTH")]
		public const int Bluetooth = (int) 8;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='CDMA']"
		[Register ("CDMA")]
		public const int Cdma = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='COM']"
		[Register ("COM")]
		public const int Com = (int) 5;


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='CurIp']"
		[Register ("CurIp")]
		public static IList<byte>? CurIp {
			get {
				const string __id = "CurIp.[B";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Android.Runtime.JavaArray<byte>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "CurIp.[B";

				IntPtr native_value = global::Android.Runtime.JavaArray<byte>.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='CurPort']"
		[Register ("CurPort")]
		public static IList<byte>? CurPort {
			get {
				const string __id = "CurPort.[B";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Android.Runtime.JavaArray<byte>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "CurPort.[B";

				IntPtr native_value = global::Android.Runtime.JavaArray<byte>.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='FSK']"
		[Register ("FSK")]
		public const int Fsk = (int) 6;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='GPRS']"
		[Register ("GPRS")]
		public const int Gprs = (int) 2;


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='g_CertIndx']"
		[Register ("g_CertIndx")]
		public static int GCertIndx {
			get {
				const string __id = "g_CertIndx.I";

				var __v = _members.StaticFields.GetInt32Value (__id);
				return __v;
			}
			set {
				const string __id = "g_CertIndx.I";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='g_CertLabel']"
		[Register ("g_CertLabel")]
		public static int GCertLabel {
			get {
				const string __id = "g_CertLabel.I";

				var __v = _members.StaticFields.GetInt32Value (__id);
				return __v;
			}
			set {
				const string __id = "g_CertLabel.I";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='G_CommParam']"
		[Register ("G_CommParam")]
		public static global::Com.Vanstone.Trans.Api.Struct.CommParaStruc? GCommParam {
			get {
				const string __id = "G_CommParam.Lcom/vanstone/trans/api/struct/CommParaStruc;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.CommParaStruc> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "G_CommParam.Lcom/vanstone/trans/api/struct/CommParaStruc;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='g_datLen']"
		[Register ("g_datLen")]
		public static short GDatLen {
			get {
				const string __id = "g_datLen.S";

				var __v = _members.StaticFields.GetInt16Value (__id);
				return __v;
			}
			set {
				const string __id = "g_datLen.S";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='G_TelSel']"
		[Register ("G_TelSel")]
		public static int GTelSel {
			get {
				const string __id = "G_TelSel.I";

				var __v = _members.StaticFields.GetInt32Value (__id);
				return __v;
			}
			set {
				const string __id = "G_TelSel.I";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='G_WLSIsCheckFlag']"
		[Register ("G_WLSIsCheckFlag")]
		public static int GWLSIsCheckFlag {
			get {
				const string __id = "G_WLSIsCheckFlag.I";

				var __v = _members.StaticFields.GetInt32Value (__id);
				return __v;
			}
			set {
				const string __id = "G_WLSIsCheckFlag.I";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='LAN']"
		[Register ("LAN")]
		public const int Lan = (int) 3;


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='LOCAL_CERT_ROOT']"
		[Register ("LOCAL_CERT_ROOT")]
		public static int LocalCertRoot {
			get {
				const string __id = "LOCAL_CERT_ROOT.I";

				var __v = _members.StaticFields.GetInt32Value (__id);
				return __v;
			}
			set {
				const string __id = "LOCAL_CERT_ROOT.I";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='LOCAL_CERT_SUB']"
		[Register ("LOCAL_CERT_SUB")]
		public static int LocalCertSub {
			get {
				const string __id = "LOCAL_CERT_SUB.I";

				var __v = _members.StaticFields.GetInt32Value (__id);
				return __v;
			}
			set {
				const string __id = "LOCAL_CERT_SUB.I";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='LOCAL_CRL']"
		[Register ("LOCAL_CRL")]
		public static int LocalCrl {
			get {
				const string __id = "LOCAL_CRL.I";

				var __v = _members.StaticFields.GetInt32Value (__id);
				return __v;
			}
			set {
				const string __id = "LOCAL_CRL.I";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='MainApnUri']"
		[Register ("MainApnUri")]
		public static global::Android.Net.Uri? MainApnUri {
			get {
				const string __id = "MainApnUri.Landroid/net/Uri;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Android.Net.Uri> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "MainApnUri.Landroid/net/Uri;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='MODEM']"
		[Register ("MODEM")]
		public const int Modem = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='PPP']"
		[Register ("PPP")]
		public const int Ppp = (int) 4;

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='SSL']"
		[Register ("SSL")]
		public const int Ssl = (int) 1;


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='SSL_CERT_FOLDER']"
		[Register ("SSL_CERT_FOLDER")]
		public static string? SslCertFolder {
			get {
				const string __id = "SSL_CERT_FOLDER.Ljava/lang/String;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "SSL_CERT_FOLDER.Ljava/lang/String;";

				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/field[@name='WIFI']"
		[Register ("WIFI")]
		public const int Wifi = (int) 7;

		// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi.CertInfo']"
		[global::Android.Runtime.Register ("com/vanstone/trans/api/CommApi$CertInfo", DoNotGenerateAcw=true)]
		public abstract partial class CertInfo : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/CommApi$CertInfo", typeof (CertInfo));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected CertInfo (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi.CertInfo']/constructor[@name='CommApi.CertInfo' and count(parameter)=0]"
			[Register (".ctor", "()V", "")]
			public unsafe CertInfo () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_getCAInputStream;
#pragma warning disable 0169
			static Delegate GetGetCAInputStreamHandler ()
			{
				if (cb_getCAInputStream == null)
					cb_getCAInputStream = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetCAInputStream));
				return cb_getCAInputStream;
			}

			static IntPtr n_GetCAInputStream (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.CommApi.CertInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return global::Android.Runtime.InputStreamAdapter.ToLocalJniHandle (__this.CAInputStream);
			}
#pragma warning restore 0169

			public abstract global::System.IO.Stream? CAInputStream {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi.CertInfo']/method[@name='getCAInputStream' and count(parameter)=0]"
				[Register ("getCAInputStream", "()Ljava/io/InputStream;", "GetGetCAInputStreamHandler")]
				get; 
			}

			static Delegate? cb_getCAPassword;
#pragma warning disable 0169
			static Delegate GetGetCAPasswordHandler ()
			{
				if (cb_getCAPassword == null)
					cb_getCAPassword = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetCAPassword));
				return cb_getCAPassword;
			}

			static IntPtr n_GetCAPassword (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.CommApi.CertInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.CAPassword);
			}
#pragma warning restore 0169

			public virtual unsafe string? CAPassword {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi.CertInfo']/method[@name='getCAPassword' and count(parameter)=0]"
				[Register ("getCAPassword", "()Ljava/lang/String;", "GetGetCAPasswordHandler")]
				get {
					const string __id = "getCAPassword.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			static Delegate? cb_getClientInputStream;
#pragma warning disable 0169
			static Delegate GetGetClientInputStreamHandler ()
			{
				if (cb_getClientInputStream == null)
					cb_getClientInputStream = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetClientInputStream));
				return cb_getClientInputStream;
			}

			static IntPtr n_GetClientInputStream (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.CommApi.CertInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return global::Android.Runtime.InputStreamAdapter.ToLocalJniHandle (__this.ClientInputStream);
			}
#pragma warning restore 0169

			public virtual unsafe global::System.IO.Stream? ClientInputStream {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi.CertInfo']/method[@name='getClientInputStream' and count(parameter)=0]"
				[Register ("getClientInputStream", "()Ljava/io/InputStream;", "GetGetClientInputStreamHandler")]
				get {
					const string __id = "getClientInputStream.()Ljava/io/InputStream;";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
						return global::Android.Runtime.InputStreamInvoker.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			static Delegate? cb_getClientKey;
#pragma warning disable 0169
			static Delegate GetGetClientKeyHandler ()
			{
				if (cb_getClientKey == null)
					cb_getClientKey = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetClientKey));
				return cb_getClientKey;
			}

			static IntPtr n_GetClientKey (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.CommApi.CertInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.ClientKey);
			}
#pragma warning restore 0169

			public virtual unsafe string? ClientKey {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi.CertInfo']/method[@name='getClientKey' and count(parameter)=0]"
				[Register ("getClientKey", "()Ljava/lang/String;", "GetGetClientKeyHandler")]
				get {
					const string __id = "getClientKey.()Ljava/lang/String;";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
						return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

		}

		[global::Android.Runtime.Register ("com/vanstone/trans/api/CommApi$CertInfo", DoNotGenerateAcw=true)]
		internal partial class CertInfoInvoker : CertInfo {
			public CertInfoInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
			{
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/CommApi$CertInfo", typeof (CertInfoInvoker));

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			public override unsafe global::System.IO.Stream? CAInputStream {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi.CertInfo']/method[@name='getCAInputStream' and count(parameter)=0]"
				[Register ("getCAInputStream", "()Ljava/io/InputStream;", "GetGetCAInputStreamHandler")]
				get {
					const string __id = "getCAInputStream.()Ljava/io/InputStream;";
					try {
						var __rm = _members.InstanceMethods.InvokeAbstractObjectMethod (__id, this, null);
						return global::Android.Runtime.InputStreamInvoker.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='CommApi.IAPNOper']"
		[Register ("com/vanstone/trans/api/CommApi$IAPNOper", "", "Com.Vanstone.Trans.Api.CommApi/IAPNOperInvoker")]
		public partial interface IAPNOper : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='CommApi.IAPNOper']/method[@name='setDefaultAPNResult' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setDefaultAPNResult", "(Z)V", "GetSetDefaultAPNResult_ZHandler:Com.Vanstone.Trans.Api.CommApi/IAPNOperInvoker, VanstonePosSdk")]
			void SetDefaultAPNResult (bool p0);

		}

		[global::Android.Runtime.Register ("com/vanstone/trans/api/CommApi$IAPNOper", DoNotGenerateAcw=true)]
		internal partial class IAPNOperInvoker : global::Java.Lang.Object, IAPNOper {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/CommApi$IAPNOper", typeof (IAPNOperInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IAPNOper? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IAPNOper> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.vanstone.trans.api.CommApi.IAPNOper'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IAPNOperInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_setDefaultAPNResult_Z;
#pragma warning disable 0169
			static Delegate GetSetDefaultAPNResult_ZHandler ()
			{
				if (cb_setDefaultAPNResult_Z == null)
					cb_setDefaultAPNResult_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetDefaultAPNResult_Z));
				return cb_setDefaultAPNResult_Z;
			}

			static void n_SetDefaultAPNResult_Z (IntPtr jnienv, IntPtr native__this, bool p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.CommApi.IAPNOper> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.SetDefaultAPNResult (p0);
			}
#pragma warning restore 0169

			IntPtr id_setDefaultAPNResult_Z;
			public unsafe void SetDefaultAPNResult (bool p0)
			{
				if (id_setDefaultAPNResult_Z == IntPtr.Zero)
					id_setDefaultAPNResult_Z = JNIEnv.GetMethodID (class_ref, "setDefaultAPNResult", "(Z)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue (p0);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_setDefaultAPNResult_Z, __args);
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/CommApi", typeof (CommApi));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected CommApi (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/constructor[@name='CommApi' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe CommApi () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='ApnEnabled' and count(parameter)=2 and parameter[1][@type='boolean'] and parameter[2][@type='int']]"
		[Register ("ApnEnabled", "(ZI)I", "")]
		public static unsafe int ApnEnabled (bool flag, int CheckTimeOutS)
		{
			const string __id = "ApnEnabled.(ZI)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (flag);
				__args [1] = new JniArgumentValue (CheckTimeOutS);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='CommCheck' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("CommCheck", "(I)I", "")]
		public static unsafe int CommCheck (int CheckTimeOutS)
		{
			const string __id = "CommCheck.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (CheckTimeOutS);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='CommCheck_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("CommCheck_Api", "(I)I", "")]
		public static unsafe int CommCheck_Api (int CheckTimeOutS)
		{
			const string __id = "CommCheck_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (CheckTimeOutS);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='CommCheck_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("CommCheck_Api", "(II)I", "")]
		public static unsafe int CommCheck_Api (int CheckTimeOutS, int isAutoCommType)
		{
			const string __id = "CommCheck_Api.(II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (CheckTimeOutS);
				__args [1] = new JniArgumentValue (isAutoCommType);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='CommClose_Api' and count(parameter)=0]"
		[Register ("CommClose_Api", "()V", "")]
		public static unsafe void CommClose_Api ()
		{
			const string __id = "CommClose_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='CommGetCurIpPort_Api' and count(parameter)=2 and parameter[1][@type='byte[]'] and parameter[2][@type='byte[]']]"
		[Register ("CommGetCurIpPort_Api", "([B[B)V", "")]
		public static unsafe void CommGetCurIpPort_Api (byte[]? ipBuf, byte[]? portBuf)
		{
			const string __id = "CommGetCurIpPort_Api.([B[B)V";
			IntPtr native_ipBuf = JNIEnv.NewArray (ipBuf);
			IntPtr native_portBuf = JNIEnv.NewArray (portBuf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_ipBuf);
				__args [1] = new JniArgumentValue (native_portBuf);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (ipBuf != null) {
					JNIEnv.CopyArray (native_ipBuf, ipBuf);
					JNIEnv.DeleteLocalRef (native_ipBuf);
				}
				if (portBuf != null) {
					JNIEnv.CopyArray (native_portBuf, portBuf);
					JNIEnv.DeleteLocalRef (native_portBuf);
				}
				global::System.GC.KeepAlive (ipBuf);
				global::System.GC.KeepAlive (portBuf);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='CommModuleInit_Api' and count(parameter)=1 and parameter[1][@type='com.vanstone.trans.api.struct.CommParaStruc']]"
		[Register ("CommModuleInit_Api", "(Lcom/vanstone/trans/api/struct/CommParaStruc;)I", "")]
		public static unsafe int CommModuleInit_Api (global::Com.Vanstone.Trans.Api.Struct.CommParaStruc? G_CommPara)
		{
			const string __id = "CommModuleInit_Api.(Lcom/vanstone/trans/api/struct/CommParaStruc;)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((G_CommPara == null) ? IntPtr.Zero : ((global::Java.Lang.Object) G_CommPara).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (G_CommPara);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='CommParamSet_Api' and count(parameter)=1 and parameter[1][@type='com.vanstone.trans.api.struct.CommParaStruc']]"
		[Register ("CommParamSet_Api", "(Lcom/vanstone/trans/api/struct/CommParaStruc;)V", "")]
		public static unsafe void CommParamSet_Api (global::Com.Vanstone.Trans.Api.Struct.CommParaStruc? G_CommPara)
		{
			const string __id = "CommParamSet_Api.(Lcom/vanstone/trans/api/struct/CommParaStruc;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((G_CommPara == null) ? IntPtr.Zero : ((global::Java.Lang.Object) G_CommPara).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (G_CommPara);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='CommRxd_Api' and count(parameter)=5 and parameter[1][@type='byte[]'] and parameter[2][@type='byte[]'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]"
		[Register ("CommRxd_Api", "([B[BIII)I", "")]
		public static unsafe int CommRxd_Api (byte[]? RevBuff, byte[]? RevLen, int Mode, int RxdIsEsc, int RxdTimeOutMs)
		{
			const string __id = "CommRxd_Api.([B[BIII)I";
			IntPtr native_RevBuff = JNIEnv.NewArray (RevBuff);
			IntPtr native_RevLen = JNIEnv.NewArray (RevLen);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (native_RevBuff);
				__args [1] = new JniArgumentValue (native_RevLen);
				__args [2] = new JniArgumentValue (Mode);
				__args [3] = new JniArgumentValue (RxdIsEsc);
				__args [4] = new JniArgumentValue (RxdTimeOutMs);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (RevBuff != null) {
					JNIEnv.CopyArray (native_RevBuff, RevBuff);
					JNIEnv.DeleteLocalRef (native_RevBuff);
				}
				if (RevLen != null) {
					JNIEnv.CopyArray (native_RevLen, RevLen);
					JNIEnv.DeleteLocalRef (native_RevLen);
				}
				global::System.GC.KeepAlive (RevBuff);
				global::System.GC.KeepAlive (RevLen);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='CommStart_Api' and count(parameter)=0]"
		[Register ("CommStart_Api", "()I", "")]
		public static unsafe int CommStart_Api ()
		{
			const string __id = "CommStart_Api.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='CommTxd_Api' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("CommTxd_Api", "([BII)I", "")]
		public static unsafe int CommTxd_Api (byte[]? SendBuffer, int SendLen, int Mode)
		{
			const string __id = "CommTxd_Api.([BII)I";
			IntPtr native_SendBuffer = JNIEnv.NewArray (SendBuffer);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_SendBuffer);
				__args [1] = new JniArgumentValue (SendLen);
				__args [2] = new JniArgumentValue (Mode);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (SendBuffer != null) {
					JNIEnv.CopyArray (native_SendBuffer, SendBuffer);
					JNIEnv.DeleteLocalRef (native_SendBuffer);
				}
				global::System.GC.KeepAlive (SendBuffer);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='EthernetClose' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='com.vanstone.appsdk.api.interfaces.IEthernetOperSer']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("EthernetClose", "(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V", "")]
		public static unsafe void EthernetClose (global::Android.Content.Context? context, global::Com.Vanstone.Appsdk.Api.Interfaces.IEthernetOperSer? oper)
		{
			const string __id = "EthernetClose.(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((oper == null) ? IntPtr.Zero : ((global::Java.Lang.Object) oper).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (oper);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='EthernetClose_Api' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='com.vanstone.appsdk.api.interfaces.IEthernetOperSer']]"
		[Register ("EthernetClose_Api", "(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V", "")]
		public static unsafe void EthernetClose_Api (global::Android.Content.Context? context, global::Com.Vanstone.Appsdk.Api.Interfaces.IEthernetOperSer? oper)
		{
			const string __id = "EthernetClose_Api.(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((oper == null) ? IntPtr.Zero : ((global::Java.Lang.Object) oper).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (oper);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='EthernetGetIpConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='com.vanstone.appsdk.api.interfaces.IEthernetOperSer']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("EthernetGetIpConfig", "(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V", "")]
		public static unsafe void EthernetGetIpConfig (global::Android.Content.Context? context, global::Com.Vanstone.Appsdk.Api.Interfaces.IEthernetOperSer? oper)
		{
			const string __id = "EthernetGetIpConfig.(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((oper == null) ? IntPtr.Zero : ((global::Java.Lang.Object) oper).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (oper);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='EthernetGetIpConfig_Api' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='com.vanstone.appsdk.api.interfaces.IEthernetOperSer']]"
		[Register ("EthernetGetIpConfig_Api", "(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V", "")]
		public static unsafe void EthernetGetIpConfig_Api (global::Android.Content.Context? context, global::Com.Vanstone.Appsdk.Api.Interfaces.IEthernetOperSer? oper)
		{
			const string __id = "EthernetGetIpConfig_Api.(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((oper == null) ? IntPtr.Zero : ((global::Java.Lang.Object) oper).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (oper);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='EthernetOpen' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='com.vanstone.appsdk.api.interfaces.IEthernetOperSer']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("EthernetOpen", "(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V", "")]
		public static unsafe void EthernetOpen (global::Android.Content.Context? context, global::Com.Vanstone.Appsdk.Api.Interfaces.IEthernetOperSer? oper)
		{
			const string __id = "EthernetOpen.(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((oper == null) ? IntPtr.Zero : ((global::Java.Lang.Object) oper).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (oper);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='EthernetOpen_Api' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='com.vanstone.appsdk.api.interfaces.IEthernetOperSer']]"
		[Register ("EthernetOpen_Api", "(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V", "")]
		public static unsafe void EthernetOpen_Api (global::Android.Content.Context? context, global::Com.Vanstone.Appsdk.Api.Interfaces.IEthernetOperSer? oper)
		{
			const string __id = "EthernetOpen_Api.(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((oper == null) ? IntPtr.Zero : ((global::Java.Lang.Object) oper).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (oper);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='EthernetSaveDhcpConfig' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='com.vanstone.appsdk.api.interfaces.IEthernetOperSer']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("EthernetSaveDhcpConfig", "(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V", "")]
		public static unsafe void EthernetSaveDhcpConfig (global::Android.Content.Context? context, global::Com.Vanstone.Appsdk.Api.Interfaces.IEthernetOperSer? oper)
		{
			const string __id = "EthernetSaveDhcpConfig.(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((oper == null) ? IntPtr.Zero : ((global::Java.Lang.Object) oper).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (oper);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='EthernetSaveDhcpConfig_Api' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='com.vanstone.appsdk.api.interfaces.IEthernetOperSer']]"
		[Register ("EthernetSaveDhcpConfig_Api", "(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V", "")]
		public static unsafe void EthernetSaveDhcpConfig_Api (global::Android.Content.Context? context, global::Com.Vanstone.Appsdk.Api.Interfaces.IEthernetOperSer? oper)
		{
			const string __id = "EthernetSaveDhcpConfig_Api.(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((oper == null) ? IntPtr.Zero : ((global::Java.Lang.Object) oper).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (oper);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='EthernetSaveStaticConfig' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='com.vanstone.appsdk.api.interfaces.IEthernetOperSer'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='java.lang.String']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("EthernetSaveStaticConfig", "(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void EthernetSaveStaticConfig (global::Android.Content.Context? context, global::Com.Vanstone.Appsdk.Api.Interfaces.IEthernetOperSer? oper, string? mIpaddr, string? mDns, string? mGw, string? mprefix)
		{
			const string __id = "EthernetSaveStaticConfig.(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_mIpaddr = JNIEnv.NewString ((string?)mIpaddr);
			IntPtr native_mDns = JNIEnv.NewString ((string?)mDns);
			IntPtr native_mGw = JNIEnv.NewString ((string?)mGw);
			IntPtr native_mprefix = JNIEnv.NewString ((string?)mprefix);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((oper == null) ? IntPtr.Zero : ((global::Java.Lang.Object) oper).Handle);
				__args [2] = new JniArgumentValue (native_mIpaddr);
				__args [3] = new JniArgumentValue (native_mDns);
				__args [4] = new JniArgumentValue (native_mGw);
				__args [5] = new JniArgumentValue (native_mprefix);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_mIpaddr);
				JNIEnv.DeleteLocalRef (native_mDns);
				JNIEnv.DeleteLocalRef (native_mGw);
				JNIEnv.DeleteLocalRef (native_mprefix);
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (oper);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='EthernetSaveStaticConfig_Api' and count(parameter)=6 and parameter[1][@type='android.content.Context'] and parameter[2][@type='com.vanstone.appsdk.api.interfaces.IEthernetOperSer'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='java.lang.String']]"
		[Register ("EthernetSaveStaticConfig_Api", "(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void EthernetSaveStaticConfig_Api (global::Android.Content.Context? context, global::Com.Vanstone.Appsdk.Api.Interfaces.IEthernetOperSer? oper, string? mIpaddr, string? mDns, string? mGw, string? mprefix)
		{
			const string __id = "EthernetSaveStaticConfig_Api.(Landroid/content/Context;Lcom/vanstone/appsdk/api/interfaces/IEthernetOperSer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_mIpaddr = JNIEnv.NewString ((string?)mIpaddr);
			IntPtr native_mDns = JNIEnv.NewString ((string?)mDns);
			IntPtr native_mGw = JNIEnv.NewString ((string?)mGw);
			IntPtr native_mprefix = JNIEnv.NewString ((string?)mprefix);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((oper == null) ? IntPtr.Zero : ((global::Java.Lang.Object) oper).Handle);
				__args [2] = new JniArgumentValue (native_mIpaddr);
				__args [3] = new JniArgumentValue (native_mDns);
				__args [4] = new JniArgumentValue (native_mGw);
				__args [5] = new JniArgumentValue (native_mprefix);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_mIpaddr);
				JNIEnv.DeleteLocalRef (native_mDns);
				JNIEnv.DeleteLocalRef (native_mGw);
				JNIEnv.DeleteLocalRef (native_mprefix);
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (oper);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='InitComm_Api' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("InitComm_Api", "(Landroid/content/Context;)V", "")]
		public static unsafe void InitComm_Api (global::Android.Content.Context? context)
		{
			const string __id = "InitComm_Api.(Landroid/content/Context;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='PreDial_Api' and count(parameter)=0]"
		[Register ("PreDial_Api", "()V", "")]
		public static unsafe void PreDial_Api ()
		{
			const string __id = "PreDial_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='SendModemCfgEx' and count(parameter)=0]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("SendModemCfgEx", "()V", "")]
		public static unsafe void SendModemCfgEx ()
		{
			const string __id = "SendModemCfgEx.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='SslGetVer_Api' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("SslGetVer_Api", "([B)V", "")]
		public static unsafe void SslGetVer_Api (byte[]? verBuf)
		{
			const string __id = "SslGetVer_Api.([B)V";
			IntPtr native_verBuf = JNIEnv.NewArray (verBuf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_verBuf);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (verBuf != null) {
					JNIEnv.CopyArray (native_verBuf, verBuf);
					JNIEnv.DeleteLocalRef (native_verBuf);
				}
				global::System.GC.KeepAlive (verBuf);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='SslSaveCertBuf_Api' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='byte[]'] and parameter[4][@type='int']]"
		[Register ("SslSaveCertBuf_Api", "(II[BI)I", "")]
		public static unsafe int SslSaveCertBuf_Api (int CertIndex, int CertLabel, byte[]? CertBuf, int BufLen)
		{
			const string __id = "SslSaveCertBuf_Api.(II[BI)I";
			IntPtr native_CertBuf = JNIEnv.NewArray (CertBuf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (CertIndex);
				__args [1] = new JniArgumentValue (CertLabel);
				__args [2] = new JniArgumentValue (native_CertBuf);
				__args [3] = new JniArgumentValue (BufLen);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (CertBuf != null) {
					JNIEnv.CopyArray (native_CertBuf, CertBuf);
					JNIEnv.DeleteLocalRef (native_CertBuf);
				}
				global::System.GC.KeepAlive (CertBuf);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='SslSelCerts_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("SslSelCerts_Api", "(II)I", "")]
		public static unsafe int SslSelCerts_Api (int CertIndx, int CertLabelS)
		{
			const string __id = "SslSelCerts_Api.(II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (CertIndx);
				__args [1] = new JniArgumentValue (CertLabelS);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='Wls_BlueConnect' and count(parameter)=0]"
		[Register ("Wls_BlueConnect", "()I", "")]
		public static unsafe int Wls_BlueConnect ()
		{
			const string __id = "Wls_BlueConnect.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='Wls_BluetoothRecv' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='byte[]'] and parameter[3][@type='int']]"
		[Register ("Wls_BluetoothRecv", "([B[BI)I", "")]
		public static unsafe int Wls_BluetoothRecv (byte[]? RevBuff, byte[]? RevLen, int TimeOut)
		{
			const string __id = "Wls_BluetoothRecv.([B[BI)I";
			IntPtr native_RevBuff = JNIEnv.NewArray (RevBuff);
			IntPtr native_RevLen = JNIEnv.NewArray (RevLen);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_RevBuff);
				__args [1] = new JniArgumentValue (native_RevLen);
				__args [2] = new JniArgumentValue (TimeOut);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (RevBuff != null) {
					JNIEnv.CopyArray (native_RevBuff, RevBuff);
					JNIEnv.DeleteLocalRef (native_RevBuff);
				}
				if (RevLen != null) {
					JNIEnv.CopyArray (native_RevLen, RevLen);
					JNIEnv.DeleteLocalRef (native_RevLen);
				}
				global::System.GC.KeepAlive (RevBuff);
				global::System.GC.KeepAlive (RevLen);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='Wls_BluetoothSend' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("Wls_BluetoothSend", "([BII)I", "")]
		public static unsafe int Wls_BluetoothSend (byte[]? SendBuffer, int Send_Len, int Mode)
		{
			const string __id = "Wls_BluetoothSend.([BII)I";
			IntPtr native_SendBuffer = JNIEnv.NewArray (SendBuffer);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_SendBuffer);
				__args [1] = new JniArgumentValue (Send_Len);
				__args [2] = new JniArgumentValue (Mode);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (SendBuffer != null) {
					JNIEnv.CopyArray (native_SendBuffer, SendBuffer);
					JNIEnv.DeleteLocalRef (native_SendBuffer);
				}
				global::System.GC.KeepAlive (SendBuffer);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='addApn' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.content.ContentValues'] and parameter[3][@type='com.vanstone.trans.api.CommApi.IAPNOper']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("addApn", "(Landroid/content/Context;Landroid/content/ContentValues;Lcom/vanstone/trans/api/CommApi$IAPNOper;)V", "")]
		public static unsafe void AddApn (global::Android.Content.Context? context, global::Android.Content.ContentValues? values, global::Com.Vanstone.Trans.Api.CommApi.IAPNOper? oper)
		{
			const string __id = "addApn.(Landroid/content/Context;Landroid/content/ContentValues;Lcom/vanstone/trans/api/CommApi$IAPNOper;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((values == null) ? IntPtr.Zero : ((global::Java.Lang.Object) values).Handle);
				__args [2] = new JniArgumentValue ((oper == null) ? IntPtr.Zero : ((global::Java.Lang.Object) oper).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (values);
				global::System.GC.KeepAlive (oper);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='addApn_Api' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='android.content.ContentValues'] and parameter[3][@type='com.vanstone.trans.api.CommApi.IAPNOper']]"
		[Register ("addApn_Api", "(Landroid/content/Context;Landroid/content/ContentValues;Lcom/vanstone/trans/api/CommApi$IAPNOper;)V", "")]
		public static unsafe void AddApn_Api (global::Android.Content.Context? context, global::Android.Content.ContentValues? values, global::Com.Vanstone.Trans.Api.CommApi.IAPNOper? oper)
		{
			const string __id = "addApn_Api.(Landroid/content/Context;Landroid/content/ContentValues;Lcom/vanstone/trans/api/CommApi$IAPNOper;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((values == null) ? IntPtr.Zero : ((global::Java.Lang.Object) values).Handle);
				__args [2] = new JniArgumentValue ((oper == null) ? IntPtr.Zero : ((global::Java.Lang.Object) oper).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (values);
				global::System.GC.KeepAlive (oper);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='getGprsAPNId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("getGprsAPNId", "(Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string? GetGprsAPNId (string? ApnName)
		{
			const string __id = "getGprsAPNId.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_ApnName = JNIEnv.NewString ((string?)ApnName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_ApnName);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_ApnName);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='initWlsComm' and count(parameter)=0]"
		[Register ("initWlsComm", "()V", "")]
		public static unsafe void InitWlsComm ()
		{
			const string __id = "initWlsComm.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='openGPRS' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='boolean']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("openGPRS", "(Landroid/content/Context;Z)V", "")]
		public static unsafe void OpenGPRS (global::Android.Content.Context? context, bool oper)
		{
			const string __id = "openGPRS.(Landroid/content/Context;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue (oper);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='openGPRS_Api' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='boolean']]"
		[Register ("openGPRS_Api", "(Landroid/content/Context;Z)V", "")]
		public static unsafe void OpenGPRS_Api (global::Android.Content.Context? context, bool oper)
		{
			const string __id = "openGPRS_Api.(Landroid/content/Context;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue (oper);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='setCurComm' and count(parameter)=0]"
		[Register ("setCurComm", "()V", "")]
		public static unsafe void SetCurComm ()
		{
			const string __id = "setCurComm.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='CommApi']/method[@name='setSSLcert' and count(parameter)=1 and parameter[1][@type='com.vanstone.trans.api.CommApi.CertInfo']]"
		[Register ("setSSLcert", "(Lcom/vanstone/trans/api/CommApi$CertInfo;)V", "")]
		public static unsafe void SetSSLcert (global::Com.Vanstone.Trans.Api.CommApi.CertInfo? cert)
		{
			const string __id = "setSSLcert.(Lcom/vanstone/trans/api/CommApi$CertInfo;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((cert == null) ? IntPtr.Zero : ((global::Java.Lang.Object) cert).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (cert);
			}
		}

	}
}
