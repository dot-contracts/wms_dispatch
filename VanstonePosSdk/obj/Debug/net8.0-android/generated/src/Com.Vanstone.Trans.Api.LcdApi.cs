//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/LcdApi", DoNotGenerateAcw=true)]
	public partial class LcdApi : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/LcdApi", typeof (LcdApi));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected LcdApi (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/constructor[@name='LcdApi' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe LcdApi () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		[global::System.Obsolete (@"deprecated")]
		public static unsafe int CurFontWidth {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='GetCurFontWidth' and count(parameter)=0]"
			[Register ("GetCurFontWidth", "()I", "")]
			get {
				const string __id = "GetCurFontWidth.()I";
				try {
					var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		[global::System.Obsolete (@"deprecated")]
		public static unsafe int MaxCharShowInLine {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='GetMaxCharShowInLine' and count(parameter)=0]"
			[Register ("GetMaxCharShowInLine", "()I", "")]
			get {
				const string __id = "GetMaxCharShowInLine.()I";
				try {
					var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		[global::System.Obsolete (@"deprecated")]
		public static unsafe int RowHeight {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='GetRowHeight' and count(parameter)=0]"
			[Register ("GetRowHeight", "()I", "")]
			get {
				const string __id = "GetRowHeight.()I";
				try {
					var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='DispTitleLib' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("DispTitleLib", "(Ljava/lang/String;)V", "")]
		public static unsafe void DispTitleLib (string? Title)
		{
			const string __id = "DispTitleLib.(Ljava/lang/String;)V";
			IntPtr native_Title = JNIEnv.NewString ((string?)Title);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_Title);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_Title);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='DrawButton_Api' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int'] and parameter[5][@type='int']]"
		[Register ("DrawButton_Api", "(IILjava/lang/String;II)V", "")]
		public static unsafe void DrawButton_Api (int row, int col, string? str, int keyCode, int atr)
		{
			const string __id = "DrawButton_Api.(IILjava/lang/String;II)V";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue (native_str);
				__args [3] = new JniArgumentValue (keyCode);
				__args [4] = new JniArgumentValue (atr);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='DrawLineRam' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='byte[]'] and parameter[4][@type='int']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("DrawLineRam", "(II[BI)V", "")]
		public static unsafe void DrawLineRam (int row, int col, byte[]? str, int atr)
		{
			const string __id = "DrawLineRam.(II[BI)V";
			IntPtr native_str = JNIEnv.NewArray (str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue (native_str);
				__args [3] = new JniArgumentValue (atr);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (str != null) {
					JNIEnv.CopyArray (native_str, str);
					JNIEnv.DeleteLocalRef (native_str);
				}
				global::System.GC.KeepAlive (str);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='DrawProgressBar_Api' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("DrawProgressBar_Api", "(IIII)V", "")]
		public static unsafe void DrawProgressBar_Api (int row, int col, int atr, int barStyle)
		{
			const string __id = "DrawProgressBar_Api.(IIII)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue (atr);
				__args [3] = new JniArgumentValue (barStyle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='DrawRadioButton_Api' and count(parameter)=9 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='java.lang.String[]'] and parameter[6][@type='int[]'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='int']]"
		[Register ("DrawRadioButton_Api", "(IIII[Ljava/lang/String;[IIII)V", "")]
		public static unsafe void DrawRadioButton_Api (int row, int col, int width, int height, string[]? text, int[]? value, int atr, int isCheck, int orientation)
		{
			const string __id = "DrawRadioButton_Api.(IIII[Ljava/lang/String;[IIII)V";
			IntPtr native_text = JNIEnv.NewArray (text);
			IntPtr native_value = JNIEnv.NewArray (value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [9];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue (width);
				__args [3] = new JniArgumentValue (height);
				__args [4] = new JniArgumentValue (native_text);
				__args [5] = new JniArgumentValue (native_value);
				__args [6] = new JniArgumentValue (atr);
				__args [7] = new JniArgumentValue (isCheck);
				__args [8] = new JniArgumentValue (orientation);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (text != null) {
					JNIEnv.CopyArray (native_text, text);
					JNIEnv.DeleteLocalRef (native_text);
				}
				if (value != null) {
					JNIEnv.CopyArray (native_value, value);
					JNIEnv.DeleteLocalRef (native_value);
				}
				global::System.GC.KeepAlive (text);
				global::System.GC.KeepAlive (value);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='DrawRect_Api' and count(parameter)=9 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='boolean']]"
		[Register ("DrawRect_Api", "(IIIIIIIIZ)V", "")]
		public static unsafe void DrawRect_Api (int row, int col, int width, int height, int maxlen, int minlen, int textStyle, int atr, bool linesFlag)
		{
			const string __id = "DrawRect_Api.(IIIIIIIIZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [9];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue (width);
				__args [3] = new JniArgumentValue (height);
				__args [4] = new JniArgumentValue (maxlen);
				__args [5] = new JniArgumentValue (minlen);
				__args [6] = new JniArgumentValue (textStyle);
				__args [7] = new JniArgumentValue (atr);
				__args [8] = new JniArgumentValue (linesFlag);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='DrawRect_Api' and count(parameter)=10 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int'] and parameter[6][@type='int'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='java.lang.String'] and parameter[10][@type='boolean']]"
		[Register ("DrawRect_Api", "(IIIIIIIILjava/lang/String;Z)V", "")]
		public static unsafe void DrawRect_Api (int row, int col, int width, int height, int maxlen, int minlen, int textStyle, int atr, string? defaultValue, bool linesFlag)
		{
			const string __id = "DrawRect_Api.(IIIIIIIILjava/lang/String;Z)V";
			IntPtr native_defaultValue = JNIEnv.NewString ((string?)defaultValue);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [10];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue (width);
				__args [3] = new JniArgumentValue (height);
				__args [4] = new JniArgumentValue (maxlen);
				__args [5] = new JniArgumentValue (minlen);
				__args [6] = new JniArgumentValue (textStyle);
				__args [7] = new JniArgumentValue (atr);
				__args [8] = new JniArgumentValue (native_defaultValue);
				__args [9] = new JniArgumentValue (linesFlag);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_defaultValue);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='DrawSpinner_Api' and count(parameter)=9 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='java.lang.String[]'] and parameter[6][@type='int[]'] and parameter[7][@type='int'] and parameter[8][@type='int'] and parameter[9][@type='int']]"
		[Register ("DrawSpinner_Api", "(IIII[Ljava/lang/String;[IIII)V", "")]
		public static unsafe void DrawSpinner_Api (int row, int col, int width, int height, string[]? text, int[]? value, int atr, int isCheck, int orientation)
		{
			const string __id = "DrawSpinner_Api.(IIII[Ljava/lang/String;[IIII)V";
			IntPtr native_text = JNIEnv.NewArray (text);
			IntPtr native_value = JNIEnv.NewArray (value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [9];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue (width);
				__args [3] = new JniArgumentValue (height);
				__args [4] = new JniArgumentValue (native_text);
				__args [5] = new JniArgumentValue (native_value);
				__args [6] = new JniArgumentValue (atr);
				__args [7] = new JniArgumentValue (isCheck);
				__args [8] = new JniArgumentValue (orientation);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (text != null) {
					JNIEnv.CopyArray (native_text, text);
					JNIEnv.DeleteLocalRef (native_text);
				}
				if (value != null) {
					JNIEnv.CopyArray (native_value, value);
					JNIEnv.DeleteLocalRef (native_value);
				}
				global::System.GC.KeepAlive (text);
				global::System.GC.KeepAlive (value);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='GetLineEx' and count(parameter)=4 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='byte[]'] and parameter[4][@type='int']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("GetLineEx", "([BI[BI)I", "")]
		public static unsafe int GetLineEx (byte[]? lnBuf, int maxLen, byte[]? pData, int dataLen)
		{
			const string __id = "GetLineEx.([BI[BI)I";
			IntPtr native_lnBuf = JNIEnv.NewArray (lnBuf);
			IntPtr native_pData = JNIEnv.NewArray (pData);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_lnBuf);
				__args [1] = new JniArgumentValue (maxLen);
				__args [2] = new JniArgumentValue (native_pData);
				__args [3] = new JniArgumentValue (dataLen);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (lnBuf != null) {
					JNIEnv.CopyArray (native_lnBuf, lnBuf);
					JNIEnv.DeleteLocalRef (native_lnBuf);
				}
				if (pData != null) {
					JNIEnv.CopyArray (native_pData, pData);
					JNIEnv.DeleteLocalRef (native_pData);
				}
				global::System.GC.KeepAlive (lnBuf);
				global::System.GC.KeepAlive (pData);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='LcdInit' and count(parameter)=1 and parameter[1][@type='android.app.Activity']]"
		[Register ("LcdInit", "(Landroid/app/Activity;)V", "")]
		public static unsafe void LcdInit (global::Android.App.Activity? context)
		{
			const string __id = "LcdInit.(Landroid/app/Activity;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='LedLightOff_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("LedLightOff_Api", "(I)I", "")]
		public static unsafe int LedLightOff_Api (int index)
		{
			const string __id = "LedLightOff_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (index);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='LedLightOn_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("LedLightOn_Api", "(I)I", "")]
		public static unsafe int LedLightOn_Api (int index)
		{
			const string __id = "LedLightOn_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (index);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='LedOper_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("LedOper_Api", "(II)I", "")]
		public static unsafe int LedOper_Api (int index, int oper)
		{
			const string __id = "LedOper_Api.(II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (index);
				__args [1] = new JniArgumentValue (oper);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='Led_GetStatus_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("Led_GetStatus_Api", "(I)Z", "")]
		public static unsafe bool Led_GetStatus_Api (int index)
		{
			const string __id = "Led_GetStatus_Api.(I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (index);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrBackLight_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ScrBackLight_Api", "(I)V", "")]
		public static unsafe void ScrBackLight_Api (int Time)
		{
			const string __id = "ScrBackLight_Api.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (Time);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrBrush_Api' and count(parameter)=0]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ScrBrush_Api", "()V", "")]
		public static unsafe void ScrBrush_Api ()
		{
			const string __id = "ScrBrush_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrClrLineRam_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ScrClrLineRam_Api", "(II)V", "")]
		public static unsafe void ScrClrLineRam_Api (int ucStartLine, int ucEndLine)
		{
			const string __id = "ScrClrLineRam_Api.(II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (ucStartLine);
				__args [1] = new JniArgumentValue (ucEndLine);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrClrLine_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("ScrClrLine_Api", "(II)V", "")]
		public static unsafe void ScrClrLine_Api (int ucStartLine, int ucEndLine)
		{
			const string __id = "ScrClrLine_Api.(II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (ucStartLine);
				__args [1] = new JniArgumentValue (ucEndLine);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrClsRam_Api' and count(parameter)=0]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ScrClsRam_Api", "()V", "")]
		public static unsafe void ScrClsRam_Api ()
		{
			const string __id = "ScrClsRam_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrCls_Api' and count(parameter)=0]"
		[Register ("ScrCls_Api", "()V", "")]
		public static unsafe void ScrCls_Api ()
		{
			const string __id = "ScrCls_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrDispRam_Api' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='byte[]'] and parameter[4][@type='int']]"
		[Register ("ScrDispRam_Api", "(II[BI)V", "")]
		public static unsafe void ScrDispRam_Api (int row, int col, byte[]? str, int atr)
		{
			const string __id = "ScrDispRam_Api.(II[BI)V";
			IntPtr native_str = JNIEnv.NewArray (str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue (native_str);
				__args [3] = new JniArgumentValue (atr);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (str != null) {
					JNIEnv.CopyArray (native_str, str);
					JNIEnv.DeleteLocalRef (native_str);
				}
				global::System.GC.KeepAlive (str);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrDispRam_Api' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int']]"
		[Register ("ScrDispRam_Api", "(IILjava/lang/String;I)V", "")]
		public static unsafe void ScrDispRam_Api (int row, int col, string? str, int atr)
		{
			const string __id = "ScrDispRam_Api.(IILjava/lang/String;I)V";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue (native_str);
				__args [3] = new JniArgumentValue (atr);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrDisp_Api' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='byte[]'] and parameter[4][@type='int']]"
		[Register ("ScrDisp_Api", "(II[BI)V", "")]
		public static unsafe void ScrDisp_Api (int row, int col, byte[]? buf, int atr)
		{
			const string __id = "ScrDisp_Api.(II[BI)V";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue (native_buf);
				__args [3] = new JniArgumentValue (atr);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrDisp_Api' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int']]"
		[Register ("ScrDisp_Api", "(IILjava/lang/String;I)V", "")]
		public static unsafe void ScrDisp_Api (int row, int col, string? str, int atr)
		{
			const string __id = "ScrDisp_Api.(IILjava/lang/String;I)V";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue (native_str);
				__args [3] = new JniArgumentValue (atr);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrDrLogoxyRam_Api' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='byte[]']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ScrDrLogoxyRam_Api", "(IIII[B)V", "")]
		public static unsafe void ScrDrLogoxyRam_Api (int LogoWighX, int LogoHightY, int StartX, int StartY, byte[]? Logo)
		{
			const string __id = "ScrDrLogoxyRam_Api.(IIII[B)V";
			IntPtr native_Logo = JNIEnv.NewArray (Logo);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (LogoWighX);
				__args [1] = new JniArgumentValue (LogoHightY);
				__args [2] = new JniArgumentValue (StartX);
				__args [3] = new JniArgumentValue (StartY);
				__args [4] = new JniArgumentValue (native_Logo);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (Logo != null) {
					JNIEnv.CopyArray (native_Logo, Logo);
					JNIEnv.DeleteLocalRef (native_Logo);
				}
				global::System.GC.KeepAlive (Logo);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrDrLogoxy_Api' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='byte[]']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ScrDrLogoxy_Api", "(IIII[B)V", "")]
		public static unsafe void ScrDrLogoxy_Api (int LogoWighX, int LogoHightY, int StartX, int StartY, byte[]? Logo)
		{
			const string __id = "ScrDrLogoxy_Api.(IIII[B)V";
			IntPtr native_Logo = JNIEnv.NewArray (Logo);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (LogoWighX);
				__args [1] = new JniArgumentValue (LogoHightY);
				__args [2] = new JniArgumentValue (StartX);
				__args [3] = new JniArgumentValue (StartY);
				__args [4] = new JniArgumentValue (native_Logo);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (Logo != null) {
					JNIEnv.CopyArray (native_Logo, Logo);
					JNIEnv.DeleteLocalRef (native_Logo);
				}
				global::System.GC.KeepAlive (Logo);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrDrawLineRam_Api' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ScrDrawLineRam_Api", "(IIIII)V", "")]
		public static unsafe void ScrDrawLineRam_Api (int x1, int y1, int x2, int y2, int color)
		{
			const string __id = "ScrDrawLineRam_Api.(IIIII)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (x1);
				__args [1] = new JniArgumentValue (y1);
				__args [2] = new JniArgumentValue (x2);
				__args [3] = new JniArgumentValue (y2);
				__args [4] = new JniArgumentValue (color);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrDrawLine_Api' and count(parameter)=5 and parameter[1][@type='short'] and parameter[2][@type='short'] and parameter[3][@type='short'] and parameter[4][@type='short'] and parameter[5][@type='short']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ScrDrawLine_Api", "(SSSSS)V", "")]
		public static unsafe void ScrDrawLine_Api (short x1, short y1, short x2, short y2, short color)
		{
			const string __id = "ScrDrawLine_Api.(SSSSS)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (x1);
				__args [1] = new JniArgumentValue (y1);
				__args [2] = new JniArgumentValue (x2);
				__args [3] = new JniArgumentValue (y2);
				__args [4] = new JniArgumentValue (color);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrFontSet_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ScrFontSet_Api", "(I)V", "")]
		public static unsafe void ScrFontSet_Api (int FontSize)
		{
			const string __id = "ScrFontSet_Api.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (FontSize);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrGray_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ScrGray_Api", "(I)V", "")]
		public static unsafe void ScrGray_Api (int Mode)
		{
			const string __id = "ScrGray_Api.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (Mode);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrPlotRam_Api' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ScrPlotRam_Api", "(III)V", "")]
		public static unsafe void ScrPlotRam_Api (int X, int Y, int Color)
		{
			const string __id = "ScrPlotRam_Api.(III)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (X);
				__args [1] = new JniArgumentValue (Y);
				__args [2] = new JniArgumentValue (Color);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ScrPlot_Api' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[global::System.Obsolete (@"deprecated")]
		[Register ("ScrPlot_Api", "(III)V", "")]
		public static unsafe void ScrPlot_Api (int X, int Y, int Color)
		{
			const string __id = "ScrPlot_Api.(III)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (X);
				__args [1] = new JniArgumentValue (Y);
				__args [2] = new JniArgumentValue (Color);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ShowPassWd' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='com.vanstone.trans.api.KeyListener'] and parameter[4][@type='java.lang.String']]"
		[Register ("ShowPassWd", "(IILcom/vanstone/trans/api/KeyListener;Ljava/lang/String;)V", "")]
		public static unsafe void ShowPassWd (int row, int col, global::Com.Vanstone.Trans.Api.KeyListener? keyListener, string? amt)
		{
			const string __id = "ShowPassWd.(IILcom/vanstone/trans/api/KeyListener;Ljava/lang/String;)V";
			IntPtr native_amt = JNIEnv.NewString ((string?)amt);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue ((keyListener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) keyListener).Handle);
				__args [3] = new JniArgumentValue (native_amt);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_amt);
				global::System.GC.KeepAlive (keyListener);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='ShowQrCode_Api' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='byte[]'] and parameter[4][@type='int']]"
		[Register ("ShowQrCode_Api", "(II[BI)V", "")]
		public static unsafe void ShowQrCode_Api (int row, int col, byte[]? buf, int atr)
		{
			const string __id = "ShowQrCode_Api.(II[BI)V";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue (native_buf);
				__args [3] = new JniArgumentValue (atr);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='TextBoxSameRandom_Api' and count(parameter)=0]"
		[Register ("TextBoxSameRandom_Api", "()V", "")]
		public static unsafe void TextBoxSameRandom_Api ()
		{
			const string __id = "TextBoxSameRandom_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdApi']/method[@name='delRepeatRow' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("delRepeatRow", "(II)V", "")]
		public static unsafe void DelRepeatRow (int row, int style)
		{
			const string __id = "delRepeatRow.(II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (style);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

	}
}
