//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Utils {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']"
	[global::Android.Runtime.Register ("com/vanstone/utils/ShowMulline", DoNotGenerateAcw=true)]
	public partial class ShowMulline : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']/field[@name='str']"
		[Register ("str")]
		public IList<byte>? Str {
			get {
				const string __id = "str.[B";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Android.Runtime.JavaArray<byte>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "str.[B";

				IntPtr native_value = global::Android.Runtime.JavaArray<byte>.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']/field[@name='strs']"
		[Register ("strs")]
		public IList<byte>? Strs {
			get {
				const string __id = "strs.[B";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Android.Runtime.JavaArray<byte>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "strs.[B";

				IntPtr native_value = global::Android.Runtime.JavaArray<byte>.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/ShowMulline", typeof (ShowMulline));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ShowMulline (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']/constructor[@name='ShowMulline' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe ShowMulline () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getAtr;
#pragma warning disable 0169
		static Delegate GetGetAtrHandler ()
		{
			if (cb_getAtr == null)
				cb_getAtr = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetAtr));
			return cb_getAtr;
		}

		static int n_GetAtr (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.ShowMulline> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Atr;
		}
#pragma warning restore 0169

		static Delegate? cb_setAtr_I;
#pragma warning disable 0169
		static Delegate GetSetAtr_IHandler ()
		{
			if (cb_setAtr_I == null)
				cb_setAtr_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetAtr_I));
			return cb_setAtr_I;
		}

		static void n_SetAtr_I (IntPtr jnienv, IntPtr native__this, int atr)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.ShowMulline> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Atr = atr;
		}
#pragma warning restore 0169

		public virtual unsafe int Atr {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']/method[@name='getAtr' and count(parameter)=0]"
			[Register ("getAtr", "()I", "GetGetAtrHandler")]
			get {
				const string __id = "getAtr.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']/method[@name='setAtr' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setAtr", "(I)V", "GetSetAtr_IHandler")]
			set {
				const string __id = "setAtr.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getCol;
#pragma warning disable 0169
		static Delegate GetGetColHandler ()
		{
			if (cb_getCol == null)
				cb_getCol = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetCol));
			return cb_getCol;
		}

		static int n_GetCol (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.ShowMulline> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Col;
		}
#pragma warning restore 0169

		static Delegate? cb_setCol_I;
#pragma warning disable 0169
		static Delegate GetSetCol_IHandler ()
		{
			if (cb_setCol_I == null)
				cb_setCol_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetCol_I));
			return cb_setCol_I;
		}

		static void n_SetCol_I (IntPtr jnienv, IntPtr native__this, int col)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.ShowMulline> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Col = col;
		}
#pragma warning restore 0169

		public virtual unsafe int Col {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']/method[@name='getCol' and count(parameter)=0]"
			[Register ("getCol", "()I", "GetGetColHandler")]
			get {
				const string __id = "getCol.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']/method[@name='setCol' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setCol", "(I)V", "GetSetCol_IHandler")]
			set {
				const string __id = "setCol.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getRow;
#pragma warning disable 0169
		static Delegate GetGetRowHandler ()
		{
			if (cb_getRow == null)
				cb_getRow = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetRow));
			return cb_getRow;
		}

		static int n_GetRow (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.ShowMulline> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Row;
		}
#pragma warning restore 0169

		static Delegate? cb_setRow_I;
#pragma warning disable 0169
		static Delegate GetSetRow_IHandler ()
		{
			if (cb_setRow_I == null)
				cb_setRow_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetRow_I));
			return cb_setRow_I;
		}

		static void n_SetRow_I (IntPtr jnienv, IntPtr native__this, int row)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.ShowMulline> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Row = row;
		}
#pragma warning restore 0169

		public virtual unsafe int Row {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']/method[@name='getRow' and count(parameter)=0]"
			[Register ("getRow", "()I", "GetGetRowHandler")]
			get {
				const string __id = "getRow.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']/method[@name='setRow' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setRow", "(I)V", "GetSetRow_IHandler")]
			set {
				const string __id = "setRow.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getSize;
#pragma warning disable 0169
		static Delegate GetGetSizeHandler ()
		{
			if (cb_getSize == null)
				cb_getSize = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetSize));
			return cb_getSize;
		}

		static int n_GetSize (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.ShowMulline> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Size;
		}
#pragma warning restore 0169

		public virtual unsafe int Size {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']/method[@name='getSize' and count(parameter)=0]"
			[Register ("getSize", "()I", "GetGetSizeHandler")]
			get {
				const string __id = "getSize.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_getDatas;
#pragma warning disable 0169
		static Delegate GetGetDatasHandler ()
		{
			if (cb_getDatas == null)
				cb_getDatas = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetDatas));
			return cb_getDatas;
		}

		static IntPtr n_GetDatas (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.ShowMulline> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetDatas ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']/method[@name='getDatas' and count(parameter)=0]"
		[Register ("getDatas", "()[B", "GetGetDatasHandler")]
		public virtual unsafe byte[]? GetDatas ()
		{
			const string __id = "getDatas.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_getStr;
#pragma warning disable 0169
		static Delegate GetGetStrHandler ()
		{
			if (cb_getStr == null)
				cb_getStr = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetStr));
			return cb_getStr;
		}

		static IntPtr n_GetStr (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.ShowMulline> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetStr ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']/method[@name='getStr' and count(parameter)=0]"
		[Register ("getStr", "()[B", "GetGetStrHandler")]
		public virtual unsafe byte[]? GetStr ()
		{
			const string __id = "getStr.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_setStr_arrayB;
#pragma warning disable 0169
		static Delegate GetSetStr_arrayBHandler ()
		{
			if (cb_setStr_arrayB == null)
				cb_setStr_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetStr_arrayB));
			return cb_setStr_arrayB;
		}

		static void n_SetStr_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_str)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Utils.ShowMulline> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var str = (byte[]?) JNIEnv.GetArray (native_str, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetStr (str);
			if (str != null)
				JNIEnv.CopyArray (str, native_str);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='ShowMulline']/method[@name='setStr' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setStr", "([B)V", "GetSetStr_arrayBHandler")]
		public virtual unsafe void SetStr (byte[]? str)
		{
			const string __id = "setStr.([B)V";
			IntPtr native_str = JNIEnv.NewArray (str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_str);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (str != null) {
					JNIEnv.CopyArray (native_str, str);
					JNIEnv.DeleteLocalRef (native_str);
				}
				global::System.GC.KeepAlive (str);
			}
		}

	}
}
