//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/LcdExApi", DoNotGenerateAcw=true)]
	public partial class LcdExApi : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/LcdExApi", typeof (LcdExApi));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected LcdExApi (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/constructor[@name='LcdExApi' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe LcdExApi () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='BeefEx_Api' and count(parameter)=2 and parameter[1][@type='char'] and parameter[2][@type='short']]"
		[Register ("BeefEx_Api", "(CS)V", "")]
		public static unsafe void BeefEx_Api (char ucMode, short DlyTime)
		{
			const string __id = "BeefEx_Api.(CS)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (ucMode);
				__args [1] = new JniArgumentValue (DlyTime);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='KBMuteEx_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("KBMuteEx_Api", "(I)V", "")]
		public static unsafe void KBMuteEx_Api (int flag)
		{
			const string __id = "KBMuteEx_Api.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (flag);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='LedLightOffEx_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("LedLightOffEx_Api", "(I)I", "")]
		public static unsafe int LedLightOffEx_Api (int LedNum)
		{
			const string __id = "LedLightOffEx_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (LedNum);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='LedLightOnEx_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("LedLightOnEx_Api", "(I)I", "")]
		public static unsafe int LedLightOnEx_Api (int LedNum)
		{
			const string __id = "LedLightOnEx_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (LedNum);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='ScrBackLightEx_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("ScrBackLightEx_Api", "(I)V", "")]
		public static unsafe void ScrBackLightEx_Api (int Time)
		{
			const string __id = "ScrBackLightEx_Api.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (Time);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='ScrBrushEx_Api' and count(parameter)=0]"
		[Register ("ScrBrushEx_Api", "()V", "")]
		public static unsafe void ScrBrushEx_Api ()
		{
			const string __id = "ScrBrushEx_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='ScrClrLineEx_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("ScrClrLineEx_Api", "(II)V", "")]
		public static unsafe void ScrClrLineEx_Api (int startline, int endline)
		{
			const string __id = "ScrClrLineEx_Api.(II)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (startline);
				__args [1] = new JniArgumentValue (endline);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='ScrClsEx_Api' and count(parameter)=0]"
		[Register ("ScrClsEx_Api", "()V", "")]
		public static unsafe void ScrClsEx_Api ()
		{
			const string __id = "ScrClsEx_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='ScrDispEx_Api' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int']]"
		[Register ("ScrDispEx_Api", "(IILjava/lang/String;I)V", "")]
		public static unsafe void ScrDispEx_Api (int row, int col, string? str, int atr)
		{
			const string __id = "ScrDispEx_Api.(IILjava/lang/String;I)V";
			IntPtr native_str = JNIEnv.NewString ((string?)str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (row);
				__args [1] = new JniArgumentValue (col);
				__args [2] = new JniArgumentValue (native_str);
				__args [3] = new JniArgumentValue (atr);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='ScrDispSetEx_Api' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("ScrDispSetEx_Api", "(ILjava/lang/String;Ljava/lang/String;)I", "")]
		public static unsafe int ScrDispSetEx_Api (int Mode, string? FileName, string? ShowBuf)
		{
			const string __id = "ScrDispSetEx_Api.(ILjava/lang/String;Ljava/lang/String;)I";
			IntPtr native_FileName = JNIEnv.NewString ((string?)FileName);
			IntPtr native_ShowBuf = JNIEnv.NewString ((string?)ShowBuf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (Mode);
				__args [1] = new JniArgumentValue (native_FileName);
				__args [2] = new JniArgumentValue (native_ShowBuf);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_FileName);
				JNIEnv.DeleteLocalRef (native_ShowBuf);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='ScrFontSetEx_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("ScrFontSetEx_Api", "(I)V", "")]
		public static unsafe void ScrFontSetEx_Api (int FontSize)
		{
			const string __id = "ScrFontSetEx_Api.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (FontSize);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='ScrFrameSetColorEx_Api' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("ScrFrameSetColorEx_Api", "(III)V", "")]
		public static unsafe void ScrFrameSetColorEx_Api (int OutFrmColor, int InFrmColor, int FontColor)
		{
			const string __id = "ScrFrameSetColorEx_Api.(III)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (OutFrmColor);
				__args [1] = new JniArgumentValue (InFrmColor);
				__args [2] = new JniArgumentValue (FontColor);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='ScrGrayEx_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("ScrGrayEx_Api", "(I)V", "")]
		public static unsafe void ScrGrayEx_Api (int Mode)
		{
			const string __id = "ScrGrayEx_Api.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (Mode);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='ScrPinpadFaceEx_Api' and count(parameter)=2 and parameter[1][@type='java.util.List&lt;com.vanstone.utils.PinpadFace&gt;'] and parameter[2][@type='int']]"
		[Register ("ScrPinpadFaceEx_Api", "(Ljava/util/List;I)I", "")]
		public static unsafe int ScrPinpadFaceEx_Api (global::System.Collections.Generic.IList<global::Com.Vanstone.Utils.PinpadFace>? Faces, int NumLine)
		{
			const string __id = "ScrPinpadFaceEx_Api.(Ljava/util/List;I)I";
			IntPtr native_Faces = global::Android.Runtime.JavaList<global::Com.Vanstone.Utils.PinpadFace>.ToLocalJniHandle (Faces);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_Faces);
				__args [1] = new JniArgumentValue (NumLine);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_Faces);
				global::System.GC.KeepAlive (Faces);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='ScrShowMulLineEx_Api' and count(parameter)=3 and parameter[1][@type='java.util.List&lt;com.vanstone.utils.ShowMulline&gt;'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("ScrShowMulLineEx_Api", "(Ljava/util/List;II)V", "")]
		public static unsafe void ScrShowMulLineEx_Api (global::System.Collections.Generic.IList<global::Com.Vanstone.Utils.ShowMulline>? str, int Num, int IsBrush)
		{
			const string __id = "ScrShowMulLineEx_Api.(Ljava/util/List;II)V";
			IntPtr native_str = global::Android.Runtime.JavaList<global::Com.Vanstone.Utils.ShowMulline>.ToLocalJniHandle (str);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_str);
				__args [1] = new JniArgumentValue (Num);
				__args [2] = new JniArgumentValue (IsBrush);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_str);
				global::System.GC.KeepAlive (str);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='ShowBmpFileEx_Api' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("ShowBmpFileEx_Api", "(Ljava/lang/String;II)I", "")]
		public static unsafe int ShowBmpFileEx_Api (string? FileName, int xPos, int yPos)
		{
			const string __id = "ShowBmpFileEx_Api.(Ljava/lang/String;II)I";
			IntPtr native_FileName = JNIEnv.NewString ((string?)FileName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_FileName);
				__args [1] = new JniArgumentValue (xPos);
				__args [2] = new JniArgumentValue (yPos);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_FileName);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='LcdExApi']/method[@name='WaitEnterAndEscKeyEx_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("WaitEnterAndEscKeyEx_Api", "(I)I", "")]
		public static unsafe int WaitEnterAndEscKeyEx_Api (int TimeOut)
		{
			const string __id = "WaitEnterAndEscKeyEx_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (TimeOut);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

	}
}
