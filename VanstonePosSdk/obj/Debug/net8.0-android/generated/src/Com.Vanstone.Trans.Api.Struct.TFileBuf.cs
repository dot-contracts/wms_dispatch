//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api.Struct {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/struct/TFileBuf", DoNotGenerateAcw=true)]
	public partial class TFileBuf : global::Java.Lang.Object, global::Com.Vanstone.Base.Interfaces.IStructInterface {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/struct/TFileBuf", typeof (TFileBuf));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected TFileBuf (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/constructor[@name='TFileBuf' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe TFileBuf () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getBufOffInFile;
#pragma warning disable 0169
		static Delegate GetGetBufOffInFileHandler ()
		{
			if (cb_getBufOffInFile == null)
				cb_getBufOffInFile = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetBufOffInFile));
			return cb_getBufOffInFile;
		}

		static int n_GetBufOffInFile (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.BufOffInFile;
		}
#pragma warning restore 0169

		static Delegate? cb_setBufOffInFile_I;
#pragma warning disable 0169
		static Delegate GetSetBufOffInFile_IHandler ()
		{
			if (cb_setBufOffInFile_I == null)
				cb_setBufOffInFile_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetBufOffInFile_I));
			return cb_setBufOffInFile_I;
		}

		static void n_SetBufOffInFile_I (IntPtr jnienv, IntPtr native__this, int bufOffInFile)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.BufOffInFile = bufOffInFile;
		}
#pragma warning restore 0169

		public virtual unsafe int BufOffInFile {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='getBufOffInFile' and count(parameter)=0]"
			[Register ("getBufOffInFile", "()I", "GetGetBufOffInFileHandler")]
			get {
				const string __id = "getBufOffInFile.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='setBufOffInFile' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setBufOffInFile", "(I)V", "GetSetBufOffInFile_IHandler")]
			set {
				const string __id = "setBufOffInFile.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getBytesInBuf;
#pragma warning disable 0169
		static Delegate GetGetBytesInBufHandler ()
		{
			if (cb_getBytesInBuf == null)
				cb_getBytesInBuf = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetBytesInBuf));
			return cb_getBytesInBuf;
		}

		static int n_GetBytesInBuf (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.BytesInBuf;
		}
#pragma warning restore 0169

		static Delegate? cb_setBytesInBuf_I;
#pragma warning disable 0169
		static Delegate GetSetBytesInBuf_IHandler ()
		{
			if (cb_setBytesInBuf_I == null)
				cb_setBytesInBuf_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetBytesInBuf_I));
			return cb_setBytesInBuf_I;
		}

		static void n_SetBytesInBuf_I (IntPtr jnienv, IntPtr native__this, int bytesInBuf)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.BytesInBuf = bytesInBuf;
		}
#pragma warning restore 0169

		public virtual unsafe int BytesInBuf {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='getBytesInBuf' and count(parameter)=0]"
			[Register ("getBytesInBuf", "()I", "GetGetBytesInBufHandler")]
			get {
				const string __id = "getBytesInBuf.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='setBytesInBuf' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setBytesInBuf", "(I)V", "GetSetBytesInBuf_IHandler")]
			set {
				const string __id = "setBytesInBuf.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getModifiedFlag;
#pragma warning disable 0169
		static Delegate GetGetModifiedFlagHandler ()
		{
			if (cb_getModifiedFlag == null)
				cb_getModifiedFlag = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_B (n_GetModifiedFlag));
			return cb_getModifiedFlag;
		}

		static sbyte n_GetModifiedFlag (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.ModifiedFlag;
		}
#pragma warning restore 0169

		static Delegate? cb_setModifiedFlag_B;
#pragma warning disable 0169
		static Delegate GetSetModifiedFlag_BHandler ()
		{
			if (cb_setModifiedFlag_B == null)
				cb_setModifiedFlag_B = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPB_V (n_SetModifiedFlag_B));
			return cb_setModifiedFlag_B;
		}

		static void n_SetModifiedFlag_B (IntPtr jnienv, IntPtr native__this, sbyte modifiedFlag)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.ModifiedFlag = modifiedFlag;
		}
#pragma warning restore 0169

		public virtual unsafe sbyte ModifiedFlag {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='getModifiedFlag' and count(parameter)=0]"
			[Register ("getModifiedFlag", "()B", "GetGetModifiedFlagHandler")]
			get {
				const string __id = "getModifiedFlag.()B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSByteMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='setModifiedFlag' and count(parameter)=1 and parameter[1][@type='byte']]"
			[Register ("setModifiedFlag", "(B)V", "GetSetModifiedFlag_BHandler")]
			set {
				const string __id = "setModifiedFlag.(B)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getRwOff;
#pragma warning disable 0169
		static Delegate GetGetRwOffHandler ()
		{
			if (cb_getRwOff == null)
				cb_getRwOff = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetRwOff));
			return cb_getRwOff;
		}

		static int n_GetRwOff (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.RwOff;
		}
#pragma warning restore 0169

		static Delegate? cb_setRwOff_I;
#pragma warning disable 0169
		static Delegate GetSetRwOff_IHandler ()
		{
			if (cb_setRwOff_I == null)
				cb_setRwOff_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetRwOff_I));
			return cb_setRwOff_I;
		}

		static void n_SetRwOff_I (IntPtr jnienv, IntPtr native__this, int rwOff)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.RwOff = rwOff;
		}
#pragma warning restore 0169

		public virtual unsafe int RwOff {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='getRwOff' and count(parameter)=0]"
			[Register ("getRwOff", "()I", "GetGetRwOffHandler")]
			get {
				const string __id = "getRwOff.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='setRwOff' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setRwOff", "(I)V", "GetSetRwOff_IHandler")]
			set {
				const string __id = "setRwOff.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getBuf;
#pragma warning disable 0169
		static Delegate GetGetBufHandler ()
		{
			if (cb_getBuf == null)
				cb_getBuf = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetBuf));
			return cb_getBuf;
		}

		static IntPtr n_GetBuf (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetBuf ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='getBuf' and count(parameter)=0]"
		[Register ("getBuf", "()[B", "GetGetBufHandler")]
		public virtual unsafe byte[]? GetBuf ()
		{
			const string __id = "getBuf.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_getFname;
#pragma warning disable 0169
		static Delegate GetGetFnameHandler ()
		{
			if (cb_getFname == null)
				cb_getFname = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetFname));
			return cb_getFname;
		}

		static IntPtr n_GetFname (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.GetFname ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='getFname' and count(parameter)=0]"
		[Register ("getFname", "()[B", "GetGetFnameHandler")]
		public virtual unsafe byte[]? GetFname ()
		{
			const string __id = "getFname.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		static Delegate? cb_setBuf_arrayB;
#pragma warning disable 0169
		static Delegate GetSetBuf_arrayBHandler ()
		{
			if (cb_setBuf_arrayB == null)
				cb_setBuf_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetBuf_arrayB));
			return cb_setBuf_arrayB;
		}

		static void n_SetBuf_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_buf)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var buf = (byte[]?) JNIEnv.GetArray (native_buf, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetBuf (buf);
			if (buf != null)
				JNIEnv.CopyArray (buf, native_buf);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='setBuf' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setBuf", "([B)V", "GetSetBuf_arrayBHandler")]
		public virtual unsafe void SetBuf (byte[]? buf)
		{
			const string __id = "setBuf.([B)V";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_buf);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		static Delegate? cb_setFname_arrayB;
#pragma warning disable 0169
		static Delegate GetSetFname_arrayBHandler ()
		{
			if (cb_setFname_arrayB == null)
				cb_setFname_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetFname_arrayB));
			return cb_setFname_arrayB;
		}

		static void n_SetFname_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_fname)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var fname = (byte[]?) JNIEnv.GetArray (native_fname, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.SetFname (fname);
			if (fname != null)
				JNIEnv.CopyArray (fname, native_fname);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='setFname' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("setFname", "([B)V", "GetSetFname_arrayBHandler")]
		public virtual unsafe void SetFname (byte[]? fname)
		{
			const string __id = "setFname.([B)V";
			IntPtr native_fname = JNIEnv.NewArray (fname);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_fname);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (fname != null) {
					JNIEnv.CopyArray (native_fname, fname);
					JNIEnv.DeleteLocalRef (native_fname);
				}
				global::System.GC.KeepAlive (fname);
			}
		}

		static Delegate? cb_size;
#pragma warning disable 0169
		static Delegate GetSizeHandler ()
		{
			if (cb_size == null)
				cb_size = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Size));
			return cb_size;
		}

		static int n_Size (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Size ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='size' and count(parameter)=0]"
		[Register ("size", "()I", "GetSizeHandler")]
		public virtual unsafe int Size ()
		{
			const string __id = "size.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_toBean_arrayB;
#pragma warning disable 0169
		static Delegate GetToBean_arrayBHandler ()
		{
			if (cb_toBean_arrayB == null)
				cb_toBean_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ToBean_arrayB));
			return cb_toBean_arrayB;
		}

		static void n_ToBean_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_buf)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var buf = (byte[]?) JNIEnv.GetArray (native_buf, JniHandleOwnership.DoNotTransfer, typeof (byte));
			__this.ToBean (buf);
			if (buf != null)
				JNIEnv.CopyArray (buf, native_buf);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='toBean' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("toBean", "([B)V", "GetToBean_arrayBHandler")]
		public virtual unsafe void ToBean (byte[]? buf)
		{
			const string __id = "toBean.([B)V";
			IntPtr native_buf = JNIEnv.NewArray (buf);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_buf);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (buf != null) {
					JNIEnv.CopyArray (native_buf, buf);
					JNIEnv.DeleteLocalRef (native_buf);
				}
				global::System.GC.KeepAlive (buf);
			}
		}

		static Delegate? cb_toBytes;
#pragma warning disable 0169
		static Delegate GetToBytesHandler ()
		{
			if (cb_toBytes == null)
				cb_toBytes = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToBytes));
			return cb_toBytes;
		}

		static IntPtr n_ToBytes (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.TFileBuf> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewArray (__this.ToBytes ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='TFileBuf']/method[@name='toBytes' and count(parameter)=0]"
		[Register ("toBytes", "()[B", "GetToBytesHandler")]
		public virtual unsafe byte[]? ToBytes ()
		{
			const string __id = "toBytes.()[B";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (byte[]?) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

	}
}
