//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Utils {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniUtils']"
	[global::Android.Runtime.Register ("com/vanstone/utils/IniUtils", DoNotGenerateAcw=true)]
	public partial class IniUtils : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/utils/IniUtils", typeof (IniUtils));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected IniUtils (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniUtils']/constructor[@name='IniUtils' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe IniUtils () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniUtils']/method[@name='getIniValue' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("getIniValue", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string? GetIniValue (string? path, string? sec, string? key)
		{
			const string __id = "getIniValue.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_path = JNIEnv.NewString ((string?)path);
			IntPtr native_sec = JNIEnv.NewString ((string?)sec);
			IntPtr native_key = JNIEnv.NewString ((string?)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_path);
				__args [1] = new JniArgumentValue (native_sec);
				__args [2] = new JniArgumentValue (native_key);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
				JNIEnv.DeleteLocalRef (native_sec);
				JNIEnv.DeleteLocalRef (native_key);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniUtils']/method[@name='getProfileString' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("getProfileString", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string? GetProfileString (string? file, string? section, string? variable, string? defaultValue)
		{
			const string __id = "getProfileString.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_file = JNIEnv.NewString ((string?)file);
			IntPtr native_section = JNIEnv.NewString ((string?)section);
			IntPtr native_variable = JNIEnv.NewString ((string?)variable);
			IntPtr native_defaultValue = JNIEnv.NewString ((string?)defaultValue);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_file);
				__args [1] = new JniArgumentValue (native_section);
				__args [2] = new JniArgumentValue (native_variable);
				__args [3] = new JniArgumentValue (native_defaultValue);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_file);
				JNIEnv.DeleteLocalRef (native_section);
				JNIEnv.DeleteLocalRef (native_variable);
				JNIEnv.DeleteLocalRef (native_defaultValue);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniUtils']/method[@name='getValue' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("getValue", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string? GetValue (string? file, string? section, string? variable, string? defaultValue)
		{
			const string __id = "getValue.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_file = JNIEnv.NewString ((string?)file);
			IntPtr native_section = JNIEnv.NewString ((string?)section);
			IntPtr native_variable = JNIEnv.NewString ((string?)variable);
			IntPtr native_defaultValue = JNIEnv.NewString ((string?)defaultValue);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_file);
				__args [1] = new JniArgumentValue (native_section);
				__args [2] = new JniArgumentValue (native_variable);
				__args [3] = new JniArgumentValue (native_defaultValue);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_file);
				JNIEnv.DeleteLocalRef (native_section);
				JNIEnv.DeleteLocalRef (native_variable);
				JNIEnv.DeleteLocalRef (native_defaultValue);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniUtils']/method[@name='load' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("load", "(Ljava/lang/String;)V", "")]
		public static unsafe void Load (string? iniFile)
		{
			const string __id = "load.(Ljava/lang/String;)V";
			IntPtr native_iniFile = JNIEnv.NewString ((string?)iniFile);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_iniFile);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_iniFile);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniUtils']/method[@name='setIniValue' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("setIniValue", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void SetIniValue (string? path, string? sec, string? key, string? value)
		{
			const string __id = "setIniValue.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_path = JNIEnv.NewString ((string?)path);
			IntPtr native_sec = JNIEnv.NewString ((string?)sec);
			IntPtr native_key = JNIEnv.NewString ((string?)key);
			IntPtr native_value = JNIEnv.NewString ((string?)value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_path);
				__args [1] = new JniArgumentValue (native_sec);
				__args [2] = new JniArgumentValue (native_key);
				__args [3] = new JniArgumentValue (native_value);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_path);
				JNIEnv.DeleteLocalRef (native_sec);
				JNIEnv.DeleteLocalRef (native_key);
				JNIEnv.DeleteLocalRef (native_value);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniUtils']/method[@name='setProfileString' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("setProfileString", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z", "")]
		public static unsafe bool SetProfileString (string? file, string? section, string? variable, string? value)
		{
			const string __id = "setProfileString.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native_file = JNIEnv.NewString ((string?)file);
			IntPtr native_section = JNIEnv.NewString ((string?)section);
			IntPtr native_variable = JNIEnv.NewString ((string?)variable);
			IntPtr native_value = JNIEnv.NewString ((string?)value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_file);
				__args [1] = new JniArgumentValue (native_section);
				__args [2] = new JniArgumentValue (native_variable);
				__args [3] = new JniArgumentValue (native_value);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_file);
				JNIEnv.DeleteLocalRef (native_section);
				JNIEnv.DeleteLocalRef (native_variable);
				JNIEnv.DeleteLocalRef (native_value);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.utils']/class[@name='IniUtils']/method[@name='setValue' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("setValue", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z", "")]
		public static unsafe bool SetValue (string? file, string? section, string? variable, string? value)
		{
			const string __id = "setValue.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native_file = JNIEnv.NewString ((string?)file);
			IntPtr native_section = JNIEnv.NewString ((string?)section);
			IntPtr native_variable = JNIEnv.NewString ((string?)variable);
			IntPtr native_value = JNIEnv.NewString ((string?)value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_file);
				__args [1] = new JniArgumentValue (native_section);
				__args [2] = new JniArgumentValue (native_variable);
				__args [3] = new JniArgumentValue (native_value);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_file);
				JNIEnv.DeleteLocalRef (native_section);
				JNIEnv.DeleteLocalRef (native_variable);
				JNIEnv.DeleteLocalRef (native_value);
			}
		}

	}
}
