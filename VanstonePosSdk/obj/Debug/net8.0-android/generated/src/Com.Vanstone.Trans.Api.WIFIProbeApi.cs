//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='WIFIProbeApi']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/WIFIProbeApi", DoNotGenerateAcw=true)]
	public partial class WIFIProbeApi : global::Java.Lang.Object {
		// Metadata.xml XPath interface reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='WIFIProbeApi.ISwitchCallback_Api']"
		[Register ("com/vanstone/trans/api/WIFIProbeApi$ISwitchCallback_Api", "", "Com.Vanstone.Trans.Api.WIFIProbeApi/ISwitchCallback_ApiInvoker")]
		public partial interface ISwitchCallback_Api : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='WIFIProbeApi.ISwitchCallback_Api']/method[@name='swich' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String']]"
			[Register ("swich", "(ILjava/lang/String;)V", "GetSwich_ILjava_lang_String_Handler:Com.Vanstone.Trans.Api.WIFIProbeApi/ISwitchCallback_ApiInvoker, VanstonePosSdk")]
			void Swich (int p0, string? p1);

		}

		[global::Android.Runtime.Register ("com/vanstone/trans/api/WIFIProbeApi$ISwitchCallback_Api", DoNotGenerateAcw=true)]
		internal partial class ISwitchCallback_ApiInvoker : global::Java.Lang.Object, ISwitchCallback_Api {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/WIFIProbeApi$ISwitchCallback_Api", typeof (ISwitchCallback_ApiInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static ISwitchCallback_Api? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<ISwitchCallback_Api> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.vanstone.trans.api.WIFIProbeApi.ISwitchCallback_Api'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public ISwitchCallback_ApiInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_swich_ILjava_lang_String_;
#pragma warning disable 0169
			static Delegate GetSwich_ILjava_lang_String_Handler ()
			{
				if (cb_swich_ILjava_lang_String_ == null)
					cb_swich_ILjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_V (n_Swich_ILjava_lang_String_));
				return cb_swich_ILjava_lang_String_;
			}

			static void n_Swich_ILjava_lang_String_ (IntPtr jnienv, IntPtr native__this, int p0, IntPtr native_p1)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.WIFIProbeApi.ISwitchCallback_Api> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
				__this.Swich (p0, p1);
			}
#pragma warning restore 0169

			IntPtr id_swich_ILjava_lang_String_;
			public unsafe void Swich (int p0, string? p1)
			{
				if (id_swich_ILjava_lang_String_ == IntPtr.Zero)
					id_swich_ILjava_lang_String_ = JNIEnv.GetMethodID (class_ref, "swich", "(ILjava/lang/String;)V");
				IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
				JValue* __args = stackalloc JValue [2];
				__args [0] = new JValue (p0);
				__args [1] = new JValue (native_p1);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_swich_ILjava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p1);
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='WIFIProbeApi.ITaskCallback_Api']"
		[Register ("com/vanstone/trans/api/WIFIProbeApi$ITaskCallback_Api", "", "Com.Vanstone.Trans.Api.WIFIProbeApi/ITaskCallback_ApiInvoker")]
		public partial interface ITaskCallback_Api : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='WIFIProbeApi.ITaskCallback_Api']/method[@name='getWifiProbeCallback' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='long']]"
			[Register ("getWifiProbeCallback", "(Ljava/lang/String;Ljava/lang/String;J)V", "GetGetWifiProbeCallback_Ljava_lang_String_Ljava_lang_String_JHandler:Com.Vanstone.Trans.Api.WIFIProbeApi/ITaskCallback_ApiInvoker, VanstonePosSdk")]
			void GetWifiProbeCallback (string? p0, string? p1, long p2);

		}

		[global::Android.Runtime.Register ("com/vanstone/trans/api/WIFIProbeApi$ITaskCallback_Api", DoNotGenerateAcw=true)]
		internal partial class ITaskCallback_ApiInvoker : global::Java.Lang.Object, ITaskCallback_Api {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/WIFIProbeApi$ITaskCallback_Api", typeof (ITaskCallback_ApiInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static ITaskCallback_Api? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<ITaskCallback_Api> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.vanstone.trans.api.WIFIProbeApi.ITaskCallback_Api'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public ITaskCallback_ApiInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_getWifiProbeCallback_Ljava_lang_String_Ljava_lang_String_J;
#pragma warning disable 0169
			static Delegate GetGetWifiProbeCallback_Ljava_lang_String_Ljava_lang_String_JHandler ()
			{
				if (cb_getWifiProbeCallback_Ljava_lang_String_Ljava_lang_String_J == null)
					cb_getWifiProbeCallback_Ljava_lang_String_Ljava_lang_String_J = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLJ_V (n_GetWifiProbeCallback_Ljava_lang_String_Ljava_lang_String_J));
				return cb_getWifiProbeCallback_Ljava_lang_String_Ljava_lang_String_J;
			}

			static void n_GetWifiProbeCallback_Ljava_lang_String_Ljava_lang_String_J (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, long p2)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.WIFIProbeApi.ITaskCallback_Api> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
				var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
				__this.GetWifiProbeCallback (p0, p1, p2);
			}
#pragma warning restore 0169

			IntPtr id_getWifiProbeCallback_Ljava_lang_String_Ljava_lang_String_J;
			public unsafe void GetWifiProbeCallback (string? p0, string? p1, long p2)
			{
				if (id_getWifiProbeCallback_Ljava_lang_String_Ljava_lang_String_J == IntPtr.Zero)
					id_getWifiProbeCallback_Ljava_lang_String_Ljava_lang_String_J = JNIEnv.GetMethodID (class_ref, "getWifiProbeCallback", "(Ljava/lang/String;Ljava/lang/String;J)V");
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
				JValue* __args = stackalloc JValue [3];
				__args [0] = new JValue (native_p0);
				__args [1] = new JValue (native_p1);
				__args [2] = new JValue (p2);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_getWifiProbeCallback_Ljava_lang_String_Ljava_lang_String_J, __args);
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/WIFIProbeApi", typeof (WIFIProbeApi));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected WIFIProbeApi (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='WIFIProbeApi']/constructor[@name='WIFIProbeApi' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe WIFIProbeApi () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='WIFIProbeApi']/method[@name='WifiProbeCloseInfo_Api' and count(parameter)=1 and parameter[1][@type='com.vanstone.trans.api.WIFIProbeApi.ISwitchCallback_Api']]"
		[Register ("WifiProbeCloseInfo_Api", "(Lcom/vanstone/trans/api/WIFIProbeApi$ISwitchCallback_Api;)V", "")]
		public static unsafe void WifiProbeCloseInfo_Api (global::Com.Vanstone.Trans.Api.WIFIProbeApi.ISwitchCallback_Api? @callback)
		{
			const string __id = "WifiProbeCloseInfo_Api.(Lcom/vanstone/trans/api/WIFIProbeApi$ISwitchCallback_Api;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (@callback);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='WIFIProbeApi']/method[@name='WifiProbeClose_Api' and count(parameter)=1 and parameter[1][@type='com.vanstone.trans.api.WIFIProbeApi.ISwitchCallback_Api']]"
		[Register ("WifiProbeClose_Api", "(Lcom/vanstone/trans/api/WIFIProbeApi$ISwitchCallback_Api;)V", "")]
		public static unsafe void WifiProbeClose_Api (global::Com.Vanstone.Trans.Api.WIFIProbeApi.ISwitchCallback_Api? @callback)
		{
			const string __id = "WifiProbeClose_Api.(Lcom/vanstone/trans/api/WIFIProbeApi$ISwitchCallback_Api;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (@callback);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='WIFIProbeApi']/method[@name='WifiProbeOpen_Api' and count(parameter)=1 and parameter[1][@type='com.vanstone.trans.api.WIFIProbeApi.ISwitchCallback_Api']]"
		[Register ("WifiProbeOpen_Api", "(Lcom/vanstone/trans/api/WIFIProbeApi$ISwitchCallback_Api;)V", "")]
		public static unsafe void WifiProbeOpen_Api (global::Com.Vanstone.Trans.Api.WIFIProbeApi.ISwitchCallback_Api? @callback)
		{
			const string __id = "WifiProbeOpen_Api.(Lcom/vanstone/trans/api/WIFIProbeApi$ISwitchCallback_Api;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (@callback);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='WIFIProbeApi']/method[@name='WifiProbeRegister_Api' and count(parameter)=1 and parameter[1][@type='com.vanstone.trans.api.WIFIProbeApi.ITaskCallback_Api']]"
		[Register ("WifiProbeRegister_Api", "(Lcom/vanstone/trans/api/WIFIProbeApi$ITaskCallback_Api;)V", "")]
		public static unsafe void WifiProbeRegister_Api (global::Com.Vanstone.Trans.Api.WIFIProbeApi.ITaskCallback_Api? @callback)
		{
			const string __id = "WifiProbeRegister_Api.(Lcom/vanstone/trans/api/WIFIProbeApi$ITaskCallback_Api;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (@callback);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='WIFIProbeApi']/method[@name='WifiProbeStartInfo_Api' and count(parameter)=1 and parameter[1][@type='com.vanstone.trans.api.WIFIProbeApi.ISwitchCallback_Api']]"
		[Register ("WifiProbeStartInfo_Api", "(Lcom/vanstone/trans/api/WIFIProbeApi$ISwitchCallback_Api;)V", "")]
		public static unsafe void WifiProbeStartInfo_Api (global::Com.Vanstone.Trans.Api.WIFIProbeApi.ISwitchCallback_Api? @callback)
		{
			const string __id = "WifiProbeStartInfo_Api.(Lcom/vanstone/trans/api/WIFIProbeApi$ISwitchCallback_Api;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (@callback);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='WIFIProbeApi']/method[@name='WifiProbeUnregister_Api' and count(parameter)=1 and parameter[1][@type='com.vanstone.trans.api.WIFIProbeApi.ITaskCallback_Api']]"
		[Register ("WifiProbeUnregister_Api", "(Lcom/vanstone/trans/api/WIFIProbeApi$ITaskCallback_Api;)V", "")]
		public static unsafe void WifiProbeUnregister_Api (global::Com.Vanstone.Trans.Api.WIFIProbeApi.ITaskCallback_Api? @callback)
		{
			const string __id = "WifiProbeUnregister_Api.(Lcom/vanstone/trans/api/WIFIProbeApi$ITaskCallback_Api;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (@callback);
			}
		}

	}
}
