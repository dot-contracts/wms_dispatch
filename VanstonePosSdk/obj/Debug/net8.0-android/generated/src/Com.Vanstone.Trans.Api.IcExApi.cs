//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='IcExApi']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/IcExApi", DoNotGenerateAcw=true)]
	public partial class IcExApi : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/IcExApi", typeof (IcExApi));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected IcExApi (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='IcExApi']/constructor[@name='IcExApi' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe IcExApi () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='IcExApi']/method[@name='IccDetectEx_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("IccDetectEx_Api", "(I)I", "")]
		public static unsafe int IccDetectEx_Api (int CardNo)
		{
			const string __id = "IccDetectEx_Api.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (CardNo);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='IcExApi']/method[@name='IccInitEx_Api' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='byte[]'] and parameter[4][@type='byte[]']]"
		[Register ("IccInitEx_Api", "(II[B[B)I", "")]
		public static unsafe int IccInitEx_Api (int CardNo, int VccMode, byte[]? RstBuf, byte[]? Rlen)
		{
			const string __id = "IccInitEx_Api.(II[B[B)I";
			IntPtr native_RstBuf = JNIEnv.NewArray (RstBuf);
			IntPtr native_Rlen = JNIEnv.NewArray (Rlen);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (CardNo);
				__args [1] = new JniArgumentValue (VccMode);
				__args [2] = new JniArgumentValue (native_RstBuf);
				__args [3] = new JniArgumentValue (native_Rlen);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (RstBuf != null) {
					JNIEnv.CopyArray (native_RstBuf, RstBuf);
					JNIEnv.DeleteLocalRef (native_RstBuf);
				}
				if (Rlen != null) {
					JNIEnv.CopyArray (native_Rlen, Rlen);
					JNIEnv.DeleteLocalRef (native_Rlen);
				}
				global::System.GC.KeepAlive (RstBuf);
				global::System.GC.KeepAlive (Rlen);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='IcExApi']/method[@name='IccIsoCommandEx_Api' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='com.vanstone.trans.api.struct.ApduSend'] and parameter[3][@type='com.vanstone.trans.api.struct.ApduResp']]"
		[Register ("IccIsoCommandEx_Api", "(ILcom/vanstone/trans/api/struct/ApduSend;Lcom/vanstone/trans/api/struct/ApduResp;)V", "")]
		public static unsafe void IccIsoCommandEx_Api (int CardNo, global::Com.Vanstone.Trans.Api.Struct.ApduSend? apduSend, global::Com.Vanstone.Trans.Api.Struct.ApduResp? apduResp)
		{
			const string __id = "IccIsoCommandEx_Api.(ILcom/vanstone/trans/api/struct/ApduSend;Lcom/vanstone/trans/api/struct/ApduResp;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (CardNo);
				__args [1] = new JniArgumentValue ((apduSend == null) ? IntPtr.Zero : ((global::Java.Lang.Object) apduSend).Handle);
				__args [2] = new JniArgumentValue ((apduResp == null) ? IntPtr.Zero : ((global::Java.Lang.Object) apduResp).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (apduSend);
				global::System.GC.KeepAlive (apduResp);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='IcExApi']/method[@name='IccPowerOffEx_Api' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("IccPowerOffEx_Api", "(I)V", "")]
		public static unsafe void IccPowerOffEx_Api (int CardNo)
		{
			const string __id = "IccPowerOffEx_Api.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (CardNo);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

	}
}
