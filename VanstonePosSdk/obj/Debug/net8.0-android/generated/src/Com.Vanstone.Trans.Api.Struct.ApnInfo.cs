//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api.Struct {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/struct/ApnInfo", DoNotGenerateAcw=true)]
	public partial class ApnInfo : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/field[@name='MMSC']"
		[Register ("MMSC")]
		public string? Mmsc {
			get {
				const string __id = "MMSC.Ljava/lang/String;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "MMSC.Ljava/lang/String;";

				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/struct/ApnInfo", typeof (ApnInfo));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ApnInfo (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/constructor[@name='ApnInfo' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe ApnInfo () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_getApn;
#pragma warning disable 0169
		static Delegate GetGetApnHandler ()
		{
			if (cb_getApn == null)
				cb_getApn = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetApn));
			return cb_getApn;
		}

		static IntPtr n_GetApn (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Apn);
		}
#pragma warning restore 0169

		static Delegate? cb_setApn_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetApn_Ljava_lang_String_Handler ()
		{
			if (cb_setApn_Ljava_lang_String_ == null)
				cb_setApn_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetApn_Ljava_lang_String_));
			return cb_setApn_Ljava_lang_String_;
		}

		static void n_SetApn_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_apn)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var apn = JNIEnv.GetString (native_apn, JniHandleOwnership.DoNotTransfer);
			__this.Apn = apn;
		}
#pragma warning restore 0169

		public virtual unsafe string? Apn {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getApn' and count(parameter)=0]"
			[Register ("getApn", "()Ljava/lang/String;", "GetGetApnHandler")]
			get {
				const string __id = "getApn.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setApn' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setApn", "(Ljava/lang/String;)V", "GetSetApn_Ljava_lang_String_Handler")]
			set {
				const string __id = "setApn.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getApnId;
#pragma warning disable 0169
		static Delegate GetGetApnIdHandler ()
		{
			if (cb_getApnId == null)
				cb_getApnId = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetApnId));
			return cb_getApnId;
		}

		static int n_GetApnId (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.ApnId;
		}
#pragma warning restore 0169

		static Delegate? cb_setApnId_I;
#pragma warning disable 0169
		static Delegate GetSetApnId_IHandler ()
		{
			if (cb_setApnId_I == null)
				cb_setApnId_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetApnId_I));
			return cb_setApnId_I;
		}

		static void n_SetApnId_I (IntPtr jnienv, IntPtr native__this, int apnId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.ApnId = apnId;
		}
#pragma warning restore 0169

		public virtual unsafe int ApnId {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getApnId' and count(parameter)=0]"
			[Register ("getApnId", "()I", "GetGetApnIdHandler")]
			get {
				const string __id = "getApnId.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setApnId' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setApnId", "(I)V", "GetSetApnId_IHandler")]
			set {
				const string __id = "setApnId.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getAuthType;
#pragma warning disable 0169
		static Delegate GetGetAuthTypeHandler ()
		{
			if (cb_getAuthType == null)
				cb_getAuthType = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetAuthType));
			return cb_getAuthType;
		}

		static IntPtr n_GetAuthType (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.AuthType);
		}
#pragma warning restore 0169

		static Delegate? cb_setAuthType_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetAuthType_Ljava_lang_String_Handler ()
		{
			if (cb_setAuthType_Ljava_lang_String_ == null)
				cb_setAuthType_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetAuthType_Ljava_lang_String_));
			return cb_setAuthType_Ljava_lang_String_;
		}

		static void n_SetAuthType_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_authType)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var authType = JNIEnv.GetString (native_authType, JniHandleOwnership.DoNotTransfer);
			__this.AuthType = authType;
		}
#pragma warning restore 0169

		public virtual unsafe string? AuthType {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getAuthType' and count(parameter)=0]"
			[Register ("getAuthType", "()Ljava/lang/String;", "GetGetAuthTypeHandler")]
			get {
				const string __id = "getAuthType.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setAuthType' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setAuthType", "(Ljava/lang/String;)V", "GetSetAuthType_Ljava_lang_String_Handler")]
			set {
				const string __id = "setAuthType.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getBearer;
#pragma warning disable 0169
		static Delegate GetGetBearerHandler ()
		{
			if (cb_getBearer == null)
				cb_getBearer = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetBearer));
			return cb_getBearer;
		}

		static IntPtr n_GetBearer (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Bearer);
		}
#pragma warning restore 0169

		static Delegate? cb_setBearer_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetBearer_Ljava_lang_String_Handler ()
		{
			if (cb_setBearer_Ljava_lang_String_ == null)
				cb_setBearer_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetBearer_Ljava_lang_String_));
			return cb_setBearer_Ljava_lang_String_;
		}

		static void n_SetBearer_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_bearer)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var bearer = JNIEnv.GetString (native_bearer, JniHandleOwnership.DoNotTransfer);
			__this.Bearer = bearer;
		}
#pragma warning restore 0169

		public virtual unsafe string? Bearer {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getBearer' and count(parameter)=0]"
			[Register ("getBearer", "()Ljava/lang/String;", "GetGetBearerHandler")]
			get {
				const string __id = "getBearer.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setBearer' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setBearer", "(Ljava/lang/String;)V", "GetSetBearer_Ljava_lang_String_Handler")]
			set {
				const string __id = "setBearer.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getMMSC;
#pragma warning disable 0169
		static Delegate GetGetMMSCHandler ()
		{
			if (cb_getMMSC == null)
				cb_getMMSC = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMMSC));
			return cb_getMMSC;
		}

		static IntPtr n_GetMMSC (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.MMSC);
		}
#pragma warning restore 0169

		static Delegate? cb_setMMSC_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetMMSC_Ljava_lang_String_Handler ()
		{
			if (cb_setMMSC_Ljava_lang_String_ == null)
				cb_setMMSC_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetMMSC_Ljava_lang_String_));
			return cb_setMMSC_Ljava_lang_String_;
		}

		static void n_SetMMSC_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mMSC)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var mMSC = JNIEnv.GetString (native_mMSC, JniHandleOwnership.DoNotTransfer);
			__this.MMSC = mMSC;
		}
#pragma warning restore 0169

		public virtual unsafe string? MMSC {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getMMSC' and count(parameter)=0]"
			[Register ("getMMSC", "()Ljava/lang/String;", "GetGetMMSCHandler")]
			get {
				const string __id = "getMMSC.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setMMSC' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setMMSC", "(Ljava/lang/String;)V", "GetSetMMSC_Ljava_lang_String_Handler")]
			set {
				const string __id = "setMMSC.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getMMSPort;
#pragma warning disable 0169
		static Delegate GetGetMMSPortHandler ()
		{
			if (cb_getMMSPort == null)
				cb_getMMSPort = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMMSPort));
			return cb_getMMSPort;
		}

		static IntPtr n_GetMMSPort (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.MMSPort);
		}
#pragma warning restore 0169

		static Delegate? cb_setMMSPort_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetMMSPort_Ljava_lang_String_Handler ()
		{
			if (cb_setMMSPort_Ljava_lang_String_ == null)
				cb_setMMSPort_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetMMSPort_Ljava_lang_String_));
			return cb_setMMSPort_Ljava_lang_String_;
		}

		static void n_SetMMSPort_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mMSPort)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var mMSPort = JNIEnv.GetString (native_mMSPort, JniHandleOwnership.DoNotTransfer);
			__this.MMSPort = mMSPort;
		}
#pragma warning restore 0169

		public virtual unsafe string? MMSPort {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getMMSPort' and count(parameter)=0]"
			[Register ("getMMSPort", "()Ljava/lang/String;", "GetGetMMSPortHandler")]
			get {
				const string __id = "getMMSPort.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setMMSPort' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setMMSPort", "(Ljava/lang/String;)V", "GetSetMMSPort_Ljava_lang_String_Handler")]
			set {
				const string __id = "setMMSPort.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getMMSProxy;
#pragma warning disable 0169
		static Delegate GetGetMMSProxyHandler ()
		{
			if (cb_getMMSProxy == null)
				cb_getMMSProxy = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMMSProxy));
			return cb_getMMSProxy;
		}

		static IntPtr n_GetMMSProxy (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.MMSProxy);
		}
#pragma warning restore 0169

		static Delegate? cb_setMMSProxy_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetMMSProxy_Ljava_lang_String_Handler ()
		{
			if (cb_setMMSProxy_Ljava_lang_String_ == null)
				cb_setMMSProxy_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetMMSProxy_Ljava_lang_String_));
			return cb_setMMSProxy_Ljava_lang_String_;
		}

		static void n_SetMMSProxy_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mMSProxy)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var mMSProxy = JNIEnv.GetString (native_mMSProxy, JniHandleOwnership.DoNotTransfer);
			__this.MMSProxy = mMSProxy;
		}
#pragma warning restore 0169

		public virtual unsafe string? MMSProxy {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getMMSProxy' and count(parameter)=0]"
			[Register ("getMMSProxy", "()Ljava/lang/String;", "GetGetMMSProxyHandler")]
			get {
				const string __id = "getMMSProxy.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setMMSProxy' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setMMSProxy", "(Ljava/lang/String;)V", "GetSetMMSProxy_Ljava_lang_String_Handler")]
			set {
				const string __id = "setMMSProxy.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getMVNOMatchData;
#pragma warning disable 0169
		static Delegate GetGetMVNOMatchDataHandler ()
		{
			if (cb_getMVNOMatchData == null)
				cb_getMVNOMatchData = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMVNOMatchData));
			return cb_getMVNOMatchData;
		}

		static IntPtr n_GetMVNOMatchData (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.MVNOMatchData);
		}
#pragma warning restore 0169

		static Delegate? cb_setMVNOMatchData_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetMVNOMatchData_Ljava_lang_String_Handler ()
		{
			if (cb_setMVNOMatchData_Ljava_lang_String_ == null)
				cb_setMVNOMatchData_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetMVNOMatchData_Ljava_lang_String_));
			return cb_setMVNOMatchData_Ljava_lang_String_;
		}

		static void n_SetMVNOMatchData_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mVNOMatchData)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var mVNOMatchData = JNIEnv.GetString (native_mVNOMatchData, JniHandleOwnership.DoNotTransfer);
			__this.MVNOMatchData = mVNOMatchData;
		}
#pragma warning restore 0169

		public virtual unsafe string? MVNOMatchData {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getMVNOMatchData' and count(parameter)=0]"
			[Register ("getMVNOMatchData", "()Ljava/lang/String;", "GetGetMVNOMatchDataHandler")]
			get {
				const string __id = "getMVNOMatchData.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setMVNOMatchData' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setMVNOMatchData", "(Ljava/lang/String;)V", "GetSetMVNOMatchData_Ljava_lang_String_Handler")]
			set {
				const string __id = "setMVNOMatchData.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getMVNOType;
#pragma warning disable 0169
		static Delegate GetGetMVNOTypeHandler ()
		{
			if (cb_getMVNOType == null)
				cb_getMVNOType = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMVNOType));
			return cb_getMVNOType;
		}

		static IntPtr n_GetMVNOType (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.MVNOType);
		}
#pragma warning restore 0169

		static Delegate? cb_setMVNOType_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetMVNOType_Ljava_lang_String_Handler ()
		{
			if (cb_setMVNOType_Ljava_lang_String_ == null)
				cb_setMVNOType_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetMVNOType_Ljava_lang_String_));
			return cb_setMVNOType_Ljava_lang_String_;
		}

		static void n_SetMVNOType_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mVNOType)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var mVNOType = JNIEnv.GetString (native_mVNOType, JniHandleOwnership.DoNotTransfer);
			__this.MVNOType = mVNOType;
		}
#pragma warning restore 0169

		public virtual unsafe string? MVNOType {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getMVNOType' and count(parameter)=0]"
			[Register ("getMVNOType", "()Ljava/lang/String;", "GetGetMVNOTypeHandler")]
			get {
				const string __id = "getMVNOType.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setMVNOType' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setMVNOType", "(Ljava/lang/String;)V", "GetSetMVNOType_Ljava_lang_String_Handler")]
			set {
				const string __id = "setMVNOType.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getMcc;
#pragma warning disable 0169
		static Delegate GetGetMccHandler ()
		{
			if (cb_getMcc == null)
				cb_getMcc = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMcc));
			return cb_getMcc;
		}

		static IntPtr n_GetMcc (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Mcc);
		}
#pragma warning restore 0169

		static Delegate? cb_setMcc_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetMcc_Ljava_lang_String_Handler ()
		{
			if (cb_setMcc_Ljava_lang_String_ == null)
				cb_setMcc_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetMcc_Ljava_lang_String_));
			return cb_setMcc_Ljava_lang_String_;
		}

		static void n_SetMcc_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mcc)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var mcc = JNIEnv.GetString (native_mcc, JniHandleOwnership.DoNotTransfer);
			__this.Mcc = mcc;
		}
#pragma warning restore 0169

		public virtual unsafe string? Mcc {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getMcc' and count(parameter)=0]"
			[Register ("getMcc", "()Ljava/lang/String;", "GetGetMccHandler")]
			get {
				const string __id = "getMcc.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setMcc' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setMcc", "(Ljava/lang/String;)V", "GetSetMcc_Ljava_lang_String_Handler")]
			set {
				const string __id = "setMcc.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getMnc;
#pragma warning disable 0169
		static Delegate GetGetMncHandler ()
		{
			if (cb_getMnc == null)
				cb_getMnc = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMnc));
			return cb_getMnc;
		}

		static IntPtr n_GetMnc (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Mnc);
		}
#pragma warning restore 0169

		static Delegate? cb_setMnc_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetMnc_Ljava_lang_String_Handler ()
		{
			if (cb_setMnc_Ljava_lang_String_ == null)
				cb_setMnc_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetMnc_Ljava_lang_String_));
			return cb_setMnc_Ljava_lang_String_;
		}

		static void n_SetMnc_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mnc)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var mnc = JNIEnv.GetString (native_mnc, JniHandleOwnership.DoNotTransfer);
			__this.Mnc = mnc;
		}
#pragma warning restore 0169

		public virtual unsafe string? Mnc {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getMnc' and count(parameter)=0]"
			[Register ("getMnc", "()Ljava/lang/String;", "GetGetMncHandler")]
			get {
				const string __id = "getMnc.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setMnc' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setMnc", "(Ljava/lang/String;)V", "GetSetMnc_Ljava_lang_String_Handler")]
			set {
				const string __id = "setMnc.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getName;
#pragma warning disable 0169
		static Delegate GetGetNameHandler ()
		{
			if (cb_getName == null)
				cb_getName = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetName));
			return cb_getName;
		}

		static IntPtr n_GetName (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Name);
		}
#pragma warning restore 0169

		static Delegate? cb_setName_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetName_Ljava_lang_String_Handler ()
		{
			if (cb_setName_Ljava_lang_String_ == null)
				cb_setName_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetName_Ljava_lang_String_));
			return cb_setName_Ljava_lang_String_;
		}

		static void n_SetName_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			__this.Name = name;
		}
#pragma warning restore 0169

		public virtual unsafe string? Name {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getName' and count(parameter)=0]"
			[Register ("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
			get {
				const string __id = "getName.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setName' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setName", "(Ljava/lang/String;)V", "GetSetName_Ljava_lang_String_Handler")]
			set {
				const string __id = "setName.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getPassword;
#pragma warning disable 0169
		static Delegate GetGetPasswordHandler ()
		{
			if (cb_getPassword == null)
				cb_getPassword = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetPassword));
			return cb_getPassword;
		}

		static IntPtr n_GetPassword (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Password);
		}
#pragma warning restore 0169

		static Delegate? cb_setPassword_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetPassword_Ljava_lang_String_Handler ()
		{
			if (cb_setPassword_Ljava_lang_String_ == null)
				cb_setPassword_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetPassword_Ljava_lang_String_));
			return cb_setPassword_Ljava_lang_String_;
		}

		static void n_SetPassword_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_password)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var password = JNIEnv.GetString (native_password, JniHandleOwnership.DoNotTransfer);
			__this.Password = password;
		}
#pragma warning restore 0169

		public virtual unsafe string? Password {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getPassword' and count(parameter)=0]"
			[Register ("getPassword", "()Ljava/lang/String;", "GetGetPasswordHandler")]
			get {
				const string __id = "getPassword.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setPassword' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setPassword", "(Ljava/lang/String;)V", "GetSetPassword_Ljava_lang_String_Handler")]
			set {
				const string __id = "setPassword.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getPort;
#pragma warning disable 0169
		static Delegate GetGetPortHandler ()
		{
			if (cb_getPort == null)
				cb_getPort = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetPort));
			return cb_getPort;
		}

		static IntPtr n_GetPort (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Port);
		}
#pragma warning restore 0169

		static Delegate? cb_setPort_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetPort_Ljava_lang_String_Handler ()
		{
			if (cb_setPort_Ljava_lang_String_ == null)
				cb_setPort_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetPort_Ljava_lang_String_));
			return cb_setPort_Ljava_lang_String_;
		}

		static void n_SetPort_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_port)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var port = JNIEnv.GetString (native_port, JniHandleOwnership.DoNotTransfer);
			__this.Port = port;
		}
#pragma warning restore 0169

		public virtual unsafe string? Port {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getPort' and count(parameter)=0]"
			[Register ("getPort", "()Ljava/lang/String;", "GetGetPortHandler")]
			get {
				const string __id = "getPort.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setPort' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setPort", "(Ljava/lang/String;)V", "GetSetPort_Ljava_lang_String_Handler")]
			set {
				const string __id = "setPort.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getProtocol;
#pragma warning disable 0169
		static Delegate GetGetProtocolHandler ()
		{
			if (cb_getProtocol == null)
				cb_getProtocol = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetProtocol));
			return cb_getProtocol;
		}

		static IntPtr n_GetProtocol (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Protocol);
		}
#pragma warning restore 0169

		static Delegate? cb_setProtocol_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetProtocol_Ljava_lang_String_Handler ()
		{
			if (cb_setProtocol_Ljava_lang_String_ == null)
				cb_setProtocol_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetProtocol_Ljava_lang_String_));
			return cb_setProtocol_Ljava_lang_String_;
		}

		static void n_SetProtocol_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_protocol)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var protocol = JNIEnv.GetString (native_protocol, JniHandleOwnership.DoNotTransfer);
			__this.Protocol = protocol;
		}
#pragma warning restore 0169

		public virtual unsafe string? Protocol {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getProtocol' and count(parameter)=0]"
			[Register ("getProtocol", "()Ljava/lang/String;", "GetGetProtocolHandler")]
			get {
				const string __id = "getProtocol.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setProtocol' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setProtocol", "(Ljava/lang/String;)V", "GetSetProtocol_Ljava_lang_String_Handler")]
			set {
				const string __id = "setProtocol.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getProxy;
#pragma warning disable 0169
		static Delegate GetGetProxyHandler ()
		{
			if (cb_getProxy == null)
				cb_getProxy = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetProxy));
			return cb_getProxy;
		}

		static IntPtr n_GetProxy (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Proxy);
		}
#pragma warning restore 0169

		static Delegate? cb_setProxy_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetProxy_Ljava_lang_String_Handler ()
		{
			if (cb_setProxy_Ljava_lang_String_ == null)
				cb_setProxy_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetProxy_Ljava_lang_String_));
			return cb_setProxy_Ljava_lang_String_;
		}

		static void n_SetProxy_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_proxy)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var proxy = JNIEnv.GetString (native_proxy, JniHandleOwnership.DoNotTransfer);
			__this.Proxy = proxy;
		}
#pragma warning restore 0169

		public virtual unsafe string? Proxy {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getProxy' and count(parameter)=0]"
			[Register ("getProxy", "()Ljava/lang/String;", "GetGetProxyHandler")]
			get {
				const string __id = "getProxy.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setProxy' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setProxy", "(Ljava/lang/String;)V", "GetSetProxy_Ljava_lang_String_Handler")]
			set {
				const string __id = "setProxy.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getRoamingProtocol;
#pragma warning disable 0169
		static Delegate GetGetRoamingProtocolHandler ()
		{
			if (cb_getRoamingProtocol == null)
				cb_getRoamingProtocol = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetRoamingProtocol));
			return cb_getRoamingProtocol;
		}

		static IntPtr n_GetRoamingProtocol (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.RoamingProtocol);
		}
#pragma warning restore 0169

		static Delegate? cb_setRoamingProtocol_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetRoamingProtocol_Ljava_lang_String_Handler ()
		{
			if (cb_setRoamingProtocol_Ljava_lang_String_ == null)
				cb_setRoamingProtocol_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetRoamingProtocol_Ljava_lang_String_));
			return cb_setRoamingProtocol_Ljava_lang_String_;
		}

		static void n_SetRoamingProtocol_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_roamingProtocol)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var roamingProtocol = JNIEnv.GetString (native_roamingProtocol, JniHandleOwnership.DoNotTransfer);
			__this.RoamingProtocol = roamingProtocol;
		}
#pragma warning restore 0169

		public virtual unsafe string? RoamingProtocol {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getRoamingProtocol' and count(parameter)=0]"
			[Register ("getRoamingProtocol", "()Ljava/lang/String;", "GetGetRoamingProtocolHandler")]
			get {
				const string __id = "getRoamingProtocol.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setRoamingProtocol' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setRoamingProtocol", "(Ljava/lang/String;)V", "GetSetRoamingProtocol_Ljava_lang_String_Handler")]
			set {
				const string __id = "setRoamingProtocol.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getServer;
#pragma warning disable 0169
		static Delegate GetGetServerHandler ()
		{
			if (cb_getServer == null)
				cb_getServer = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetServer));
			return cb_getServer;
		}

		static IntPtr n_GetServer (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Server);
		}
#pragma warning restore 0169

		static Delegate? cb_setServer_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetServer_Ljava_lang_String_Handler ()
		{
			if (cb_setServer_Ljava_lang_String_ == null)
				cb_setServer_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetServer_Ljava_lang_String_));
			return cb_setServer_Ljava_lang_String_;
		}

		static void n_SetServer_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_server)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var server = JNIEnv.GetString (native_server, JniHandleOwnership.DoNotTransfer);
			__this.Server = server;
		}
#pragma warning restore 0169

		public virtual unsafe string? Server {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getServer' and count(parameter)=0]"
			[Register ("getServer", "()Ljava/lang/String;", "GetGetServerHandler")]
			get {
				const string __id = "getServer.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setServer' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setServer", "(Ljava/lang/String;)V", "GetSetServer_Ljava_lang_String_Handler")]
			set {
				const string __id = "setServer.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getType;
#pragma warning disable 0169
		static Delegate GetGetTypeHandler ()
		{
			if (cb_getType == null)
				cb_getType = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetType));
			return cb_getType;
		}

		static IntPtr n_GetType (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.Type);
		}
#pragma warning restore 0169

		static Delegate? cb_setType_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetType_Ljava_lang_String_Handler ()
		{
			if (cb_setType_Ljava_lang_String_ == null)
				cb_setType_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetType_Ljava_lang_String_));
			return cb_setType_Ljava_lang_String_;
		}

		static void n_SetType_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_type)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var type = JNIEnv.GetString (native_type, JniHandleOwnership.DoNotTransfer);
			__this.Type = type;
		}
#pragma warning restore 0169

		public virtual unsafe string? Type {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getType' and count(parameter)=0]"
			[Register ("getType", "()Ljava/lang/String;", "GetGetTypeHandler")]
			get {
				const string __id = "getType.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setType' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setType", "(Ljava/lang/String;)V", "GetSetType_Ljava_lang_String_Handler")]
			set {
				const string __id = "setType.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		static Delegate? cb_getUserName;
#pragma warning disable 0169
		static Delegate GetGetUserNameHandler ()
		{
			if (cb_getUserName == null)
				cb_getUserName = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetUserName));
			return cb_getUserName;
		}

		static IntPtr n_GetUserName (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.UserName);
		}
#pragma warning restore 0169

		static Delegate? cb_setUserName_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetUserName_Ljava_lang_String_Handler ()
		{
			if (cb_setUserName_Ljava_lang_String_ == null)
				cb_setUserName_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetUserName_Ljava_lang_String_));
			return cb_setUserName_Ljava_lang_String_;
		}

		static void n_SetUserName_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_userName)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.Struct.ApnInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var userName = JNIEnv.GetString (native_userName, JniHandleOwnership.DoNotTransfer);
			__this.UserName = userName;
		}
#pragma warning restore 0169

		public virtual unsafe string? UserName {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='getUserName' and count(parameter)=0]"
			[Register ("getUserName", "()Ljava/lang/String;", "GetGetUserNameHandler")]
			get {
				const string __id = "getUserName.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api.struct']/class[@name='ApnInfo']/method[@name='setUserName' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setUserName", "(Ljava/lang/String;)V", "GetSetUserName_Ljava_lang_String_Handler")]
			set {
				const string __id = "setUserName.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

	}
}
