//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Vanstone.Trans.Api {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='NumKeyboardApi']"
	[global::Android.Runtime.Register ("com/vanstone/trans/api/NumKeyboardApi", DoNotGenerateAcw=true)]
	public partial class NumKeyboardApi : global::Java.Lang.Object {
		// Metadata.xml XPath interface reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='NumKeyboardApi.NumKeyCheckListener']"
		[Register ("com/vanstone/trans/api/NumKeyboardApi$NumKeyCheckListener", "", "Com.Vanstone.Trans.Api.NumKeyboardApi/INumKeyCheckListenerInvoker")]
		public partial interface INumKeyCheckListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='NumKeyboardApi.NumKeyCheckListener']/method[@name='onAttach' and count(parameter)=0]"
			[Register ("onAttach", "()V", "GetOnAttachHandler:Com.Vanstone.Trans.Api.NumKeyboardApi/INumKeyCheckListenerInvoker, VanstonePosSdk")]
			void OnAttach ();

		}

		[global::Android.Runtime.Register ("com/vanstone/trans/api/NumKeyboardApi$NumKeyCheckListener", DoNotGenerateAcw=true)]
		internal partial class INumKeyCheckListenerInvoker : global::Java.Lang.Object, INumKeyCheckListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/NumKeyboardApi$NumKeyCheckListener", typeof (INumKeyCheckListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static INumKeyCheckListener? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<INumKeyCheckListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.vanstone.trans.api.NumKeyboardApi.NumKeyCheckListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public INumKeyCheckListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_onAttach;
#pragma warning disable 0169
			static Delegate GetOnAttachHandler ()
			{
				if (cb_onAttach == null)
					cb_onAttach = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnAttach));
				return cb_onAttach;
			}

			static void n_OnAttach (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyCheckListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnAttach ();
			}
#pragma warning restore 0169

			IntPtr id_onAttach;
			public unsafe void OnAttach ()
			{
				if (id_onAttach == IntPtr.Zero)
					id_onAttach = JNIEnv.GetMethodID (class_ref, "onAttach", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onAttach);
			}

		}

		[global::Android.Runtime.Register ("mono/com/vanstone/trans/api/NumKeyboardApi_NumKeyCheckListenerImplementor")]
		internal sealed partial class INumKeyCheckListenerImplementor : global::Java.Lang.Object, INumKeyCheckListener {

			object? sender;

			public unsafe INumKeyCheckListenerImplementor (object sender) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";
				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;
				var h = JniPeerMembers.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (h.Handle, JniHandleOwnership.TransferLocalRef);
				JniPeerMembers.InstanceMethods.FinishCreateInstance (__id, this, null);
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler? Handler;
			#pragma warning restore 0649

			public void OnAttach ()
			{
				var __h = Handler;
				if (__h != null)
					__h (sender, new EventArgs ());
			}

			internal static bool __IsEmpty (INumKeyCheckListenerImplementor value)
			{
				return value.Handler == null;
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='NumKeyboardApi.NumKeyListener']"
		[Register ("com/vanstone/trans/api/NumKeyboardApi$NumKeyListener", "", "Com.Vanstone.Trans.Api.NumKeyboardApi/INumKeyListenerInvoker")]
		public partial interface INumKeyListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='NumKeyboardApi.NumKeyListener']/method[@name='onAvailable' and count(parameter)=0]"
			[Register ("onAvailable", "()V", "GetOnAvailableHandler:Com.Vanstone.Trans.Api.NumKeyboardApi/INumKeyListenerInvoker, VanstonePosSdk")]
			void OnAvailable ();

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='NumKeyboardApi.NumKeyListener']/method[@name='onDisplayUpdate' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("onDisplayUpdate", "(Ljava/lang/String;)V", "GetOnDisplayUpdate_Ljava_lang_String_Handler:Com.Vanstone.Trans.Api.NumKeyboardApi/INumKeyListenerInvoker, VanstonePosSdk")]
			void OnDisplayUpdate (string? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='NumKeyboardApi.NumKeyListener']/method[@name='onException' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("onException", "(Ljava/lang/String;)V", "GetOnException_Ljava_lang_String_Handler:Com.Vanstone.Trans.Api.NumKeyboardApi/INumKeyListenerInvoker, VanstonePosSdk")]
			void OnException (string? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='NumKeyboardApi.NumKeyListener']/method[@name='onKeyDown' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String']]"
			[Register ("onKeyDown", "(ILjava/lang/String;)V", "GetOnKeyDown_ILjava_lang_String_Handler:Com.Vanstone.Trans.Api.NumKeyboardApi/INumKeyListenerInvoker, VanstonePosSdk")]
			void OnKeyDown (int p0, string? p1);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='NumKeyboardApi.NumKeyListener']/method[@name='onKeyUp' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String']]"
			[Register ("onKeyUp", "(ILjava/lang/String;)V", "GetOnKeyUp_ILjava_lang_String_Handler:Com.Vanstone.Trans.Api.NumKeyboardApi/INumKeyListenerInvoker, VanstonePosSdk")]
			void OnKeyUp (int p0, string? p1);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='NumKeyboardApi.NumKeyListener']/method[@name='onPayRequest' and count(parameter)=1 and parameter[1][@type='com.vanstone.trans.api.NumKeyboardApi.NumKeyPayRequest']]"
			[Register ("onPayRequest", "(Lcom/vanstone/trans/api/NumKeyboardApi$NumKeyPayRequest;)V", "GetOnPayRequest_Lcom_vanstone_trans_api_NumKeyboardApi_NumKeyPayRequest_Handler:Com.Vanstone.Trans.Api.NumKeyboardApi/INumKeyListenerInvoker, VanstonePosSdk")]
			void OnPayRequest (global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyPayRequest? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='NumKeyboardApi.NumKeyListener']/method[@name='onRelease' and count(parameter)=0]"
			[Register ("onRelease", "()V", "GetOnReleaseHandler:Com.Vanstone.Trans.Api.NumKeyboardApi/INumKeyListenerInvoker, VanstonePosSdk")]
			void OnRelease ();

		}

		[global::Android.Runtime.Register ("com/vanstone/trans/api/NumKeyboardApi$NumKeyListener", DoNotGenerateAcw=true)]
		internal partial class INumKeyListenerInvoker : global::Java.Lang.Object, INumKeyListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/NumKeyboardApi$NumKeyListener", typeof (INumKeyListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static INumKeyListener? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<INumKeyListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.vanstone.trans.api.NumKeyboardApi.NumKeyListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public INumKeyListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_onAvailable;
#pragma warning disable 0169
			static Delegate GetOnAvailableHandler ()
			{
				if (cb_onAvailable == null)
					cb_onAvailable = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnAvailable));
				return cb_onAvailable;
			}

			static void n_OnAvailable (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnAvailable ();
			}
#pragma warning restore 0169

			IntPtr id_onAvailable;
			public unsafe void OnAvailable ()
			{
				if (id_onAvailable == IntPtr.Zero)
					id_onAvailable = JNIEnv.GetMethodID (class_ref, "onAvailable", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onAvailable);
			}

			static Delegate? cb_onDisplayUpdate_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetOnDisplayUpdate_Ljava_lang_String_Handler ()
			{
				if (cb_onDisplayUpdate_Ljava_lang_String_ == null)
					cb_onDisplayUpdate_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnDisplayUpdate_Ljava_lang_String_));
				return cb_onDisplayUpdate_Ljava_lang_String_;
			}

			static void n_OnDisplayUpdate_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.OnDisplayUpdate (p0);
			}
#pragma warning restore 0169

			IntPtr id_onDisplayUpdate_Ljava_lang_String_;
			public unsafe void OnDisplayUpdate (string? p0)
			{
				if (id_onDisplayUpdate_Ljava_lang_String_ == IntPtr.Zero)
					id_onDisplayUpdate_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "onDisplayUpdate", "(Ljava/lang/String;)V");
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue (native_p0);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onDisplayUpdate_Ljava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p0);
			}

			static Delegate? cb_onException_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetOnException_Ljava_lang_String_Handler ()
			{
				if (cb_onException_Ljava_lang_String_ == null)
					cb_onException_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnException_Ljava_lang_String_));
				return cb_onException_Ljava_lang_String_;
			}

			static void n_OnException_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.OnException (p0);
			}
#pragma warning restore 0169

			IntPtr id_onException_Ljava_lang_String_;
			public unsafe void OnException (string? p0)
			{
				if (id_onException_Ljava_lang_String_ == IntPtr.Zero)
					id_onException_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "onException", "(Ljava/lang/String;)V");
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue (native_p0);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onException_Ljava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p0);
			}

			static Delegate? cb_onKeyDown_ILjava_lang_String_;
#pragma warning disable 0169
			static Delegate GetOnKeyDown_ILjava_lang_String_Handler ()
			{
				if (cb_onKeyDown_ILjava_lang_String_ == null)
					cb_onKeyDown_ILjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_V (n_OnKeyDown_ILjava_lang_String_));
				return cb_onKeyDown_ILjava_lang_String_;
			}

			static void n_OnKeyDown_ILjava_lang_String_ (IntPtr jnienv, IntPtr native__this, int p0, IntPtr native_p1)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
				__this.OnKeyDown (p0, p1);
			}
#pragma warning restore 0169

			IntPtr id_onKeyDown_ILjava_lang_String_;
			public unsafe void OnKeyDown (int p0, string? p1)
			{
				if (id_onKeyDown_ILjava_lang_String_ == IntPtr.Zero)
					id_onKeyDown_ILjava_lang_String_ = JNIEnv.GetMethodID (class_ref, "onKeyDown", "(ILjava/lang/String;)V");
				IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
				JValue* __args = stackalloc JValue [2];
				__args [0] = new JValue (p0);
				__args [1] = new JValue (native_p1);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onKeyDown_ILjava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p1);
			}

			static Delegate? cb_onKeyUp_ILjava_lang_String_;
#pragma warning disable 0169
			static Delegate GetOnKeyUp_ILjava_lang_String_Handler ()
			{
				if (cb_onKeyUp_ILjava_lang_String_ == null)
					cb_onKeyUp_ILjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_V (n_OnKeyUp_ILjava_lang_String_));
				return cb_onKeyUp_ILjava_lang_String_;
			}

			static void n_OnKeyUp_ILjava_lang_String_ (IntPtr jnienv, IntPtr native__this, int p0, IntPtr native_p1)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
				__this.OnKeyUp (p0, p1);
			}
#pragma warning restore 0169

			IntPtr id_onKeyUp_ILjava_lang_String_;
			public unsafe void OnKeyUp (int p0, string? p1)
			{
				if (id_onKeyUp_ILjava_lang_String_ == IntPtr.Zero)
					id_onKeyUp_ILjava_lang_String_ = JNIEnv.GetMethodID (class_ref, "onKeyUp", "(ILjava/lang/String;)V");
				IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
				JValue* __args = stackalloc JValue [2];
				__args [0] = new JValue (p0);
				__args [1] = new JValue (native_p1);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onKeyUp_ILjava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p1);
			}

			static Delegate? cb_onPayRequest_Lcom_vanstone_trans_api_NumKeyboardApi_NumKeyPayRequest_;
#pragma warning disable 0169
			static Delegate GetOnPayRequest_Lcom_vanstone_trans_api_NumKeyboardApi_NumKeyPayRequest_Handler ()
			{
				if (cb_onPayRequest_Lcom_vanstone_trans_api_NumKeyboardApi_NumKeyPayRequest_ == null)
					cb_onPayRequest_Lcom_vanstone_trans_api_NumKeyboardApi_NumKeyPayRequest_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnPayRequest_Lcom_vanstone_trans_api_NumKeyboardApi_NumKeyPayRequest_));
				return cb_onPayRequest_Lcom_vanstone_trans_api_NumKeyboardApi_NumKeyPayRequest_;
			}

			static void n_OnPayRequest_Lcom_vanstone_trans_api_NumKeyboardApi_NumKeyPayRequest_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = (global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyPayRequest?)global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyPayRequest> (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.OnPayRequest (p0);
			}
#pragma warning restore 0169

			IntPtr id_onPayRequest_Lcom_vanstone_trans_api_NumKeyboardApi_NumKeyPayRequest_;
			public unsafe void OnPayRequest (global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyPayRequest? p0)
			{
				if (id_onPayRequest_Lcom_vanstone_trans_api_NumKeyboardApi_NumKeyPayRequest_ == IntPtr.Zero)
					id_onPayRequest_Lcom_vanstone_trans_api_NumKeyboardApi_NumKeyPayRequest_ = JNIEnv.GetMethodID (class_ref, "onPayRequest", "(Lcom/vanstone/trans/api/NumKeyboardApi$NumKeyPayRequest;)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onPayRequest_Lcom_vanstone_trans_api_NumKeyboardApi_NumKeyPayRequest_, __args);
			}

			static Delegate? cb_onRelease;
#pragma warning disable 0169
			static Delegate GetOnReleaseHandler ()
			{
				if (cb_onRelease == null)
					cb_onRelease = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnRelease));
				return cb_onRelease;
			}

			static void n_OnRelease (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnRelease ();
			}
#pragma warning restore 0169

			IntPtr id_onRelease;
			public unsafe void OnRelease ()
			{
				if (id_onRelease == IntPtr.Zero)
					id_onRelease = JNIEnv.GetMethodID (class_ref, "onRelease", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onRelease);
			}

		}

		// event args for com.vanstone.trans.api.NumKeyboardApi.NumKeyListener.onDisplayUpdate
		public partial class DisplayUpdateEventArgs : global::System.EventArgs {
			public DisplayUpdateEventArgs (string? p0)
			{
				this.p0 = p0;
			}

			string? p0;

			public string? P0 {
				get { return p0; }
			}

		}

		// event args for com.vanstone.trans.api.NumKeyboardApi.NumKeyListener.onException
		public partial class ExceptionEventArgs : global::System.EventArgs {
			public ExceptionEventArgs (string? p0)
			{
				this.p0 = p0;
			}

			string? p0;

			public string? P0 {
				get { return p0; }
			}

		}

		// event args for com.vanstone.trans.api.NumKeyboardApi.NumKeyListener.onKeyDown
		public partial class KeyDownEventArgs : global::System.EventArgs {
			public KeyDownEventArgs (int p0, string? p1)
			{
				this.p0 = p0;
				this.p1 = p1;
			}

			int p0;

			public int P0 {
				get { return p0; }
			}

			string? p1;

			public string? P1 {
				get { return p1; }
			}

		}

		// event args for com.vanstone.trans.api.NumKeyboardApi.NumKeyListener.onKeyUp
		public partial class KeyUpEventArgs : global::System.EventArgs {
			public KeyUpEventArgs (int p0, string? p1)
			{
				this.p0 = p0;
				this.p1 = p1;
			}

			int p0;

			public int P0 {
				get { return p0; }
			}

			string? p1;

			public string? P1 {
				get { return p1; }
			}

		}

		// event args for com.vanstone.trans.api.NumKeyboardApi.NumKeyListener.onPayRequest
		public partial class PayRequestEventArgs : global::System.EventArgs {
			public PayRequestEventArgs (global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyPayRequest? p0)
			{
				this.p0 = p0;
			}

			global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyPayRequest? p0;

			public global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyPayRequest? P0 {
				get { return p0; }
			}

		}

		[global::Android.Runtime.Register ("mono/com/vanstone/trans/api/NumKeyboardApi_NumKeyListenerImplementor")]
		internal sealed partial class INumKeyListenerImplementor : global::Java.Lang.Object, INumKeyListener {

			object? sender;

			public unsafe INumKeyListenerImplementor (object sender) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";
				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;
				var h = JniPeerMembers.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (h.Handle, JniHandleOwnership.TransferLocalRef);
				JniPeerMembers.InstanceMethods.FinishCreateInstance (__id, this, null);
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler? OnAvailableHandler;
			#pragma warning restore 0649

			public void OnAvailable ()
			{
				var __h = OnAvailableHandler;
				if (__h != null)
					__h (sender, new EventArgs ());
			}

			#pragma warning disable 0649
			public EventHandler<DisplayUpdateEventArgs>? OnDisplayUpdateHandler;
			#pragma warning restore 0649

			public void OnDisplayUpdate (string? p0)
			{
				var __h = OnDisplayUpdateHandler;
				if (__h != null)
					__h (sender, new DisplayUpdateEventArgs (p0));
			}

			#pragma warning disable 0649
			public EventHandler<ExceptionEventArgs>? OnExceptionHandler;
			#pragma warning restore 0649

			public void OnException (string? p0)
			{
				var __h = OnExceptionHandler;
				if (__h != null)
					__h (sender, new ExceptionEventArgs (p0));
			}

			#pragma warning disable 0649
			public EventHandler<KeyDownEventArgs>? OnKeyDownHandler;
			#pragma warning restore 0649

			public void OnKeyDown (int p0, string? p1)
			{
				var __h = OnKeyDownHandler;
				if (__h != null)
					__h (sender, new KeyDownEventArgs (p0, p1));
			}

			#pragma warning disable 0649
			public EventHandler<KeyUpEventArgs>? OnKeyUpHandler;
			#pragma warning restore 0649

			public void OnKeyUp (int p0, string? p1)
			{
				var __h = OnKeyUpHandler;
				if (__h != null)
					__h (sender, new KeyUpEventArgs (p0, p1));
			}

			#pragma warning disable 0649
			public EventHandler<PayRequestEventArgs>? OnPayRequestHandler;
			#pragma warning restore 0649

			public void OnPayRequest (global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyPayRequest? p0)
			{
				var __h = OnPayRequestHandler;
				if (__h != null)
					__h (sender, new PayRequestEventArgs (p0));
			}

			#pragma warning disable 0649
			public EventHandler? OnReleaseHandler;
			#pragma warning restore 0649

			public void OnRelease ()
			{
				var __h = OnReleaseHandler;
				if (__h != null)
					__h (sender, new EventArgs ());
			}

			internal static bool __IsEmpty (INumKeyListenerImplementor value)
			{
				return value.OnAvailableHandler == null && value.OnDisplayUpdateHandler == null && value.OnExceptionHandler == null && value.OnKeyDownHandler == null && value.OnKeyUpHandler == null && value.OnPayRequestHandler == null && value.OnReleaseHandler == null;
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='NumKeyboardApi.NumKeyPayRequest']"
		[Register ("com/vanstone/trans/api/NumKeyboardApi$NumKeyPayRequest", "", "Com.Vanstone.Trans.Api.NumKeyboardApi/INumKeyPayRequestInvoker")]
		public partial interface INumKeyPayRequest : IJavaObject, IJavaPeerable {
			double Amount {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='NumKeyboardApi.NumKeyPayRequest']/method[@name='getAmount' and count(parameter)=0]"
				[Register ("getAmount", "()D", "GetGetAmountHandler:Com.Vanstone.Trans.Api.NumKeyboardApi/INumKeyPayRequestInvoker, VanstonePosSdk")]
				get; 
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/interface[@name='NumKeyboardApi.NumKeyPayRequest']/method[@name='displayTransResult' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("displayTransResult", "(Z)V", "GetDisplayTransResult_ZHandler:Com.Vanstone.Trans.Api.NumKeyboardApi/INumKeyPayRequestInvoker, VanstonePosSdk")]
			void DisplayTransResult (bool p0);

		}

		[global::Android.Runtime.Register ("com/vanstone/trans/api/NumKeyboardApi$NumKeyPayRequest", DoNotGenerateAcw=true)]
		internal partial class INumKeyPayRequestInvoker : global::Java.Lang.Object, INumKeyPayRequest {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/NumKeyboardApi$NumKeyPayRequest", typeof (INumKeyPayRequestInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static INumKeyPayRequest? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<INumKeyPayRequest> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.vanstone.trans.api.NumKeyboardApi.NumKeyPayRequest'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public INumKeyPayRequestInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_getAmount;
#pragma warning disable 0169
			static Delegate GetGetAmountHandler ()
			{
				if (cb_getAmount == null)
					cb_getAmount = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_D (n_GetAmount));
				return cb_getAmount;
			}

			static double n_GetAmount (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyPayRequest> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.Amount;
			}
#pragma warning restore 0169

			IntPtr id_getAmount;
			public unsafe double Amount {
				get {
					if (id_getAmount == IntPtr.Zero)
						id_getAmount = JNIEnv.GetMethodID (class_ref, "getAmount", "()D");
					return JNIEnv.CallDoubleMethod (((global::Java.Lang.Object) this).Handle, id_getAmount);
				}
			}

			static Delegate? cb_displayTransResult_Z;
#pragma warning disable 0169
			static Delegate GetDisplayTransResult_ZHandler ()
			{
				if (cb_displayTransResult_Z == null)
					cb_displayTransResult_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_DisplayTransResult_Z));
				return cb_displayTransResult_Z;
			}

			static void n_DisplayTransResult_Z (IntPtr jnienv, IntPtr native__this, bool p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyPayRequest> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.DisplayTransResult (p0);
			}
#pragma warning restore 0169

			IntPtr id_displayTransResult_Z;
			public unsafe void DisplayTransResult (bool p0)
			{
				if (id_displayTransResult_Z == IntPtr.Zero)
					id_displayTransResult_Z = JNIEnv.GetMethodID (class_ref, "displayTransResult", "(Z)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue (p0);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_displayTransResult_Z, __args);
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/vanstone/trans/api/NumKeyboardApi", typeof (NumKeyboardApi));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected NumKeyboardApi (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='NumKeyboardApi']/constructor[@name='NumKeyboardApi' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe NumKeyboardApi () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='NumKeyboardApi']/method[@name='NumKeyClose_Api' and count(parameter)=0]"
		[Register ("NumKeyClose_Api", "()V", "")]
		public static unsafe void NumKeyClose_Api ()
		{
			const string __id = "NumKeyClose_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='NumKeyboardApi']/method[@name='NumKeyDisplayText_Api' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("NumKeyDisplayText_Api", "(Ljava/lang/String;)V", "")]
		public static unsafe void NumKeyDisplayText_Api (string? text)
		{
			const string __id = "NumKeyDisplayText_Api.(Ljava/lang/String;)V";
			IntPtr native_text = JNIEnv.NewString ((string?)text);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_text);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_text);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='NumKeyboardApi']/method[@name='NumKeyOpen_Api' and count(parameter)=1 and parameter[1][@type='android.os.Bundle']]"
		[Register ("NumKeyOpen_Api", "(Landroid/os/Bundle;)V", "")]
		public static unsafe void NumKeyOpen_Api (global::Android.OS.Bundle? @params)
		{
			const string __id = "NumKeyOpen_Api.(Landroid/os/Bundle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((@params == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @params).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (@params);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='NumKeyboardApi']/method[@name='NumKeyReset_Api' and count(parameter)=0]"
		[Register ("NumKeyReset_Api", "()V", "")]
		public static unsafe void NumKeyReset_Api ()
		{
			const string __id = "NumKeyReset_Api.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='NumKeyboardApi']/method[@name='NumKeySetCheckListener_Api' and count(parameter)=1 and parameter[1][@type='com.vanstone.trans.api.NumKeyboardApi.NumKeyCheckListener']]"
		[Register ("NumKeySetCheckListener_Api", "(Lcom/vanstone/trans/api/NumKeyboardApi$NumKeyCheckListener;)V", "")]
		public static unsafe void NumKeySetCheckListener_Api (global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyCheckListener? listener)
		{
			const string __id = "NumKeySetCheckListener_Api.(Lcom/vanstone/trans/api/NumKeyboardApi$NumKeyCheckListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='NumKeyboardApi']/method[@name='NumKeySetKeyboardListener_Api' and count(parameter)=1 and parameter[1][@type='com.vanstone.trans.api.NumKeyboardApi.NumKeyListener']]"
		[Register ("NumKeySetKeyboardListener_Api", "(Lcom/vanstone/trans/api/NumKeyboardApi$NumKeyListener;)V", "")]
		public static unsafe void NumKeySetKeyboardListener_Api (global::Com.Vanstone.Trans.Api.NumKeyboardApi.INumKeyListener? listener)
		{
			const string __id = "NumKeySetKeyboardListener_Api.(Lcom/vanstone/trans/api/NumKeyboardApi$NumKeyListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((listener == null) ? IntPtr.Zero : ((global::Java.Lang.Object) listener).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (listener);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.vanstone.trans.api']/class[@name='NumKeyboardApi']/method[@name='NumKeyUpdateKeyboardSignal_Api' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("NumKeyUpdateKeyboardSignal_Api", "(II)Z", "")]
		public static unsafe bool NumKeyUpdateKeyboardSignal_Api (int wifi, int gprs)
		{
			const string __id = "NumKeyUpdateKeyboardSignal_Api.(II)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (wifi);
				__args [1] = new JniArgumentValue (gprs);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

	}
}
