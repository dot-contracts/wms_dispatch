Vanstone SmartPOS API
     Programming Manual
                                                              V2.00




                                                           Content
1.   Revision History.......................................................................................................................19

2.   Overview...................................................................................................................................20

3.   Core Package – Interfaces (com.vanstone.trans.api)................................................................21

     3.1.           Class PrinterApi........................................................................................................21

            3.1.1.         User Permissions...............................................................................................21

            3.1.2.         Private Constants..............................................................................................21

            3.1.3.         Interfaces...........................................................................................................21

                    3.1.3.1.              printEnd_Api....................................................................................21

                    3.1.3.2.              printQueryStatus_Api.......................................................................22

                    3.1.3.3.              printPaperFeed_Api..........................................................................22

                    3.1.3.4.              printSetTextSize_Api.......................................................................22

                    3.1.3.5.              printSetBlodText_Api......................................................................23

                    3.1.3.6.              printGetTextSize_Api.......................................................................23

                    3.1.3.7.              printSetLineThrough_Api................................................................23

                    3.1.3.8.              printSetItalic_Api.............................................................................24

                    3.1.3.9. printSetAlign_Api........................................................................................24

                    3.1.3.10. printSetGray_Api.......................................................................................24

                    3.1.3.11. printAddText_Api......................................................................................25

                    3.1.3.12. printAddBarCode_Api...............................................................................25

                    3.1.3.13. printAddBarCode_Api...............................................................................26

                    3.1.3.14. printAddBarCode_Api...............................................................................26
3.1.3.15. printAddQrCode_Api................................................................................27

3.1.3.16. printAddImage_Api...................................................................................27

3.1.3.17. printFeedLine_Api.....................................................................................28

3.1.3.18. printStartPrint_Api....................................................................................28

3.1.3.19. PrnStep_Api...............................................................................................28

3.1.3.20. PrnStatus_Api............................................................................................29

3.1.3.21.PrnStatus_Api.............................................................................................29

3.1.3.22. PrnClrBuff_Api.........................................................................................30

3.1.3.23. PrnLeftIndSet_Api.....................................................................................30

3.1.3.24. PrnLineSpaceSet_Api................................................................................30

3.1.3.25. PrnSpeedSet_Api.......................................................................................30

3.1.3.26. PrnFontSet_Api.........................................................................................31

3.1.3.27. PrnFontSet_Api.........................................................................................32

3.1.3.28. PrnHTSet_Api...........................................................................................32

3.1.3.29. PrnStr_Api.................................................................................................32

3.1.3.30. PrnCheckPrnData_Api..............................................................................33

3.1.3.31. PrnStart_Api..............................................................................................33

3.1.3.32. GetPrintState..............................................................................................34

3.1.3.33. PrnLogo_Api.............................................................................................35

3.1.3.34. PrnLogo_Api.............................................................................................35

3.1.3.35. PrnSetGray_Api.........................................................................................35

3.1.3.36. SetLang_Api..............................................................................................36

3.1.3.37. GetLang_Api.............................................................................................36

3.1.3.38. PrnSetFont_Api.........................................................................................36

3.1.3.39. PrnOpen_Api.............................................................................................37

3.1.3.40. PrnClose_Api.............................................................................................37

3.1.3.41. PrnCut_Api................................................................................................37

3.1.3.42. PrnStr_Api.................................................................................................38

3.1.3.43. setFontName_Api......................................................................................38

3.1.3.44. PrnLessen_Api（deprecated）.................................................................38

3.1.3.45. PrnZoom_Api (deprecated).......................................................................39

3.1.3.46. PrnHTSet_Api (deprecated)......................................................................39
3.2.        Class ApnApi............................................................................................................40

       3.2.1.      Interfaces...........................................................................................................40

            3.2.1.1.              getSIMInfo(Deprecated)...................................................................40

            3.2.1.2.              ApnOpen...........................................................................................40

            3.2.1.3.              ApnOpen...........................................................................................40

            3.2.1.4.              AddApn_Api.....................................................................................41

            3.2.1.5.              getGprsAPNId..................................................................................41

            3.2.1.6.              updateGprsAPN................................................................................41

            3.2.1.7.              SelectedApn_Api..............................................................................42

            3.2.1.8.              DeleteApn.........................................................................................42

            3.2.1.9.              DeleteApn.........................................................................................42

            3.2.1.10.             setDefaultApn...................................................................................43

            3.2.1.11.             getPreferApn_Api.............................................................................43

            3.2.1.12.             getAllApnList...................................................................................43

            3.2.1.13.             ApnClose(Deprecated).....................................................................44

3.3.        Class AT24CApi.......................................................................................................45

       3.3.2.      Private Constants..............................................................................................45

       3.3.3.      Interfaces...........................................................................................................45

            3.3.3.1.              open_Api...........................................................................................45

            3.3.3.2.              close_Api..........................................................................................45

            3.3.3.3.              read_Api............................................................................................46

            3.3.3.4.              write_Api..........................................................................................46

            3.3.3.5.              checkType_Api.................................................................................47

3.4.        Class AT88scApi......................................................................................................48

       3.4.1.      Private Constants..............................................................................................48

       3.4.2.      Interfaces...........................................................................................................48

            3.4.2.1.              powerOn_Api...................................................................................48

            3.4.2.2.              IccDetect_Api...................................................................................48

            3.4.2.3.              powerDown_Api...............................................................................48

            3.4.2.4.              icc102ReadMfrsShortCode_Api......................................................49

            3.4.2.5.              icc102ReadMfrsLoneCode_Api.......................................................49
              3.4.2.6.              icc102ReadPwdErrorCount_Api......................................................49

              3.4.2.7.              icc102ReadCodeProtectedBlock_Api..............................................50

              3.4.2.8.              icc102ReadTestBlock_Api...............................................................50

              3.4.2.9.              getSCAC_CPZ_Data........................................................................50

              3.4.2.10.             get102FZ_IZ_Data...........................................................................51

              3.4.2.11.             get102CardZeroAreaData.................................................................51

              3.4.2.12.             icc102ReadAppArea_Api.................................................................51

              3.4.2.13.             icc102WriteCardMfrsData_Api.......................................................52

              3.4.2.14.             icc102WriteTestBlock_Api..............................................................52

              3.4.2.15.             icc102WriteCodeProtectedBlock_Api.............................................53

              3.4.2.16.             icc102WriteAppArea_Api................................................................53

              3.4.2.17.             write102CardZeroData.....................................................................54

              3.4.2.18.             icc102VerifyPwd_Api......................................................................54

              3.4.2.19.             icc102UpdatePwd_Api.....................................................................55

              3.4.2.20.             icc102CheckCardType_Api.............................................................55

              3.4.2.21.             GetEzKey..........................................................................................55

              3.4.2.22.             Verify102EzKey_Api.......................................................................56

              3.4.2.23.             EarseEzData_Api..............................................................................56

              3.4.2.24.             icc102ReadErrorCountBlock_Api...................................................56

              3.4.2.25.             icc1608Read_Api.............................................................................57

              3.4.2.26.             icc1608Write_Api............................................................................57

              3.4.2.27.             icc1608VerifyKey_Api....................................................................58

              3.4.2.28.             icc1608SelectUserArea_Api............................................................58

              3.4.2.29.             icc1608Certify_Api..........................................................................58

              3.4.2.30.             icc1608CheckCardType_Api...........................................................59

              3.4.2.31.             Get1608ConfigZoneData..................................................................59

3.5.          Class BmpOper.........................................................................................................60

       3.5.1.        Interfaces...........................................................................................................60

              3.5.1.1.              BmpTurn240To80............................................................................60

              3.5.1.2.              ImageLower_Api..............................................................................60

3.6.Class ContactlessApi..........................................................................................................61
       3.6.1.User Permissions......................................................................................................61

       3.6.2.Private Constants.....................................................................................................61

       3.6.3.Interfaces..................................................................................................................61

              3.6.3.1.cardAAnticollision_Api................................................................................61

              3.6.3.2.cardADeselect_Api.......................................................................................61

              3.6.3.3.cardAPause_Api...........................................................................................61

              3.6.3.4.cardARats_Api..............................................................................................62

              3.6.3.5.cardAReq_Api..............................................................................................62

              3.6.3.6.cardAWakeUp_Api......................................................................................62

              3.6.3.7.closeField_Api..............................................................................................63

              3.6.3.8.M1Decrement_Api.......................................................................................63

              3.6.3.9.M1Increment_Api.........................................................................................63

              3.6.3.10.M1Restore_Api...........................................................................................64

              3.6.3.11.M1Transfer_Api.........................................................................................64

              3.6.3.12.openField_Api............................................................................................64

              3.6.3.13.readSecurityMem_Api................................................................................65

              3.6.3.14.writeSecurityMem_Api..............................................................................65

3.7.Class FileApi.......................................................................................................................66

       3.7.1.Interfaces..................................................................................................................66

              3.7.1.1.ChangePrivateProfileSectionName_Api......................................................66

              3.7.1.2.CreateAppFolder...........................................................................................66

              3.7.1.3.DeleteDebug_Api.........................................................................................66

              3.7.1.4.DelFile_Api..................................................................................................67

              3.7.1.5.FileCRC32....................................................................................................67

              3.7.1.6.getAppDataPath............................................................................................67

              3.7.1.7.getAppPath....................................................................................................68

              3.7.1.8.getFileNameEncoding..................................................................................68

              3.7.1.9.GetFileSize_Api............................................................................................68

              3.7.1.10.GetPrivateProfileSection_Api....................................................................69

              3.7.1.11.GetPrivateProfileString_Api......................................................................69

              3.7.1.12.getPublicPath..............................................................................................70

              3.7.1.13.ReadAppShare_Api....................................................................................70
              3.7.1.14.ReadFile_Api..............................................................................................71

              3.7.1.15.ReadFileLine...............................................................................................71

              3.7.1.16.ReNameFile_Api........................................................................................71

              3.7.1.17.SaveWholeFile_Api....................................................................................72

              3.7.1.18.setFileNameEncoding.................................................................................72

              3.7.1.19.WriteAppShare_Api...................................................................................73

              3.7.1.20.WriteFile_Api.............................................................................................73

              3.7.1.21.WritePrivateProfileString_Api...................................................................74

3.8.Class FingerApi...................................................................................................................75

       3.8.1.Interfaces..................................................................................................................75

              3.8.1.1.FingerCheckIDTemplate_Api......................................................................75

              3.8.1.2.FingerClose_Api...........................................................................................75

              3.8.1.3.FingerDelete_Api..........................................................................................75

              3.8.1.4.FingerDeleteAll_Api....................................................................................76

              3.8.1.5.FingerEnterFp_Api.......................................................................................76

              3.8.1.6.FingerExportChar_Api.................................................................................76

              3.8.1.7.FingerGetCount_Api....................................................................................77

              3.8.1.8.FingerGetDevInfo_Api.................................................................................77

              3.8.1.9.FingerGetDevSN_Api..................................................................................77

              3.8.1.10.FingerGetNextEmptyID_Api.....................................................................78

              3.8.1.11.FingerGrabImg_Api...................................................................................78

              3.8.1.12.FingerOpen_Api.........................................................................................79

              3.8.1.13.FingerUpImage_Api...................................................................................79

              3.8.1.14.FingerVerify_Api.......................................................................................79

              3.8.1.15.FingerVerifyAll_Api..................................................................................80

3.9.Class IcApi..........................................................................................................................81

       3.9.1.Private Constants.....................................................................................................81

       3.9.2.Interfaces..................................................................................................................81

              3.9.2.1.IccDetect_Api...............................................................................................81

              3.9.2.2.IccDetectOut_Api.........................................................................................81

              3.9.2.3.IccGetCardType_Api....................................................................................82

              3.9.2.4.IccInit_Api....................................................................................................82
              3.9.2.5.IccIsoCommand_Api....................................................................................83

              3.9.2.6.IccPowerOff_Api..........................................................................................83

              3.9.2.7.Mem4442IccGetPwdCount_Api..................................................................83

              3.9.2.8.MemIccCheck_Api.......................................................................................84

              3.9.2.9.MemIccPowerOff_Api.................................................................................84

              3.9.2.10.MemIccPowerOn_Api................................................................................84

              3.9.2.11.MemIccPwdProc_Api.................................................................................85

              3.9.2.12.MemIccReadData_Api...............................................................................85

              3.9.2.13.MemIccWriteData_Api..............................................................................86

3.10.Class KeyApi....................................................................................................................87

       3.10.1.Interfaces................................................................................................................87

              3.10.1.1.GetKey_Api................................................................................................87

              3.10.1.2.KBFlush_Api..............................................................................................88

              3.10.1.3.SetKey_Api.................................................................................................88

              3.10.1.4.TipAndWaitEx_Api....................................................................................89

              3.10.1.5.WaitAnyKey_Api.......................................................................................89

              3.10.1.6.WaitEnterAndEscKey_Api........................................................................90

              3.10.1.7.WaitKey_Api..............................................................................................90

              3.10.1.8.WaitKey_Api..............................................................................................91

3.11.Class LcdApi.....................................................................................................................93

       3.11.1.Private Constants...................................................................................................93

       3.11.2.Interfaces................................................................................................................93

              3.11.2.1.delRepeatRow.............................................................................................93

              3.11.2.2.DispTitleLib(deprecated)............................................................................93

              3.11.2.3.DrawButton_Api.........................................................................................94

              3.11.2.4.DrawLineRam(deprecated)........................................................................94

              3.11.2.5.DrawProgressBar_Api................................................................................95

              3.11.2.6.DrawRadioButton_Api...............................................................................95

              3.11.2.7.DrawRect_Api............................................................................................96

              3.11.2.8.DrawRect_Api............................................................................................96

              3.11.2.9.DrawSpinner_Api.......................................................................................97

              3.11.2.10.GetCurFontWidth(deprecated).................................................................98
              3.11.2.11.GetLineEx(deprecated).............................................................................98

              3.11.2.12.GetMaxCharShowInLine(deprecated).....................................................98

              3.11.2.13.GetRowHeight(deprecated)......................................................................99

              3.11.2.16.LedLightOff_Api......................................................................................99

              3.11.2.17.LedLightOn_Api.......................................................................................99

              3.11.2.18.LedOper_Api..........................................................................................100

              3.11.2.19.ScrBackLight_Api(deprecated)..............................................................100

              3.11.2.20.ScrBrush_Api(deprecated).....................................................................100

              3.11.2.21.ScrClrLine_Api.......................................................................................101

              3.11.2.22.ScrClrLineRam_Api(deprecated)...........................................................101

              3.11.2.23.ScrCls_Api..............................................................................................101

              3.11.2.24.ScrClsRam_Api......................................................................................102

              3.11.2.25.ScrDisp_Api............................................................................................102

              3.11.2.26.ScrDisp_Api............................................................................................102

              3.11.2.29.ScrDrawLine_Api(deprecated)...............................................................103

              3.11.2.30.ScrDrawLineRam_Api(deprecated).......................................................103

              3.11.2.31.ScrDrLogoxy_Api(deprecated)..............................................................104

              3.11.2.32.ScrDrLogoxyRam_Api(deprecated).......................................................104

              3.11.2.33.ScrFontSet_Api(deprecated)..................................................................105

              3.11.2.34.ScrGray_Api(deprecated).......................................................................105

              3.11.2.35.ScrPlot_Api(deprecated)........................................................................105

              3.11.2.36.ScrPlotRam_Api(deprecated).................................................................106

              3.11.2.37.ShowPassWd..........................................................................................106

              3.11.2.38.ShowQrCode_Api...................................................................................107

              3.11.2.39.TextBoxSameRandom_Api....................................................................107

3.11.Class PedApi...................................................................................................................109

       3.11.1.Private Constants.................................................................................................109

       3.11.2.Interfaces..............................................................................................................109

              3.11.2.1.calcRSA_Api(deprecated)........................................................................109

              3.11.2.2.calcRSAEx_Api........................................................................................110

              3.11.2.3.EDPPSetDesSmHdSoft_Api....................................................................110

              3.11.2.4.getFyTransKey_Api.................................................................................111
3.11.2.5.getgHdOrSoft............................................................................................111

3.11.2.6.getPinDukptEx_Api..................................................................................111

3.11.2.7.isKeyExist.................................................................................................113

3.11.2.8.PedCalcDESDukpt_Api...........................................................................113

3.11.2.9.PEDDes_Api.............................................................................................114

3.11.2.10.PEDDesCBC_Api...................................................................................115

3.11.2.11.PEDDisp_Api.........................................................................................116

3.11.2.12.PEDDisp_Api.........................................................................................117

3.11.2.13.PedDukptCalcSym_Api..........................................................................117

3.11.2.14.PedDukptIncreaseKsn_Api....................................................................119

3.11.2.15.PedDukptWriteTIK_Api........................................................................119

3.11.2.16.PedErase..................................................................................................121

3.11.2.17.PedErase..................................................................................................122

3.11.2.18.PedGetDukptKSN_Api..........................................................................122

3.11.2.19.PEDGetDukptPin_Api............................................................................122

3.11.2.20.PEDGetEMVOfflinePin_Api.................................................................124

3.11.2.21.PEDGetEMVOfflinePin_Api.................................................................125

3.11.2.22.PEDGetExpress_Api..............................................................................125

3.11.2.23.PEDGetLastError_Api............................................................................126

3.11.2.24.PedGetMacDukpt_Api...........................................................................126

3.11.2.25,PEDGetPwd_Api....................................................................................128

3.11.2.26.PEDGetPwd_Api....................................................................................129

3.11.2.27.PEDGetPwd_Api....................................................................................129

3.11.2.28.PEDGetPwd_Api....................................................................................130

3.11.2.30.PEDGetPwdzh_Api................................................................................131

3.11.2.31.PEDHaveCallBack_Api(decrated / Empty)...........................................132

3.11.2.32.PEDMac_Api..........................................................................................132

3.11.2.33.PEDReadPinPadSn_Api.........................................................................133

3.11.2.34.PEDSavePinPadSn_Api.........................................................................133

3.11.2.35.PedSelectPlace_Api................................................................................134

3.11.2.36.PEDSetContent_Api...............................................................................134

3.11.2.37.PEDSetDispAmt_Api.............................................................................134
              3.11.2.38.PEDSetHdSoft_Api................................................................................135

              3.11.2.39.PEDSetKeyType_Api.............................................................................135

              3.11.2.40.PEDSetPinBoardStyle_Api....................................................................135

              3.11.2.41.PEDSnMacOnly_Api.............................................................................136

              3.11.2.42.PedSubmit...............................................................................................136

              3.11.2.43.PEDWrite21Key_Api.............................................................................136

              3.11.2.45.PEDWriteIcBcKey_Api.........................................................................137

              3.11.2.46.PEDWriteKey_Api.................................................................................138

              3.11.2.47.PEDWriteMKey_Api.............................................................................139

              3.11.2.48.PEDWriteWKey_Api.............................................................................140

              3.11.2.49.setAmountColor......................................................................................141

              3.11.2.50.setAmountFont.......................................................................................142

              3.11.2.51.setAmountSize........................................................................................142

              3.11.2.53.setBottomFont.........................................................................................142

              3.11.2.54.setBottomTextColor...............................................................................143

              3.11.2.55.setBottomTextSize..................................................................................143

              3.11.2.56.setCardNo...............................................................................................143

              3.11.2.57.SetMkeyIndex_Api(deprecated).............................................................143

              3.11.2.58.setNumColor...........................................................................................144

              3.11.2.59.setNumFont.............................................................................................144

              3.11.2.60.setNumSize.............................................................................................144

              3.11.2.61.setPinBoardFixed....................................................................................145

              3.11.2.62.setTextColor............................................................................................145

              3.11.2.63.setTextFont.............................................................................................145

              3.11.2.64.setTextSize..............................................................................................146

              3.11.2.65.setTitleBackGroundColor.......................................................................146

              3.11.2.66.WirteMkeyFY_Api.................................................................................146

              3.11.2.67.writeRSAKey_Api(deprecated).............................................................147

              3.11.2.68.writeRSAKeyEx_Api.............................................................................147

3.12.Class PiccApi..................................................................................................................149

       3.12.1.User Permissions..................................................................................................149

       3.12.2.Interfaces..............................................................................................................149
              3.12.2.1.CommCardCommand_Api.......................................................................149

              3.12.2.2.M1Authority_Api.....................................................................................149

              3.12.2.3.M1DecreaseValue_Api.............................................................................150

              3.12.2.4.M1IncreaseValue_Api..............................................................................150

              3.12.2.5.M1ReadBlock_Api...................................................................................151

              3.12.2.6.M1WriteBlock_Api..................................................................................151

              3.12.2.7.PiccCheck_Api.........................................................................................152

              3.12.2.8.PiccClose_Api..........................................................................................153

              3.12.2.9.PiccGetCardInfo_Api...............................................................................154

              3.12.2.10.PiccHalt_Api...........................................................................................154

              3.12.2.11.PiccIsoCommand_Api............................................................................155

              3.12.2.13.PiccOpen_Api.........................................................................................155

              3.12.2.14.PiccRemove_Api....................................................................................155

              3.12.2.15.PiccRest_Api..........................................................................................156

              3.12.2.16.SidCardCommand_Api..........................................................................156

3.13.Class ScanApi.................................................................................................................157

       3.13.1.Private Constants.................................................................................................157

       3.13.2.Interfaces..............................................................................................................158

              3.13.1.1.ScanClose_Api..........................................................................................158

              3.13.1.2.ScanGetData_Api.....................................................................................159

              3.13.1.3.ScanOpen_Api..........................................................................................159

3.14.Class SignApi..................................................................................................................160

       3.13.1.Interfaces..............................................................................................................160

              3.13.1.1.getSignatureCompressData_Api..............................................................160

              3.13.1.2.getSignatureLength_Api...........................................................................160

              3.13.1.3.getSignBmp_Api......................................................................................160

              3.13.1.4.isToastConfirm.........................................................................................161

              3.13.1.5.setResignCount.........................................................................................161

              3.13.1.6.setSignBoardStyle.....................................................................................161

              3.13.1.8.startSign_Api............................................................................................161

              3.13.1.9.stopSign_Api............................................................................................162

3.15.Class SystemApi.............................................................................................................163
3.15.1.Private Constants.................................................................................................163

3.15.2.Interfaces..............................................................................................................165

       3.15.2.1.Beef_Api...................................................................................................165

       3.15.2.2.Beep_Api..................................................................................................165

       3.15.2.3.Delay_Api.................................................................................................165

       3.15.2.4.deleteDir....................................................................................................166

       3.15.2.5.deleteFileInSe_Api...................................................................................166

       3.15.2.6.deleteFlashData_Api.................................................................................166

       3.15.2.7.DownLoadSn_Api....................................................................................167

       3.15.2.8.FormatFileSystem_Api.............................................................................167

       3.15.2.9.GetAllVersion_Api...................................................................................168

       3.15.2.10.GetEnv_Api............................................................................................168

       3.15.2.11.getFileListInSe_Api................................................................................169

       3.15.2.12.getSmartPosID........................................................................................169

       3.15.2.13.GetSysTime_Api....................................................................................169

       3.15.2.14.GetTime_Api..........................................................................................170

       3.15.2.15.GetVersion_Api......................................................................................170

       3.15.2.16.IsEnvParam_Api.....................................................................................170

       3.15.2.17.IsHandleOnBase_Api.............................................................................171

       3.15.2.18.PlaySound_Api.......................................................................................171

       3.15.2.19.PutEnv_Api.............................................................................................171

       3.15.2.20.ReadAppInfo_Api(deprecated)..............................................................172

       3.15.2.21.readFileFromSE_Api..............................................................................173

       3.15.2.22.readFlashData_Api.................................................................................173

       3.15.2.23.readNvRamFile_Api...............................................................................173

       3.15.2.24.ReadPosSn..............................................................................................174

       3.15.2.25.RunApp_Api(deprecated).......................................................................174

       3.15.2.26.SetBackParamFile_Api..........................................................................174

       3.15.2.27.SetBaseBroadcast_Api...........................................................................175

       3.15.2.28.setSmartPosID........................................................................................175

       3.15.2.29etSystemFunction....................................................................................175

       3.15.2.30.SetTime_Api...........................................................................................176
                    3.15.2.31.silentInstallApk_Api...............................................................................176

                    3.15.2.32.silentUnInstallApk_Api..........................................................................177

                    3.15.2.33.silentUnInstallApk_Api..........................................................................177

                    3.15.2.34.stopBeep_api...........................................................................................177

                    3.15.2.35.SystemExit_Api......................................................................................178

                    3.15.2.36.SystemInit_Api.......................................................................................178

                    3.15.2.37.SystemInit_Api.......................................................................................178

                    3.15.2.38.SystemPowerOff_Api.............................................................................179

                    3.15.2.39.SystemReboot_Api.................................................................................179

                    3.15.2.40.TimerCheck_Api....................................................................................179

                    3.15.2.41.TimerSet_Api.........................................................................................180

                    3.15.2.42.writeFileToSE_Api.................................................................................180

                    3.15.2.43.writeFlashData_Api................................................................................181

                    3.15.2.44.writeNvRamFile_Api.............................................................................181

      3.16.Class MagCardApi..........................................................................................................182

             3.16.1.User Permissions..................................................................................................182

             3.16.2.Private Constants.................................................................................................182

             3.16.3.Interfaces..............................................................................................................182

                    3.16.3.1.MagOpen_Api..........................................................................................182

                    3.16.3.2.MagClose_Api..........................................................................................182

                    3.16.3.3.MagReset_Api..........................................................................................183

                    3.16.3.4.MagSwiped_Api.......................................................................................183

                    3.16.3.5.MagRead_Api...........................................................................................183

                    3.16.3.6.MagGetTradCode_Api.............................................................................184

                    3.16.3.7.MagSetCheckLrc_Api..............................................................................184

                    3.16.3.8.getTrackData_Api.....................................................................................184

4.Core Package – Structures (com.vanstone.trans.api.struct)........................................................186

      4.1.Class ApduResp................................................................................................................186

      4.2.Class ApduSend................................................................................................................187

5.Addon Package – Utilities (com.vanstone.utils).........................................................................188

      5.1.Class DesUtils...................................................................................................................188

             5.1.1.decrypt....................................................................................................................188
       5.1.2.decrypt....................................................................................................................188

       5.1.3.decryptDes.............................................................................................................188

       5.1.4.decryptTDes...........................................................................................................189

       5.1.5.encrypt....................................................................................................................189

       5.1.6.encrypt....................................................................................................................189

       5.1.7.encryptDes.............................................................................................................190

       5.1.8.encryptTDes...........................................................................................................190

       5.1.9.Xor.........................................................................................................................190

       5.1.10.XorCalc_Api........................................................................................................190

5.2.Class QrcodeUtils.............................................................................................................192

       5.2.1.createQRImage......................................................................................................192

       5.2.2.creatBarcode..........................................................................................................192

       5.2.3.decode....................................................................................................................193

5.3.Class ByteUtils..................................................................................................................194

       5.3.1.bytesToStructs........................................................................................................194

       5.3.2.getMax...................................................................................................................194

       5.3.3.initStructs...............................................................................................................194

       5.3.4.isByteEmpty...........................................................................................................194

       5.3.5.isdigit......................................................................................................................195

       5.3.6.memcmp.................................................................................................................195

       5.3.7.memcmp.................................................................................................................196

       5.3.8.memcmpHex..........................................................................................................196

       5.3.9.memcpy..................................................................................................................196

       5.3.10.memcpy................................................................................................................197

       5.3.11.memcpy................................................................................................................197

       5.3.12.memcpy................................................................................................................197

       5.3.13.memcpy................................................................................................................198

       5.3.14.memcpy................................................................................................................198

       5.3.15.memcpyHex.........................................................................................................198

       5.3.16.memcpyHex.........................................................................................................199

       5.3.17.memmove.............................................................................................................199

       5.3.18.memset.................................................................................................................200
      5.3.19.mergeByte............................................................................................................200

      5.3.20.strcat.....................................................................................................................200

      5.3.21.strcat.....................................................................................................................201

      5.3.22.strchr.....................................................................................................................201

      5.3.23.strchr.....................................................................................................................201

      5.3.24.strcmp...................................................................................................................202

      5.3.25.strcmp...................................................................................................................202

      5.3.36.strcpy....................................................................................................................202

      5.3.27.strcpy....................................................................................................................203

      5.3.28.strcpy....................................................................................................................203

      5.3.29.strcpy....................................................................................................................203

      5.3.30.strcpy....................................................................................................................204

      5.3.31.strcpy....................................................................................................................204

      5.3.32.strlen.....................................................................................................................205

      5.3.33.strlen.....................................................................................................................205

      5.3.34.strncpy..................................................................................................................205

      5.3.35.strtok.....................................................................................................................206

      5.3.36.structsToBytes......................................................................................................206

      5.3.37.subBytes...............................................................................................................206

      5.3.38.subBytes...............................................................................................................206

      5.3.39.subBytesToString.................................................................................................207

      5.3.40.subBytesToString.................................................................................................207

5.4.Class CommonConvert.....................................................................................................208

      5.4.1.ascStringToBCD....................................................................................................208

      5.4.2.ascStringToBCD....................................................................................................208

      5.4.3.ascStringToBCD....................................................................................................208

      5.4.4.BCDFToAmtConvert.............................................................................................209

      5.4.5.bcdToASCString....................................................................................................209

      5.4.9.bcdToINT...............................................................................................................209

      5.4.10.binaryStringToBytes............................................................................................210

      5.4.12.byte2HexString....................................................................................................210

      5.4.14.bytesToHexString................................................................................................210
       5.4.15.bytesToInt............................................................................................................210

       5.4.16.bytesToIntValue...................................................................................................211

       5.4.17.bytesToLong........................................................................................................211

       5.4.18.bytesToShort........................................................................................................211

       5.4.19.BytesToString......................................................................................................211

       5.4.20.bytesToString.......................................................................................................212

       5.4.21.bytesToString.......................................................................................................212

       5.4.22.bytesToString.......................................................................................................212

       5.4.23.bytesToString.......................................................................................................213

       5.4.26.FillStr...................................................................................................................213

       5.4.27.FillStr...................................................................................................................214

       5.4.37.hexStringToByte..................................................................................................214

       5.4.38.intToBCD.............................................................................................................214

       5.4.39.intToBCD.............................................................................................................215

       5.4.40.intToBytes............................................................................................................215

       5.4.41.longToBytes.........................................................................................................215

       5.4.44.shortToBytes........................................................................................................215

       5.4.45.StringFToAmtConvert.........................................................................................216

       5.4.46.StringToBytes......................................................................................................216

       5.4.47.StringToBytes......................................................................................................216

5.5.Class DateUtils..................................................................................................................217

       5.5.1.addCurDate............................................................................................................217

       5.5.2.format.....................................................................................................................217

       5.5.3.format.....................................................................................................................217

       5.5.4.getCurDate.............................................................................................................218

       5.5.5.parse.......................................................................................................................218

5.6.Class FileUtils...................................................................................................................219

       5.6.1.ReadFileLine..........................................................................................................219

       5.6.2.SaveFile..................................................................................................................219

       5.6.3.WriteFileLine.........................................................................................................219

5.7.Class ImageTools..............................................................................................................220

       5.7.1.Bitmap2Bmp..........................................................................................................220
              5.7.2.convertToBlackWhite............................................................................................220

              5.7.3.getBitMap..............................................................................................................220

              5.7.4.getBitMap..............................................................................................................220

              5.7.5.readImage...............................................................................................................221

              5.7.6.saveImage..............................................................................................................221

       5.19.Class ZipUtils..................................................................................................................222

              5.19.1.getEntriesEnumeration........................................................................................222

              5.19.2.getEntriesNames..................................................................................................222

              5.19.3.getEntryComment................................................................................................222

              5.19.4.getEntryName......................................................................................................223

              5.19.5.upZipFile..............................................................................................................223

              5.19.6.upZipSelectedFile................................................................................................223

              5.19.7.zipFiles.................................................................................................................224

              5.19.8.zipFiles.................................................................................................................224

6.Miscellaneous...............................................................................................................................225

       6.1.System Initialization.........................................................................................................225

       6.2.Permissions.......................................................................................................................225

              6.2.1.led lights permission..............................................................................................225

              6.2.2.smart card permissioon..........................................................................................225

       6.3.Library Dependencies.......................................................................................................225
1.         Revision History

   Date       Version         By                     Comments

2018.4.28   V1.00       Abel Zhang   Initial draft

2019.4.3    V1.01       Tina Liu     Add DUPKT

2019.5.10   V2.00       Abel Zhang   Reformatted.
2.        Overview
     This document demonstrates the API interfaces for Vanstone SmartPOS terminals. Software

developers should use this document as a reference while developing their own applications using

Vanstone Android SDK. Currently the following device types are supported:

         A90

         A70

         A70-SV



     Unless otherwise specified, the topics covered in this document are compatible with all the

supported device types. For functions dedicated to specific device type, there will be a hint to

show such kind of restrictions.



     For standard Android components, please refer to official Android documents for more

detail. This document only describes functions specific to Vanstone SmartPOS terminals.



     This document may be obsolete without official announcement, please contact our technical

support for the most up-to-date revision.
3.         Core Package – Interfaces
    (com.vanstone.trans.api)
3.1. Class PrinterApi
3.1.1.             User Permissions
<uses-permission android:name="android.permission.CLOUDPOS_PRINTER" />

3.1.2.             Private Constants
              Name                 Value                          Note

ENCODING_UTF8                      3       Printer encoding definitions.

ENCODING_BGK                       4

LANG_CH                            0       Printer language definitions

LANG_PERSIAN                       1

LANG_ENGLISH                       2

LANG_FRENCH                        3

LANG_RUSSIAN                       4

LANG_SPANISH                       5

LANG_PORTUGUESE                    6



3.1.3.             Interfaces

3.1.3.1. printEnd_Api
Prototype   public static int printEnd_Api()

Function    Stop printer, and power off the printer module.

Input       None

Output      None

Returns     1-Success

            < 0-Failure

Note        none



3.1.3.2. printQueryStatus_Api
Prototype   public static int printQueryStatus_Api()
Function    Query printer status

Input       None

Output      None

Returns     1-successful
            <0-open failed

Note        None



3.1.3.3. printPaperFeed_Api
Prototype   public static int printPaperFeed_Api(int pixel)

Function    Take the paper and return the paper. The unit is to print pixel, corresponding to

            the actual minimum length accuracy is.

Input       Pixel - [in] paper or back paper length, range [0-8000], unit pixel.

Output      None

Returns     1-successful
            <0-open failed

Note        None



3.1.3.4. printSetTextSize_Api
Prototype   public static int printSetTextSize_Api(int textSize)

Function    Set    text   font   size,   range   (0,128)   pass    negative   number   back to

            PRINTER_INVALID_PARAM

Input       textSize - [in] Font size range (0,128), value must be greater than 0

Output      None

Returns     1-successful
            <0-open failed

Note        None



3.1.3.5. printSetBlodText_Api
Prototype   public static void printSetBlodText_Api(boolean isBold)
Function    Set whether the text is bold

Input       isBold - [in] true, bold; false, not bold

Output      None

Returns     None

Note        None



3.1.3.6. printGetTextSize_Api
Prototype   public static int printGetTextSize_Api()

Function    Get the font size

Input       None

Output      None

Returns     Font size value

Note        None



3.1.3.7. printSetLineThrough_Api
Prototype   public static void printSetLineThrough_Api(boolean isLineThrough)

Function    Set whether the text is underlined

Input       isLineThrough - [in] true, underlined; false, no underline

Output      None

Returns     None

Note        None
3.1.3.8. printSetItalic_Api
Prototype   public static void printSetItalic_Api(float value)

Function    Set italic formatting. The degree of tilt is controlled by the parameter value. The

            general value of -0.3f is a good italic effect

Input       Value - [in] Tilt and direction control. Less than 0 is tilted to the left; greater

            than 0 is tilted to the right. The larger the value, the more obvious the tilt effect.

            The general value of -0.3f is a good italic effect

Output      None

Returns     None

Note        None



3.1.3.9. printSetAlign_Api
Prototype   public static void printSetAlign_Api(int value)

Function    Set the alignment of the printer

Input       Value - [in] Alignment, left-justified by default, uses the default left alignment

            when using a value other than a system-defined constant.
            0-Left 1 - Center 2 - Right

Output      None

Returns     None

Note        None



3.1.3.10. printSetGray_Api
Prototype   public static void printSetGray_Api(int gray)

Function    Set the printer's print grayscale

Input       Gray - [in] Print grayscale, 0-10 levels, step by step. Out of range restores to the

            default value of 5.

Output      None

Returns     None

Note        None
3.1.3.11. printAddText_Api
Prototype   public static void printAddText_Api(int font, int align, java.lang.String text)

Function    Adds a line of printed text in the specified format. The maximum number of

            lines added at a time is 24 fonts and 85 lines. When text and graphic mixes are

            added, fewer lines can be added. Parts beyond buff do not print

Input       Font - [in] font, 0 small, 1 medium, 2 large
            Align - [in] Alignment, left-aligned by default, 0 left, 1 in, 2 right
            Text - [in] print text

Output      none

Returns     None

Note        Automatic wrap



3.1.3.12. printAddBarCode_Api
Prototype   public static void printAddBarCode_Api(int align,
                                                         int width,
                                                         int height,
                                                         boolean isShowtext,
                                     java.lang.String barcode,
                                                         String code)

Function    Add print bar code

Input       Align - [in] Alignment, left-aligned by default, 0 left, 1 in, 2 right
            Width - [in] Width
            Height - [in] height
            isShowtext - [in] Whether to display the word under the bar code
            Barcode - [in] barcode content
            Code- [in] AZTEC,CODABAR,CODE_39,CODE_93,CODE_128
            DATA_MATRIX,EAN_8,EAN_13,ITF,MAXICODE,PDF_417,QR_CODE,RSS_1
            4, RSS_EXPANDED,UPC_A, UPC_E,UPC_EAN_EXTENSION
Output      None
Returns     None

Note        None



3.1.3.13. printAddBarCode_Api
Prototype   public static void printAddBarCode_Api(int align,
                                                      int width,
                                                      int height,
                                   java.lang.String barcode)

Function    Add print bar code

Input       Align - [in] Alignment, left-aligned by default, 0 left, 1 in, 2 right
            Width - [in] Width
            Height - [in] height
            Barcode - [in] barcode content

Output      None

Returns     None

Note        None



3.1.3.14. printAddBarCode_Api
Prototype   public static void printAddBarCode_Api(int align,
                                   int width,
                                   int height,
                                                      boolean isShowtext,
                                                      java.lang.String barcode)

Function    Add print bar code

Input       Align - [in] Alignment, left-aligned by default, 0 left, 1 in, 2 right
            Width - [in] Width
            Height - [in] height
            isShowtext - [in] Whether to display the word under the bar code
            Barcode - [in] barcode content
Output      None

Returns     None

Note        None



3.1.3.15. printAddQrCode_Api
Prototype   public

            static void printAddQrCode_Api(int align,int height,java.lang.String qrCode)

Function    Add print QR code

Input       Align - [in] Alignment
            Height - [in] The desired height
            qrCode - [in] QR code content

Output      None

Returns     None

Note        None

3.1.3.16. printAddImage_Api
Prototype   public static void printAddImage_Api(int offset,
                                   int width,
                                   int height,
                                   byte[] imageData)

Function    Add a bitmap picture

Input       Offset - [in] print start position
            Width - [in] Width
            Height - [in] height
            imageData - [in] image data

Output      None

Returns     None

Note        None
3.1.3.17. printFeedLine_Api
Prototype   public static void printFeedLine_Api(int lines)

Function    Printer feeds paper

Input       Lines - [in] number of rows (-100 to 100)

Output      None

Returns     None

Note        None



3.1.3.18. printStartPrint_Api
Prototype   public static void printStartPrint_Api()

Function    Start the printing process

Input       None

Output      None

Returns     None

Note        None



3.1.3.19. PrnStep_Api
Prototype   public static int PrnStep_Api(int pixel)

Function    Take paper and leave paper. The unit is print pixels, corresponding to the actual

            minimum length accuracy of 0.0625mm

Input       Pixel - [in] The length of the paper feed or exit, range [0-8000], in pixels

Output      None

Returns     1-successful
            <0-open failed

Note        None




3.1.3.20. PrnStatus_Api
Prototype   public static int PrnStatus_Api(Context context)
Function    Get printer status

Input       Context - [in] context object

Output      None

Returns     0x88-success
            The 0xaa printer is busy,
            0x02-out of paper ,
            0x03-Printer overheated
            Other-faults

Note        None



3.1.3.21.PrnStatus_Api
Prototype   public static int PrnStatus_Api()

Function    Get printer status

Input       0x88 success
            0xaa printer is busy,
            0x02 out of paper ,
            0x03 Printer overheats
            Others other errors

Output      None

Returns     None

Note        A white line will be printed when detected



3.1.3.22. PrnClrBuff_Api
Prototype   public static void PrnClrBuff_Api()

Function    Clear print buffer

Input       None

Output      None

Returns     None

Note        None
3.1.3.23. PrnLeftIndSet_Api
Prototype   public static void PrnLeftIndSet_Api(short usLeftIndent)

Function    Set the left border

Input       usLeftIndent - [in] Left border 0-384 points

Output      None

Returns     None

Note        None



3.1.3.24. PrnLineSpaceSet_Api
Prototype   public static void PrnLineSpaceSet_Api(short ucLineSpace, int ucCharSpace)

Function    Set line spacing and character spacing

Input       ucLineSpace - Line Spacing
            ucCharSpace - Character Spacing 0-127

Output      None

Returns     None

Note        None



3.1.3.25. PrnSpeedSet_Api
Prototype   public static void PrnSpeedSet_Api(int ucSpeed)

Function    Set the print speed

Input       ucSpeed - [in] Print speed value. The value range is 0~23. Press 23 when the

            input value is greater than 23. The default print speed value is 23.

Output      None

Returns     None

Note        None
3.1.3.26. PrnFontSet_Api
Prototype   public static void PrnFontSet_Api(int Ascii, int CFont, int Zoom)

Function    Set print font

Input       Ascii - [in] The ASCII character height can be 16 (6X16) or 24 (24X24). Other

            values are illegal. The default value is 24.
            CFont - [in] Chinese height. The value is 12 (12X12) or 16 (16X16) or 24

            (24X24). Other values are illegal. The default value is 24.
            Zoom - [in] The font enlargement parameter. The default value is 0.
             among them:
            Bit0 control ASCII character X (horizontal) direction zoom (0 no zoom, 1

            zoom)
            Bit1 control ASCII character Y (vertical) direction zoom in (0 not zoomed in, 1

            zoomed in)
            Bit4 Control Chinese character X (horizontal) direction zoom (0 not zoomed in,

            1 zoomed in)
            Bit5 control Chinese character Y (vertical) direction zoom (0 not zoomed in, 1

            zoomed in)

Output      None

Returns     None

Note        Zooming in is not supported at present.



3.1.3.27. PrnFontSet_Api
Prototype   public   static   void   PrnFontSet_Api(AssetManager          assets,java.lang.String

            fontName)

Function    Set up the print font library

Input       assets- [in] asserts
            fontName-[in] The absolute path to the print font

Output      None

Returns     None

Note        None
3.1.3.28. PrnHTSet_Api
Prototype   public static void PrnHTSet_Api(int HT)

Function    Set bold body

Input       HT     -       [in]      0x01      RN_ASCII16X24B|PRN_CH24X24   0x02

            PRN_ASCII32X24B|PRN_CH48X48

Output      None

Returns     None

Note        None



3.1.3.29. PrnStr_Api
Prototype   public static int PrnStr_Api(java.lang.String printStr)

Function    Print string

Input       printStr- [in] printed data.

Output      None

Returns     0-success
            Other-failed

Note        None



3.1.3.30. PrnCheckPrnData_Api
Prototype   public static int PrnCheckPrnData_Api()

Function    Check if the print buffer is empty

Input       None

Output      None

Returns     0-not empty
            1-empty

Note        None
3.1.3.31. PrnStart_Api
Prototype   public static int PrnStart_Api()

Function    Start to print

Input       strIng - [in] pointer to print string

Output      None

Returns     0 Successful
            1 The printer is busy
            2 printer out of paper
            3 Printer overheated
            4 handle is not in the base
            5 Printer malfunction
            6 printer does not contain font
            7 Print buffer overflow
            8 Other errors
            9 The print buffer is empty

Note        None



3.1.3.32. GetPrintState
Prototype   public static int GetPrintState()

Function    Get print status

Input       None

Output      None

Returns     Printer Status: Four-Byte Status Code

             Among them, the first byte is the paperless state, the second byte is the printer

            temperature, and the third byte is the error code.

             First byte: HAS_PAPER - with paper; NO_PAPER - no paper

             Second byte: temperature value, range [-20,70]

            Third byte: error code, PRINTER_ERROR_OK (0x80), executed correctly

            PRINTER_ERROR_OVERHEAT: Overheating

            PRINTER_ERROR_BUF: Data overflow

            PRINTER_ERROR_BUSY: The printer is busy
Note         public static final int NO_PAPER = 0;
             public static final int HAS_PAPER = 1;
             public static final int FORMAT_ALIGN_LEFT = 0;
             public static final int FORMAT_ALIGN_CENTER = 1;
             public static final int FORMAT_ALIGN_RIGHT = 2;
             public static final int PRINTER_PERMISSION_ERROR = -110;
             public static final int PRINTER_INVALID_PARAM = -503;
             public static final int PRINTER_HARDWARE_ERROR = -504;
             public static final int PRINTER_BUFFER_OVERFLOW = -508;
             public static final int PRINTER_NOT_OPEN = -512;
             public static final int PRINTER_ERROR_OK = 128;
             public static final int PRINTER_ERROR_BUSY = 3;
             public static final int PRINT_ERROR_OVERHEAT = 2;
             public static final int PRINTER_ERROR_BUF = 4;
             public static final int PRINTER_ERROR_PAPER = 1;



3.1.3.33. PrnLogo_Api
Prototype   public static int PrnLogo_Api(Bitmap bitmap)

Function    Print picture

Input       Bitmap - [in] bitmap object

Output      None

Returns     0-success
            Other - failed

Note        None



3.1.3.34. PrnLogo_Api
Prototype   public static int PrnLogo_Api(byte[] Logo, int ArorFnFlag)

Function    Print picture

Input
            Logo - [in] 文件名或 LOGO 数组
            ArorFnFlag - [in] 0 打印 LOGO 数组 1 打印 LOGO 文件名的 LOGO 文件

Output      None

Returns     0 Successful
            1 Failed to print LOGO file
            0xfe print buffer overflow

Note        None



3.1.3.35. PrnSetGray_Api
Prototype   public static int PrnSetGray_Api(int Gray)

Function    Set the printer's print grayscale

Input       Gray - [in] Print grayscale, 0-10 levels, step by step. Out of range restored to

            silent

Output      None

Returns     0-success
            Other - failed

Note        None



3.1.3.36. SetLang_Api
Prototype   public static void SetLang_Api(int lang,int encodeType)

Function    set language

Input       Lang - [in] Language type, temporarily not used
            encodeType - [in] encoding type utf-8 gbk

Output      None

Returns     None

Note        None



3.1.3.37. GetLang_Api
Prototype   public static int GetLang_Api()
Function    Get the current language

Input       None

Output      None

Returns     Current Language


Note        None



3.1.3.38. PrnSetFont_Api
Prototype   public static int PrnSetFont_Api(int font,int style)

Function    Set the print font

Input       Font - [in] 0 - Bold 1 - Song 2 - Imitation Song 3 - Body 4 - Wenquan

            Yongzheng
            Style - [in] type 0-normal,1-bold,2-italic

Output      None

Returns     0-success
            Other - failed

Note        None



3.1.3.39. PrnOpen_Api
Prototype   public static int PrnOpen_Api(java.lang.String str,Context context)

Function    Open the printer

Input       Str - [in] reserved parameters
            Context - [in] context object

Output      None

Returns     0-success
            Other - failed

Note        None



3.1.3.40. PrnClose_Api
Prototype   public static void PrnClose_Api()
Function    Turn off the printer

Input       None

Output      None

Returns     None

Note        None



3.1.3.41. PrnCut_Api
Prototype   public static void PrnCut_Api()

Function    Printer cut paper

Input       None

Output      None

Returns     None

Note        None



3.1.3.42. PrnStr_Api
Prototype   public static int PrnStr_Api(byte[] buf)

Function    Print string

Input       Buf - [in] printed data.

Output      None

Returns     0-success
            Other - failed

Note        None



3.1.3.43. setFontName_Api
Prototype   public static int setFontName_Api(java.lang.String fontPath)

Function    Set print font

Input       fontPath- [in] The absolute path to the print font

Output      None

Returns     0-success
            1- failed

Note        None




3.1.3.44. PrnLessen_Api（deprecated）

Prototype   public static void PrnLessen_Api(boolean b)

Function

Input

Output

Returns

Note



3.1.3.45. PrnZoom_Api (deprecated)
Prototype   public static void PrnZoom_Api(boolean b)

Function

Input

Output

Returns

Note



3.1.3.46. PrnHTSet_Api (deprecated)
Prototype   public static void PrnHTSet_Api(boolean b)

Function

Input

Output

Returns

Note
3.2. Class ApnApi
3.2.1.             Interfaces

3.2.1.1. getSIMInfo(Deprecated)
Prototype   public static String getSIMInfo()

Function    Get MCC and MNC information of SIM card

Input       None

Output      None

Returns     null

Note        None



3.2.1.2. ApnOpen
Prototype   public static int ApnOpen(Context act)

Function    Open apn

Input       act-[in]contaxt

Output      None

Returns     0-success

Note        none



3.2.1.3. ApnOpen
Prototype   public static int ApnOpen()

Function    Open apn

Input       none

Output      None

Returns     0-success

Note        none



3.2.1.4. AddApn_Api
Prototype   public static int AddApn_Api(ApnInfo apnInfo)

Function    Set up the APN
Input       apnInfo-[in]ApnInfo object

Output      None

Returns     0-Success
            1-Failed

Note        The newly added apn is the defaule selected apn



3.2.1.5. getGprsAPNId
Prototype   public boolean getGprsAPNId(java.lang.String ApnName,

                           java.lang.String iNumericSTR)

Function    Determines whether the specified name apn exists

Input       ApnName-[in]apn’s name
            iNumericSTR-[in]numberic

Output      None

Returns     true-success
            false-failed

Note        None



3.2.1.6. updateGprsAPN
Prototype   public static int updateGprsAPN(java.lang.String ApnId, ApnInfo apnInfo)

Function    Update the APN

Input       ApnId-[in]the id of APN
            apnInfo-[in]ApnInfo object

Output      None

Returns     0-success
            1-failed

Note        None



3.2.1.7. SelectedApn_Api
Prototype   public static int SelectedApn_Api(java.lang.String ApnName)
Function    Select an APN

Input       ApnName-[in]the name of APN

Output      None

Returns     0-success
            1-failed

Note        None



3.2.1.8. DeleteApn
Prototype   public static int DeleteApn(java.lang.String apnname, java.lang.String numeric)

Function    delete all apns

Input       apnname-[in]the name of APN
            numeric-[in]numeric

Output      None

Returns     0-success
            1-failed

Note        None



3.2.1.9. DeleteApn
Prototype   public static boolean DeleteApn(int apnId)

Function    Removes the APN with the specified ID

Input       apnId-[in]the id of the APN that to be removed

Output      None

Returns     true-success
            false-failed

Note        None



3.2.1.10.setDefaultApn
Prototype   public static int setDefaultApn(int id)
Function    Set the existing Apn to the default Apn

Input       apnId-[in]the id of the APN

Output      None

Returns     0-success
            1-failed

Note        None



3.2.1.11.getPreferApn_Api
Prototype   public static ApnInfo getPreferApn_Api()

Function    Get the current default APN information

Input       None

Output      None

Returns     ApnInfo

Note        None



3.2.1.12.getAllApnList
Prototype   public static List<ApnInfo> getAllApnList()

Function    Get the APN list

Input       None

Output      None

Returns     List<ApnInfo>

Note        None



3.2.1.13.ApnClose(Deprecated)
Prototype   public static int ApnClose()

Function    Close APN

Input       None

Output      None
Returns   0

Note      None
3.3. Class AT24CApi
3.3.1.    User Permissions

3.3.2.                Private Constants
                  Name                  Value                      Note

AT24C01                                1        The type of card

AT24C02                                2

AT24C04                                3

AT24C08                                4

AT24C16                                5

AT24C64                                6



3.3.3.                Interfaces

3.3.3.1. open_Api
Prototype      public static int open_Api()

Function       Power the module

Input          None

Output         None

Returns        0-Success
               <0-failed

Note           None



3.3.3.2. close_Api
Prototype      public static int close_Api()

Function       Power off the module

Input          None

Output         None

Return         0-Success
               <0-failed

Note           None
3.3.3.3. read_Api
Prototype   public static int read_Api(int addr, byte[] buffer, int len)

Function    read the card

Input       addr-[in]AT24C02: between 0 and 255

                AT24C08: between 0 and 1023
                     AT24C16: between 0 ~ 2047
            buffer-[in]buffer
            len-[in]AT24C02: between 0 and 8
                AT24C08: between 0 and 16
                AT24C16:between 0 and 16

Output      none

Return      >0-Success
            <=0-failed

Note        none



3.3.3.4. write_Api
Prototype   public static int write_Api(int addr, byte[] data, int len)

Function    write the card

Input       addr-[in]AT24C02: between 0 and 255

                AT24C08: between 0 and 1023
                     AT24C16: between 0 ~ 2047
            buffer-[in]buffer
            len-[in]AT24C02: between 0 and 8
                AT24C08: between 0 and 16
                AT24C16:between 0 and 16

Output      none

Return      0-Success
            <0-failed

Note        none
3.3.3.5. checkType_Api
Prototype   public static int checkType_Api()

Function    check card type

Input       none

Output      none

Return      1-AT24C01

            2-AT24C02

            3-AT24C04

            4-AT24C08

            5-AT24C16

            <=0-failed

Note        none
3.4. Class AT88scApi
3.4.1.             Private Constants
              Name                  Value                      Note

EPARAM                              0xF1    error parameters



3.4.2.             Interfaces

3.4.2.1. powerOn_Api
Prototype   public static void PPPowerOn_Api()

Function    Password keyboard power up

Input       None

Output      None

Returns     0-success
            <0-failed

Note        None



3.4.2.2. IccDetect_Api
Prototype   public static int IccDetect_Api(int CardNo)

Function    Check if the specified card holder has a card.

Input       CardNo - [in] CardNo. : 0 big card holder.

Output      None

Returns     0 has a card inserted
            1 No card insertion

Note        None



3.4.2.3. powerDown_Api
Prototype   public static int powerDown_Api()

Function    at88sc card series power off

Input       none

Output      none

Returns     0-success
            <0-failed

Note        None



3.4.2.4. icc102ReadMfrsShortCode_Api
Prototype   public static byte[] icc102ReadMfrsLoneCode_Api()

Function    Read vandor id

Input       none

Output      none

Returns     2-byte vendor code or null

Note        None



3.4.2.5. icc102ReadMfrsLoneCode_Api
Prototype   public static byte[] icc102ReadMfrsLoneCode_Api()

Function    Read vandor id

Input       none

Output      none

Returns     8-byte vendor code or null

Note        None



3.4.2.6. icc102ReadPwdErrorCount_Api
Prototype   public static int icc102ReadPwdErrorCount_Api()

Function    get the acount of password validation errors

Input       none

Output      none

Returns     >=0-the count of errors,between 0x00 and 0x04
            <0-error code

Note        None
3.4.2.7. icc102ReadCodeProtectedBlock_Api
Prototype   public static int icc102ReadCodeProtectedBlock_Api(int offset, int len, byte[]

            buffer)

Function    get the code’s protection area, you should make ensure that the result of offset

            plus len less than 8 or equels to 8

Input       offset-[in]Relative address offset ,between 0x00 and 0x07
            len-[in]the length to read,between 0x01 and 0x08
            buffer-[in]buffer

Output      none

Returns     0-success
            <0-errorcode

Note        None



3.4.2.8. icc102ReadTestBlock_Api
Prototype   public static byte[] icc102ReadTestBlock_Api()

Function    get the contents of the test area and return the contents of the two-byte test area

Input       none

Output      none

Returns     two bytes contents of the area or null

Note        None



3.4.2.9. getSCAC_CPZ_Data
Prototype   private static byte[] getSCAC_CPZ_Data(int offset, int len)

Function    Obtain any continuous combination data of SCAC and CPZ region

Input       offset-[in]the offset, between 12 and 21
            len-[in]the length of the data to get,10 at most

Output      none

Returns     the datas that got

Note        none
3.4.2.10.get102FZ_IZ_Data
Prototype   private static byte[] get102FZ_IZ_Data(int offset, int len)

Function    Get any continuous combination data of FZ and IZ

Input       offset-[in]the offset
            len-[in]the length of data to get

Output      none

Returns     the data that got

Note        none



3.4.2.11.get102CardZeroAreaData
Prototype   private static byte[] get102CardZeroAreaData(int offset, int len)

Function    Obtain 0 to 175bit continuous data in 0 region (except SC)

Input       offset-[in]the offset
            len-[in]the length of data to get

Output      none

Returns     the data that got
            null means failed

Note        none



3.4.2.12.icc102ReadAppArea_Api
Prototype   public static int icc102ReadAppArea_Api(int appIndex, int offset, int len, byte[]

            buffer)

Function    Read the application area

Input       appIndex-[in]application area id, 0x00,0x01 and 0x02 are aviliable
            offset-[in]Relative address migration
                   appIndex == 0:between 0 and 21
                   appIndex == 1:between 0x00 and 0x3F+6
                   appIndex == 3:between 0x00 and 0x3F+4
            len-[in]the length to read
                appIndex == 0:between 1 and 22
               appIndex == 1:between 0x01 and 0x40+6
               appIndex == 2:between 0x01 and 0x40+4
            buffer-[in]buffer

Output      none

Returns     0-success
            <0-error code

Note        The prefix 0x40 is application area of the corresponding area id and the later is

            the EZ area of corresponding area id when offset is 1 or 2



3.4.2.13.icc102WriteCardMfrsData_Api
Prototype   public static int icc102WriteCardMfrsData_Api(byte[] data)

Function    Writes 8-byte card vandor id

Input       data-[in]the vandor id

Output      none

Returns     0-success
            <0:error code

Note        none



3.4.2.14.icc102WriteTestBlock_Api
Prototype   public static int icc102WriteTestBlock_Api(byte[] data)

Function    writes 2-byte test area code

Input       data-[in]the data to write

Output      none

Returns     0-success
            <0-error code

Note        none



3.4.2.15.icc102WriteCodeProtectedBlock_Api
Prototype   public static int icc102WriteCodeProtectedBlock_Api(int offset, int len, byte[]
            data)

Function    write code’s protected area

Input       offset-[in]Relative address migration,between 0x00 and 0x07
            len-[in]the length of data to write,between 0x01 and 0x08
            data-[in]the data to write

Output      none

Returns     0-succecss
            <0-failed

Note



3.4.2.16.icc102WriteAppArea_Api
Prototype   public static int icc102WriteAppArea_Api(byte appArea, byte addrOffset,

            byte[] writeData)

Function    write datas to the application area by AT88SC102 chip card

Input       appArea-[in] application area,0x01 or 0x02 can be selected
            addrOffset-[in]Relative address migration
                    appArea == 0x01:between 0x00 and 0x45
                    appArea == 0x02:between 0x00 and 0x43
            writeData-[in]the data to write,it’s length should between 0x01 and 0x46 when

            appArea is 0x01 and between 0x00 and 0x44 when appArea is 0x02

Output      none

Returns     0-success
            <0-error code

Note        The prefix 0x40 is application area of the corresponding area code and and the

            later is the EZ area of the corresponding area id



3.4.2.17.write102CardZeroData
Prototype   public static int icc102WriteAppArea_Api(byte appArea, byte addrOffset,

            byte[] writeData)

Function    AT88SC102 chip card write data --- write to application area
Input       appArea-[in]the id of application area, 0x01 or 0x02
            addrOffset-[in]Relative address migration, 0x00~0x45/0x00~0x43
            writeData-[in]the data to write,length: 0x01~0x46/0x00~0x44

Output      none

Returns     0-success
            <0 error code

Note        The prefix 0x40 is the area code application area and the following is the area

            code EZ area



3.4.2.18.icc102VerifyPwd_Api
Prototype   public static int icc102VerifyPwd_Api(byte[] key)

Function    Verify the password by AT88SC102 chip card

Input       key-[in]key

Output      none

Returns     0-success
            <0-error code

Note        none



3.4.2.19.icc102UpdatePwd_Api
Prototype   public static int icc102UpdatePwd_Api(byte[] key)

Function    update the password by AT88SC102

Input       key-[in]key

Output      none

Returns     0-success
            <0-error code

Note        none
3.4.2.20.icc102CheckCardType_Api
Prototype   public static int icc102CheckCardType_Api(byte[] cardType)

Function    get the type by AT88SC102

Input       cardType-[in] the type of card,0x0102(two bytes)

Output      none

Returns     0-success
            <0-error code

Note        none



3.4.2.21.GetEzKey
Prototype   public static int GetEzKey(int zone, int len, byte[] bKey)

Function    Gets the erase key for ez zone

Input       zone-[in]the id of application area,0x01 or 0x02
            len-[in]length of data
               zone == 0x01:between 0x01 and 0x06
               zone == 0x02:between 0x01 and 0x04

Output      bKey-[out]the pritate key

Returns     ezkey-success
            -1-failed

Note



3.4.2.22.Verify102EzKey_Api
Prototype   public static int Verify102EzKey_Api(int zone, int len, byte[] bKey)

Function    Verify the erase key for ez zone

Input       zone-[in]the id of application area,0x01 or 0x02
            len-[in]the length of data
               zone == 0x01:between 0x01 and 0x06
               zone == 0x02:between 0x01 and 0x04
            bKey-[in]the key to be verified

Output      none
Returns     0-success
            else-failed

Note        none



3.4.2.23.EarseEzData_Api
Prototype   public static int EarseEzData_Api(int zone, int offset, int len)

Function    earse the data of application area

Input       zone-[in]the id of application area,0x01 or 0x02
            offset-[in]The relative address offset,between 0x00 and 0x3F
            len-[in]the data’s length,between 0x01 and 0x40

Output      none

Returns     0-success
            <0-error code

Note        none



3.4.2.24.icc102ReadErrorCountBlock_Api
Prototype   public static int icc102ReadErrorCountBlock_Api(byte[] errorCount)

Function    get the data in the password check error count area by AT88SC102 chip card

Input       errorCount-[in]the error conunt data(two bytes)

Output      none

Returns     0-success
            <0-error code

Note



3.4.2.25.icc1608Read_Api
Prototype   public static int icc1608Read_Api(byte userArea, byte addr, byte[] readData)

Function    Continuous reading by AT88SC1608

Input       userArea-[in]the id of users area(one byte),between 0x00 and 0x07
            addr-[in] address between 0x00 and 0xFF
            readData-[in] the datas to read,its length should be 0x100 at most in users area

Output      none

Returns     >0:the length of datas that read
            <0:error code

Note        none



3.4.2.26.icc1608Write_Api
Prototype   public static int icc1608Write_Api(byte userArea, byte addr, byte[] writeData)

Function    Continuous writing by AT88SC1608

Input       userArea-[in]the id of users area(one byte),between 0x00 and 0x07
            addr-[in]address between 0x00 and 0xFF
            writeData-[in]the datas to write,its length should bu 0x100 at most in users area

Output      none

Returns     0-success
            <0:error code

Note        none



3.4.2.27.icc1608VerifyKey_Api
Prototype   public static int icc1608VerifyKey_Api(byte keyMode, byte[] key, byte

            areaCode)

Function    select the key used for verification

Input       keyMode-[in] the pattern of key,
                            mode 0x00:both the write and read keys exist
                            mode 0x01:just read key exist
                            mode 0x02:just write key exist
            key-[in] the key,both write an read keys 3 are bytes
            areaCode-[in] application area id,between 0x00 and 0x07

Output      none

Returns     0-success
            <0-error code
Note        none



3.4.2.28.icc1608SelectUserArea_Api
Prototype   public static int icc1608SelectUserArea_Api(byte userArea)

Function    select the user area

Input       userArea-[in] user area id,between 0x00 and 0x07

Output      none

Returns     0-success
            <0-error code

Note        none



3.4.2.29.icc1608Certify_Api
Prototype   public static int icc1608Certify_Api()

Function    AT88SC1608 certify

Input       none

Output      none

Returns     0-success
            <0-error code

Note        none



3.4.2.30.icc1608CheckCardType_Api
Prototype   public static int icc1608CheckCardType_Api(byte[] cardType)

Function    AT88SC1608 check the type of card

Input       cardType-[in] the type of card,two bytes,0x0402

Output      none

Returns     0-success
            <0-error code

Note        none
3.4.2.31.Get1608ConfigZoneData
Prototype   public static int Get1608ConfigZoneData(int offset, int len, byte[] data_buffer)

Function    Read the data in the configuration area

Input       offset-[in]The relative address offset, between 0x00 and 0x7F
            len-[in]the length of configuration area,0x80 at most

Output      data_buffer-[out]datas that read

Returns     >0-the length that has been read
            <0-error code

Note        none
3.5. Class BmpOper
3.5.1.             Interfaces

3.5.1.1. BmpTurn240To80
Prototype   public static int BmpTurn240To80(byte[] Src, byte[] Dest)

Function    Convert the BMP monochrome image to 240*80

Input       Src-[in]Image data to be converted

Output      Dest-[int]Output converted picture data

Returns     0-success
            else-failed

Note        use jni to convert



3.5.1.2. ImageLower_Api
Prototype   public static int ImageLower_Api(byte[] Src, byte[] Dest)

Function    Compress the image into monochrome

Input       Src-[in]Image data to be converted

Output      Dest-[in]Output converted picture data

Returns     0-success
            else-failed

Note        none
3.6.Class ContactlessApi
3.6.1.User Permissions
<uses-permission android:name="android.permission.CLOUDPOS_CONTACTLESS_CARD"/>

3.6.2.Private Constants
3.6.3.Interfaces

3.6.3.1.cardAAnticollision_Api
Prototype   public static int cardAAnticollision_Api(byte[] uid, int[] sak)

Function    TYPE A card conflict prevention

Input       none

Output      uid -[out]the uid array

            sak -[out]adk array,the first value is sak value that outputs from sak 数组首位为



            sak 输出的 sak 值

Returns     >0-the length of uid array
            <0-error code

Note        none



3.6.3.2.cardADeselect_Api
Prototype   public static int cardADeselect_Api()

Function    TYPE A card deselect

Input       none

Output      none

Returns     0-success
            <0-error code

Note        none



3.6.3.3.cardAPause_Api
Prototype   public static int cardAPause_Api()

Function    TYPE A card pause

Input       none
Output      none

Returns     0-success
            <0-error code

Note        none



3.6.3.4.cardARats_Api
Prototype   public static int cardARats_Api(int mode, byte[] ats)

Function    TYPE A card answers the request

Input       mode -[in] pattern: 0(has no pps), 1(has ps)

Output      ats -[out]get ats data array

Returns     >0-the length of ats data
            <0-error code

Note        none



3.6.3.5.cardAReq_Api
Prototype   public static int cardAReq_Api(byte[] ATQA)

Function    TYPE A card request

Input       none

Output      ATQA -[out]the returned data that request by card

Returns     >0-the length of data
            <0-error code

Note        none



3.6.3.6.cardAWakeUp_Api
Prototype   public static int cardAWakeUp_Api(byte[] ATQA)

Function    TYPE A card request

Input       none

Output      ATQA -[out]the returned data that request by card
Returns     >0-success
            <0-error code

Note        none



3.6.3.7.closeField_Api
Prototype   public static int closeField_Api()

Function    contactless card closes field strength

Input       none

Output      none

Returns     0-success
            <0-error code

Note        none



3.6.3.8.M1Decrement_Api
Prototype   public static int M1Decrement_Api(int blockNum, int value)

Function    M1 impairment in Taiwan (excluding transfer)

Input       blockNum -[in]block number
            value -[in]the value to impairment

Output      none

Returns     0-success
            <0-error code

Note        none



3.6.3.9.M1Increment_Api
Prototype   public static int M1Increment_Api(int blockNum,int value)

Function    M1 adds value (excluding transfer)

Input       blockNum-[in]the block number
            value-[in]the value to add

Output      none
Returns     0-success
            <0-error code

Note        none



3.6.3.10.M1Restore_Api
Prototype   public static int M1Restore_Api(int blockNum)

Function    M1 restore

Input       blockNum-[in]block number

Output      none

Returns     0-success
            <0-error code

Note        none



3.6.3.11.M1Transfer_Api
Prototype   public static int M1Transfer_Api(int blockNum)

Function    M1 transfer

Input       blockNum-[in]block number

Output      none

Returns     0-success
            <0-error code

Note        none



3.6.3.12.openField_Api
Prototype   public static int openField_Api()

Function    Contactless card opens field strength

Input       none

Output      none

Returns     0-success
            <0-error code
Note        none



3.6.3.13.readSecurityMem_Api
Prototype   public static int readSecurityMem_Api(int offset, byte[] dataOut, int dataLen)

Function    get datas from se,5k at most

Input       offset -[in]address offset, >=0
            dataLen -[in]the length of data that read

Output      dataOut -[in]the data that output

Returns     >0-the length that read
            <0-error code

Note        none



3.6.3.14.writeSecurityMem_Api
Prototype   public static int writeSecurityMem_Api(int offset, byte[] data, int dataLen)

Function    write datas to se,5k at most

Input       offset -[in]address offset, >=0
            data -[in]the datas to write
            dataLen -[in]the length of datas

Output      none

Returns     0-success
            <0-error code

Note        none
3.7.Class FileApi
3.7.1.Interfaces

3.7.1.1.ChangePrivateProfileSectionName_Api
Prototype   public static int ChangePrivateProfileSectionName_Api(
                                      java.lang.String lpOldAppName,
                                      java.lang.String lpNewAppName,
                                      java.lang.String lpFileName)

Function    Change the ini type configuration file for the entire section information.

Input       lpOldAppName - [in] old section name
            lpNewAppName - [in] New section name
            lpFileName - [in]ini file name

Output      None

Returns     0-Failure;
            1-Success

Note        none



3.7.1.2.CreateAppFolder
Prototype   public static void CreateAppFolder(java.lang.String FileName)

Function    Create Folde

Input       FileName - folder name containing the path.

Output      None

Returns     None

Note        None



3.7.1.3.DeleteDebug_Api
Prototype   public static int DeleteDebug_Api(java.lang.String fileName)

Function    Delete files or folders

Input       FileName - fileName or folder name, both of which must contain paths.

Output      None

Returns     0: successful
            1: Failed

Note        None



3.7.1.4.DelFile_Api
Prototype   public static int DelFile_Api(java.lang.String FileName)

Function    Delete a file

Input       FileName - folder name containing the path.

Output      None

Returns     0: successful
            1: Failed

Note        None



3.7.1.5.FileCRC32
Prototype   public static int FileCRC32(java.lang.String FileName, int len,byte[] lCRC)

Function    Change the entire section information of the ini type configuration file

Input       lpOldAppName - [in] The original section name
            lpNewAppName - [in] The new section name
            lpFileName - [in] The ini file name

Output      None

Returns     0- failed
            1- success

Note        none



3.7.1.6.getAppDataPath
Prototype   public static java.lang.String getAppDataPath()

Function    Gets the application store data path.

Input       FileName - folder name containing the path.

Output      None

Returns     Stored data path/MNT/sdcard/mtd0 / app/data
Note        None



3.7.1.7.getAppPath
Prototype   public static java.lang.String getAppPath()

Function    Gets the application storage path.

Input       None

Output      None

Returns     Full path such as/MNT /sdcard/mtd0/app.

Note        None



3.7.1.8.getFileNameEncoding
Prototype   public static java.lang.String getFileNameEncoding()

Function    Get the file encoding format GBK utf8, etc.

Input       None

Output      None

Returns     Specific encoding format.

Note        None



3.7.1.9.GetFileSize_Api
Prototype   public static int GetFileSize_Api(java.lang.String FileName)

Function    Get file length

Input       FileName - folder name containing the path.

Output      None

Returns     File length (in byte)

Note        None



3.7.1.10.GetPrivateProfileSection_Api
Prototype   public static int GetPrivateProfileSection_Api(
                                                           java.lang.String lpAppName,
                                   byte[] lpReturnedString,
                                                           java.lang.String lpFileName)

Function    Read the entire section of the ini type configuration file.

Input       lpAppName - [in] section name
            nSize - [in]lpReturnedString Length
            lpFileName - [in]ini file name
            lpReturnedString - [out] Full information for section []

Output      None

Returns     0-Failure;
            1-Success

Note        GetPrivateProfileSection_Api("MANAGE"            , AppNu      ,   sizeof(AppNu)   ,

            MULTITASKINI);



3.7.1.11.GetPrivateProfileString_Api
Prototype   public static int GetPrivateProfileString_Api(
                                                   java.lang.String lpAppName,
                               java.lang.String lpKeyName,
                               java.lang.String lpDefault,
                               byte[] lpReturnedString,
                               java.lang.String lpFileName)

Function    Read ini type configuration file section information

Input       lpAppName - [in] section name
            lpKeyName - Configuration information in the [in] section
            lpDefault - [in] Default value if the information in the section is empty
            nSize - [in]lpReturnedString Length
            lpFileName - [in]ini file name

Output      lpReturnedString - String inside the [out] section

Returns     0-Failure;
            1-Success
Note        GetPrivateProfileString_Api("MANAGE"             ,   "app"   ,   "0",   AppNu   ,

            sizeof(AppNu) , MULTITASKINI);



3.7.1.12.getPublicPath
Prototype   public static java.lang.String getPublicPath()

Function    Get application public path

Input       FileName - folder name containing the path.

Output      None

Returns     public path /mnt/sdcard/mtd0/public

Note        None



3.7.1.13.ReadAppShare_Api
Prototype   public static int ReadAppShare_Api(int Addr,byte[] OutData, int RLen)

Function    read public space, our company's products have 200K multi-application shared

            space

Input       Addr -[in]the address to read
            RLen - the length to read

Output      OutData - the data that read

Returns     0-sucess
            else-failed

Note        None



3.7.1.14.ReadFile_Api
Prototype   public static int ReadFile_Api(java.lang.String FileName,
                                byte[] Buf,
                                int Start,
                                byte[] Length)

Function    Read data from anywhere in the file

Input       FileName - Pathname of the [in] file
            Start - [in] The position to start reading
            Length - [in,out] [in] Pointer to read length [out] Pointer to actually read length

Output      Buf - [out] target buffer, read out in buf

Returns     0-Successful
            1-failed
            2-files to the end
            3-file does not exist
            4-Long read data length

Note        None



3.7.1.15.ReadFileLine
Prototype   public static java.util.List ReadFileLine(java.lang.String fileName)

Function    read file by line and store in a list

Input       fileName-[in]file name or folder name,both of them must contain full paths

Output      none

Returns     A list containing the contents of the file

Note        none



3.7.1.16.ReNameFile_Api
Prototype   public static int ReNameFile_Api(java.lang.String OldfName,
                                 java.lang.String NewFileName)

Function    Rename the file.

Input       OldfName - [in] Old filename
            NewFileName - [in] New file name

Output      None

Returns     0: Renamed successfully
            Miscellaneous: Rename failed

Note        None
3.7.1.17.SaveWholeFile_Api
Prototype   public static int SaveWholeFile_Api(java.lang.String FileName,
                                byte[] Buf, int Len)

Function    Write the entire file (delete the original file first, then write the entire file from

            scratch)

Input       FileName - Pathname of the [in] file
            Buf - [in] Data to write to file
            Len - [in] length to write

Output      None

Returns     0-Successful
            Other-failure

Note        None



3.7.1.18.setFileNameEncoding
Prototype   public static void setFileNameEncoding(java.lang.String fileNameEncoding)

Function    Set the encoding scheme

Input       fileNameEncoding - [in] encoding format gbk utf8 etc

Output      None

Returns     None

Note        None



3.7.1.19.WriteAppShare_Api
Prototype   public static int WriteAppShare_Api(int Addr, byte[] InData, int WLen)

Function    write the public space, our company's products have 200K multi-application

            shared space

Input       Addr -[in] the address to write
            InData -[in] the data to wirte
            WLen -[in] the length to wirte

Output      none

Returns     0-success
            else-failed

Note        none



3.7.1.20.WriteFile_Api
Prototype   public static int WriteFile_Api(java.lang.String FileName, byte[] Buf,
                             int Start, int Length)

Function    Write data to any place in the file.

Input       FileName - Pathname of the [in] file
            Buf - [in] Initial position to modify
            Start - [in] Data to write to file
            Length - [in] Length to write

Output      None

Returns     0-Successful
            1-failed
            2-passed start wrong

Note        None



3.7.1.21.WritePrivateProfileString_Api
Prototype   public static int WritePrivateProfileString_Api(java.lang.String lpAppName,
                                      java.lang.String lpKeyName,
                                      java.lang.String lpString,
                                     java.lang.String lpFileName)

Function    Write the ini type configuration file section information.

Input       lpAppName - [in] section name
            lpKeyName - Configuration information in the [in] section
            lpString - [in] string to write section information
            lpFileName - [in]ini file name

Output      None

Returns     0-Failure;
       1-Success

Note   None
3.8.Class FingerApi
3.8.1.Interfaces
These APIs are only for device that has finger hardware module.


3.8.1.1.FingerCheckIDTemplate_Api
Prototype     public static int FingerCheckIDTemplate_Api(int fingerID)

Function      Check whether the specified fingerprint database index exists.

Input         fingerID

Output        None

Returns       0 - exist
              Other – not exist

Note          None



3.8.1.2.FingerClose_Api
Prototype     public static int FingerClose_Api()

Function      Close fingerprint module.

Input         None

Output        None

Returns       0 - success
              Other - abnormal error

Note          None



3.8.1.3.FingerDelete_Api
Prototype     public static int FingerDelete_Api (int fingerIndex)

Function      Delete fingerprint information stored under specified index.

Input         fingerIndex

Output        None

Returns       0 - success
              Other - abnormal error

Note          None
3.8.1.4.FingerDeleteAll_Api
Prototype   public static int FingerDeleteAll_Api()

Function    Delete all fingerprint information.

Input       None

Output      None

Returns     0 - success
            Other - abnormal error

Note        None



3.8.1.5.FingerEnterFp_Api
Prototype   Publicstatic int FingerEnterFp_Api(int fingerID,
                                                  int entryCount, int timeOutMs,
                                                   FingerApi.IFingerEntryProcess listener)

Function    Input fingerprint (time-consuming operation, remember to open sub-threads).

Input       fingerID
            entryCount
            timeOutMs
            listener

Output      None

Returns     0 - success
            Other – error or no match

Note        Threads need to be opened to avoid blocking UI threads



3.8.1.6.FingerExportChar_Api
Prototype   public static int FingerExportChar_Api(int slotId, byte[] buf)

Function    export the characteristic template stored in the fingerprint module to the host

            computer

Input       slotld-[in]The index id that stores the template data
            buf-[in]buffer,not less than 2048 bytes

Output      none
Returns     0-success
            <0:error code

Note        none



3.8.1.7.FingerGetCount_Api
Prototype   public static int FingerGetCount_Api()

Function    Number of fingerprint information stored.

Input       None

Output      None

Returns     >=0 - success
            <0 - error

Note        None



3.8.1.8.FingerGetDevInfo_Api
Prototype   public static int FingerGetDevInfo_Api(byte[] devInfo)

Function    Get fingerprint device information.

Input       None

Output      devInfo

Returns     None

Note        devInfo is 64 bytes



3.8.1.9.FingerGetDevSN_Api
Prototype   public static int FingerGetDevSN_Api(byte[] sn)

Function    Get fingerprint device sn.

Input       None

Output      sn

Returns     None

Note        sn is 32 bytes
3.8.1.10.FingerGetNextEmptyID_Api
Prototype   public static int FingerGetNextEmptyID_Api()

Function    Get the next fingerprint database index ID that can be entered into the

            fingerprint.

Input       None

Output      None

Returns     >=0 - next fingerprint database index ID
            <0 - error

Note        None



3.8.1.11.FingerGrabImg_Api
Prototype   public static int FingerGrabImg_Api(int timeOutMs,
            FingerApi.IFingerGrapImgProcess listener)
Function    Used for single image acquisition, and put the acquired image information into

            the buffer.

Input       timeOutMs - time out
            listener – backcall func

Output      None

Returns     0 - success
            Other – error or no match

Note        Call FingerUpImage_Api to get image information after successful acquisition



3.8.1.12.FingerOpen_Api
Prototype   public static int FingerOpen_Api()

Function    Open fingerprint module.

Input       None

Output      None

Returns     0 - success
            Other - abnormal error

Note        None
3.8.1.13.FingerUpImage_Api
Prototype   public static int FingerUpImage_Api(byte[] imageData)

Function    Get the image out of the buffer.

Input       None

Output      imageData

Returns     None

Note        imageData buffer size is 208*288



3.8.1.14.FingerVerify_Api
Prototype   public static int FingerVerify_Api(int fingerID,
            FingerApi.IFingerGrapImgProcess listener)
Function    Verify that the input fingerprint matches the fingerprint of the specified

            fingerprint database ID.

Input       fingerID
            listener - Callback function for checking input fingerprints

Output      None

Returns     0 - success
            Other – error or no match

Note        Threads need to be opened to avoid blocking UI threads



3.8.1.15.FingerVerifyAll_Api
Prototype   public
            static int FingerVerifyAll_Api(FingerApi.IFingerGrapImgProcess li
            stener)
Function    Verify that the input fingerprints are already in the fingerprint database.

Input       listener - Callback function for checking input fingerprints

Output      None

Returns     >=0 – success, return id
            Other – fail

Note        Threads need to be opened to avoid blocking UI threads
3.9.Class IcApi
3.9.1.Private Constants
                Name                 Value                       Note

AT24C02                              1

AT24C08                              2

AT24C16                              3

AT88SC102                            4

AT88SC1604                           5

AT88C1608                            6

CPUCARD                              7

SLE44X2                              8

SLE44X8                              9



3.9.2.Interfaces
    These APIs are for A90/A70, not for A70SV because A70SV not have hardware module for

dealing with ICC card.


3.9.2.1.IccDetect_Api
Prototype    public static int IccDetect_Api(int CardNo)

Function     Check if the specified card holder has a card.

Input        CardNo - [in] CardNo. : 0 big card holder.

Output       None

Returns      0 has a card inserted
             1 No card inserted

Note         None



3.9.2.2.IccDetectOut_Api
Prototype    public static int IccDetectOut_Api(int CardNo)

Function     Check whether the specified card holder has been pulled.

Input        CardNo - [in] CardNo. : 1 PSAM card seat 1 2 PSAM card seat 2.

Output       None

Returns      0-Dialed card
            1-card is still in the card slot

Note        None



3.9.2.3.IccGetCardType_Api
Prototype   public static int IccGetCardType_Api()

Function    Get the type of IC card

Input       None

Output      None

Returns     None

Note        None



3.9.2.4.IccInit_Api
Prototype   public static int IccInit_Api(int CardNo,int VccMode, byte[] RstBuf,
                                               byte[] Rlen)

Function    Reset the card holder.

Input       CardNo - [in] deck number
            Bit0-bit3 Specific deck number 0 : Big deck 1 : PSAM deck 1 : PSAM deck 2
             Bit6-bit4: Speed 001 Low speed card 010 Medium speed card 100 High speed

            card 000 Default rate bit7 : Whether EMV standard is used : 0 Use 1 Not used
            VccMode - [in] Voltage 0x01 1.5v          0x02 3v   0x03 5v

Output      RstBuf - [out] Reset Return Data
            Rlen - [out] reset return data length

Returns     0-Successful
            1-failed

Note        None



3.9.2.5.IccIsoCommand_Api
Prototype   public static void IccIsoCommand_Api(int CardNo,
                                  ApduSend apduSend,
                                  ApduResp apduResp)

Function    Send the command to the IC card and get the data from the card at the same

            time.

Input       CardNo - [in] Deck number 0 Large deck 1 PSAM deck 1 2 PSAM deck 2
            apduSend - The object sent by [in]Apdu

Output      apduResp - The object that [out]Apdu accepts

Returns     None

Note        None



3.9.2.6.IccPowerOff_Api
Prototype   public static void IccPowerOff_Api(int CardNo)

Function    Lower power to the specified card holder.

Input       CardNo - [in] seat number 0 big card 1 PSAM card 1 2 PSAM card 2.

Output      None

Returns     None

Note        None



3.9.2.7.Mem4442IccGetPwdCount_Api
Prototype   public static int Mem4442IccGetPwdCount_Api(MemCardOut pMemDataOut)

Function    Memory4442 card read card error counter and card password

Input       none

Output      pMemDataOut-[out]the infomation that cards return

Returns     0-success
            -1-failed

Note        none



3.9.2.8.MemIccCheck_Api
Prototype   public static int MemIccCheck_Api(MemCardInfo CardInf,
                              int InitFlag,

                              MemCardOut pMemDataOut)

Function    Check if you have a memory card and support all memory CARDS

Input       CardInf - the infomation of station accessory
            InitFlag - whether to reset, 1-reset, else-not reset
            pMemDataOut - If reset is selected, it is the information after reset; if not, it is

            the information returned by card search.

Output      none

Returns     0-has cards or reset success
            1-has no card
            2-reset failed

Note        none



3.9.2.9.MemIccPowerOff_Api
Prototype   public static int MemIccPowerOff_Api(MemCardInfo CardInf)

Function    power down the specified station accessory,it support all memory cards

Input       CardInf - the infomation of station accessory

Output      none

Returns     none

Note        none



3.9.2.10.MemIccPowerOn_Api
Prototype   public static int MemIccPowerOn_Api(MemCardInfo CardInf)

Function    power up the specified station accessory,it support all memory cards

Input       CardInf - the infomation of station accessory

Output      none

Returns     none

Note        none
3.9.2.11.MemIccPwdProc_Api
Prototype   public static int MemIccPwdProc_Api(MemCardInfo CardInf,

                                  MemCardPwd MemPwd,

                                  MemCardOut pMemDataOut)

Function    Verify or change the password of the memory card, it is used for 4442 card

Input       CardInf - [in]the infomation of station accessory

            MemPwd - [in]the infomation of password

Output      pMemDataOut - [out]the infomation retruned by card

Returns     0-success
            1-failed

Note        none



3.9.2.12.MemIccReadData_Api
Prototype   public static int MemIccReadData_Api(MemCardInfo CardInf,
                                    int StartAddr,
                                    int ReadLen,
                                    MemCardOut pMemDataOut)

Function    read datas of memory card,it support all memory cards

Input       CardInf - [in]the infomation of station accessory
            StartAddr - [in]start address
            ReadLen - [in]the length of data to read

Output      pMemDataOut - [out]the data that read

Returns     0-success
            1-failed

Note        none



3.9.2.13.MemIccWriteData_Api
Prototype   public static int MemIccWriteData_Api(MemCardInfo CardInf,
                                     byte[] WriteBuf,
                                     int StartAddr,
                                   int WriteLen,
                                   MemCardOut pMemDataOut)

Function   write datas to memory card,it support all memory cards

Input      CardInf - [in]the infomation of station accessory
           WriteBuf - [in]the buff of data to write
           StartAddr - [in]start address
           WriteLen - [in]the length of data to write

Output     pMemDataOut - [out]the infomation that chad returns

Returns    1-success
           2-failed

Note       none
3.10.Class KeyApi
3.10.1.Interfaces

3.10.1.1.GetKey_Api
Prototype   public static int GetKey_Api()

Function    read the value of the first key in buffer of keyboard

Input       none

Output      none

Return      0x00:the buffer is empty
            F1 0x14
            F2 0x15
            F3 0x10
            F4 0x20
            '1': DIGITAL 1 0x31
            '2': DIGITAL 2 0x32
            '3': DIGITAL 3 0x33
            '4': DIGITAL 4 0x34
            '5': DIGITAL 5 0x35
            '6': DIGITAL 6 0x36
            '7': DIGITAL 7 0x37
            '8': DIGITAL 8 0x38
            '9': DIGITAL 9 0x39
            '0': DIGITAL 0 0x30
            key backspace: CLEAR 0x1A
            key cancel: ESC 0x1B
            key enter: ENTER 0x0D
            key on/off: POWEROFF 0x1F

            '▲' : PGUP 0x0A


            '▼' : PGDWON 0x0B

Note        none
3.10.1.2.KBFlush_Api
Prototype   public static void KBFlush_Api()

Function    clear all the unread keys in the buffer of keyboard

Input       none

Output      none

Return      none

Note        none



3.10.1.3.SetKey_Api
Prototype   public static void SetKey_Api(int key)

Function    set a value of key into buffer for GetKey_Api to use it

Input       key-[in]the value of key

Output      none

Return      F1 0x14
            F2 0x15
            F3 0x10
            F4 0x20
            '1': DIGITAL 1 0x31
            '2': DIGITAL 2 0x32
            '3': DIGITAL 3 0x33
            '4': DIGITAL 4 0x34
            '5': DIGITAL 5 0x35
            '6': DIGITAL 6 0x36
            '7': DIGITAL 7 0x37
            '8': DIGITAL 8 0x38
            '9': DIGITAL 9 0x39
            '0': DIGITAL 0 0x30
            key backspace: CLEAR 0x1A
            key cancel: ESC 0x1B
            key enter: ENTER 0x0D
            key on/off: POWEROFF 0x1F

            '▲' : PGUP 0x0A


            '▼' : PGDWON 0x0B

Note        none



3.10.1.4.TipAndWaitEx_Api
Prototype   public static void TipAndWaitEx_Api(java.lang.String fmt)

Function    show messages on screen and wait for pressing keys

Input       fmt-[in]messages that shown on the screen

Output      none

Return      none

Note        none



3.10.1.5.WaitAnyKey_Api
Prototype   public static int WaitAnyKey_Api(int iTimeOut)

Function    wait for any key to be pressed

Input       iTimeOut-[in]time-out period (s)

Output      none

Return      the value of key that returns

Note        F1 0x14
            F2 0x15
            F3 0x10
            F4 0x20
            '1': DIGITAL 1 0x31
            '2': DIGITAL 2 0x32
            '3': DIGITAL 3 0x33
            '4': DIGITAL 4 0x34
            '5': DIGITAL 5 0x35
            '6': DIGITAL 6 0x36
            '7': DIGITAL 7 0x37
            '8': DIGITAL 8 0x38
            '9': DIGITAL 9 0x39
            '0': DIGITAL 0 0x30
            key backspace: CLEAR 0x1A
            key cancel: ESC 0x1B
            key enter: ENTER 0x0D
            key on/off: POWEROFF 0x1F

            '▲' : PGUP 0x0A


            '▼' : PGDWON 0x0B




3.10.1.6.WaitEnterAndEscKey_Api
Prototype   public static int WaitEnterAndEscKey_Api(int TimeOut)

Function    wait for pressing enter or cancel

Input       TimeOut - [in]time-out period

Output      none

Return      the key of enter or cancel
            TIMEOUT(-2):time out

Note        none



3.10.1.7.WaitKey_Api
Prototype   public static int WaitKey_Api(int TimeOut)

Function    wait for keys to be pressed

Input       TimeOut-[in]time-out period
Output      none

Return      F1 0x14
            F2 0x15
            F3 0x10
            F4 0x20
            '1': DIGITAL 1 0x31
            '2': DIGITAL 2 0x32
            '3': DIGITAL 3 0x33
            '4': DIGITAL 4 0x34
            '5': DIGITAL 5 0x35
            '6': DIGITAL 6 0x36
            '7': DIGITAL 7 0x37
            '8': DIGITAL 8 0x38
            '9': DIGITAL 9 0x39
            '0': DIGITAL 0 0x30
            key backspace: CLEAR 0x1A
            key cancel: ESC 0x1B
            key enter: ENTER 0x0D
            key on/off: POWEROFF 0x1F

            '▲' : PGUP 0x0A


            '▼' : PGDWON 0x0B

Note        none



3.10.1.8.WaitKey_Api
Prototype   public static int WaitKey_Api()

Function    wait for keys to be pressed,block

Input       none

Output      none

Return      F1 0x14
       F2 0x15
       F3 0x10
       F4 0x20
       '1': DIGITAL 1 0x31
       '2': DIGITAL 2 0x32
       '3': DIGITAL 3 0x33
       '4': DIGITAL 4 0x34
       '5': DIGITAL 5 0x35
       '6': DIGITAL 6 0x36
       '7': DIGITAL 7 0x37
       '8': DIGITAL 8 0x38
       '9': DIGITAL 9 0x39
       '0': DIGITAL 0 0x30
       key backspace: CLEAR 0x1A
       key cancel: ESC 0x1B
       key enter: ENTER 0x0D
       key on/off: POWEROFF 0x1F
       '▲' : PGUP 0x0A
       '▼' : PGDWON 0x0B

Note   none
3.11.Class LcdApi
3.11.1.Private Constants
               Name                  Value                              Note

LED_RED                              1       the colors of led lights

LED_BLUE                             2

LED_GREEN                            3

LED_YELLOW                           4

LED_DEV_NOT_OPEN                     -114    the states of led lights

LED_DEV_IS_OCCUPIED                  -111

LED_ALREADY_OPENED                   -112

LED_DEV_ERROR                        -113



3.11.2.Interfaces

3.11.2.1.delRepeatRow
Prototype   public static void delRepeatRow(int row, int style)

Function    Delete data with duplicate rows

Input       row-[in]line
            style-[in]style

Output      none

Return      none

Note        none



3.11.2.2.DispTitleLib(deprecated)
Prototype   public static void DispTitleLib(java.lang.String Title)

Function    show title at the first line

Input       Title-[in]title

Output      none

Return      none

Note        none
3.11.2.3.DrawButton_Api
Prototype   public static void DrawButton_Api(int row, int col, java.lang.String str,
                               int keyCode, int atr)

Function    show a button

Input       row -[in]row
            col -[in]column
            str -[in]the content to display
            keyCode - [in]the code of a key
            atr -[in]attribute(FDISP|CDISP)

Output      none

Return      none

Note        none



3.11.2.4.DrawLineRam(deprecated)
Prototype   public static void DrawLineRam(int row, int col, byte[] str, int atr)

Function    Draw a line according to str

Input       row -[in]row
            col -[in]column
            str -[in]the content to display
            atr -[in]attribute(FDISP|CDISP)

Output      none

Return      none

Note        none



3.11.2.5.DrawProgressBar_Api
Prototype   public static void DrawProgressBar_Api(int row, int col, int atr, int barStyle)

Function    show a progress bar

Input       row -[in]row
            col -[in]column
            atr -[in]attribute(FDISP|CDISP)
            barStyle-[in]style of progress bar

Output      none

Return      none

Note        none



3.11.2.6.DrawRadioButton_Api
Prototype   public static void DrawRadioButton_Api(int row, int col, int width, int height,
                                  java.lang.String[] text,int[] value,
                                  int atr,int isCheck,int orientation)

Function    show a radio button

Input       row -[in]row
            col -[in]column
            width -[in]width
            height -[in]height
            text -[in]the text of radio button
            value -[in]the value of radio button
            atr -[in]attribute(FDISP|CDISP)
            isCheck -[in]The value of the button selected by default

            orientation - 0:horizontal，1:vertical

Output      none

Return      none

Note        none



3.11.2.7.DrawRect_Api
Prototype   public static void DrawRect_Api(int row, int col, int width, int height,
                               int maxlen, int minlen, int textStyle,
                               int atr, boolean linesFlag)
Function    show an editText

Input       row -[in]row
            col -[in]column
            width -[in]width
            height -[in]height
            maxlen -[in] the maximum length of the string that entered
            minlen - [in]the minimum length of the string that entered
            textStyle -[in] the style of editText
            atr - [in]attribute(FDISP|CDISP)

            linesFlag - true:multiple lines are avilable，false:just single line is avilable

Output      none

Return      none

Note        none



3.11.2.8.DrawRect_Api
Prototype   public static void DrawRect_Api(int row, int col, int width, int height,
                               int maxlen, int minlen, int textStyle,
                               int atr, java.lang.String defaultValue,
                               boolean linesFlag)

Function    show an editText

Input       row -[in]row
            col -[in]column
            width -[in]width
            height -[in]height
            maxlen -[in] the maximum length of the string that entered
            minlen - [in]the minimum length of the string that entered
            textStyle -[in] the style of editText
            atr - [in]attribute(FDISP|CDISP)
            defaultValue-[in]default value
            linesFlag - true:multiple lines are avilable，false:just single line is avilable

Output      none

Return      none

Note        none



3.11.2.9.DrawSpinner_Api
Prototype   public static void DrawSpinner_Api(int row, int col, int width, int height,
                                 java.lang.String[] text,int[] value,
                                 int atr, int isCheck, int orientation)

Function    show a spinner

Input       row -[in]row
            col -[in]column
            width -[in]width
            height -[in]height
            text - [in]the text of button
            value - the value of button
            atr -[in]attribute(FDISP|CDISP)
            isCheck-[in]The value of the button selected by default

            orientation - 0:horizontal，1:vertical

Output      none

Return      none

Note        none



3.11.2.10.GetCurFontWidth(deprecated)
Prototype   public static void DrawLineRam(int row, int col, byte[] str, int atr)

Function    draw a line accrding to str

Input       row -[in]row
            col -[in]column
            str -[in]the content to display
            atr -[in]attribute(FDISP|CDISP)

Output      none

Return      none

Note        none



3.11.2.11.GetLineEx(deprecated)
Prototype   public static int GetLineEx(byte[] lnBuf, int maxLen, byte[] pData, int dataLen)

Function    get a line

Input       maxLen - [in]the maxmum length of datas in a line
            pData -[in]the datas
            dataLen - the length of datas

Output      lnBuf - a line of data that returns

Return      The length of the data being parsed from pData

Note        none



3.11.2.12.GetMaxCharShowInLine(deprecated)
Prototype   public static int GetMaxCharShowInLine()

Function    show a line of string,just update a line of data in memory,you should call

            LcdBrushScr() if you want to show the data

Input       none

Output      none

Return      none

Note        none



3.11.2.13.GetRowHeight(deprecated)
Prototype   public static int GetRowHeight()

Function    get the pixel height of the current font
Input       none

Output      none

Return      pixel height

Note        none



3.11.2.16.LedLightOff_Api
Prototype   public static int LedLightOff_Api(int index)

Function    power off a led light

Input       index-[in]the index of led light to power off

Output      none

Return      0-ok
            -1-error parameters

Note        none



3.11.2.17.LedLightOn_Api
Prototype   public static int LedLightOn_Api(int index)

Function    power on a led light

Input       index-[in]the index to power on

Output      none

Return      0-ok
            -1-error parameters

Note        none



3.11.2.18.LedOper_Api
Prototype   public static int LedOper_Api(int index, int oper)

Function    Turn the led light handle on or off

Input       index - [in]the index to control
            oper - [in]operation, 1-open 0-close
Output      none

Return      0-ok
            -1-error parameters

Note        none



3.11.2.19.ScrBackLight_Api(deprecated)
Prototype   public static void ScrBackLight_Api(int Time)

Function    Device screen backlight( light up automatically when pressing the keyboard,

            swiping or insert a card)

Input       Time -[in]Backlight retention time ,0--close backlight, 0xFFFF:always light on

Output      none

Return      none

Note        none



3.11.2.20.ScrBrush_Api(deprecated)
Prototype   public static void ScrBrush_Api()

Function    displays the data from the temporary cache to the screen

Input       none

Output      none

Return      none

Note        none



3.11.2.21.ScrClrLine_Api
Prototype   public static void ScrClrLine_Api(int ucStartLine, int ucEndLine)

Function    Clear spicifid lines,it won’t work if the are unreasonable

Input       ucStartLine -[in]the line to start (0~4)
            ucEndLine -[in]the line to end (0~4)

Output      none
Return      none

Note        none



3.11.2.22.ScrClrLineRam_Api(deprecated)
Prototype   public static void ScrClrLineRam_Api(int ucStartLine, int ucEndLine)

Function    none

Input       none

Output      none

Return      none

Note        none



3.11.2.23.ScrCls_Api
Prototype   public static void ScrCls_Api()

Function    clear the screen

Input       none

Output      none

Return      none

Note        none



3.11.2.24.ScrClsRam_Api
Prototype   public static void ScrClsRam_Api()

Function    clear the buffer of display

Input       none

Output      none

Return      none

Note        none
3.11.2.25.ScrDisp_Api
Prototype   public static void ScrDisp_Api(int row , int col ,java.lang.String , int atr )

Function    show a line of string

Input       row-[in]row
            col-[in]colume
            str-[in]the content to show
            atr-[in]attribute(FDISP|CDISP)

Output      none

Return      none

Note        none



3.11.2.26.ScrDisp_Api
Prototype   public static void ScrDisp_Api(int row , int col ,byte[]buf, int atr )

Function    show a line of string

Input       row-[in]row
            col-[in]colume
            buf-[in]buffer
            atr-[in]attribute(FDISP|CDISP)

Output      none

Return      none

Note        none



3.11.2.29.ScrDrawLine_Api(deprecated)
Prototype   public static void ScrDrawLine_Api(short x1, short y1, short x2, short y2, short

            color)

Function    draw a straight line to screen

Input       x1 - [in]The x-coordinate of the starting point of the line
            y1 - [in]The y-coordinate of the starting point of the line
            x2 - [in]The x-coordinate of the end of the line
            y2 -[in]The y-coordinate of the end of the line

            color -[in] color，0--user the color of background，1--user the color of fonts

Output      none

Return      none

Note        none



3.11.2.30.ScrDrawLineRam_Api(deprecated)
Prototype   public static void ScrDrawLineRam_Api(int x1, int y1, int x2,int y2,int color)

Function    Draw a straight line to video memory

Input       x1 - [in]The x-coordinate of the starting point of the line
            y1 - [in]The y-coordinate of the starting point of the line
            x2 - [in]The x-coordinate of the end of the line
            y2 -[in]The y-coordinate of the end of the line

            color -[in] color，0--user the color of background，1--user the color of fonts

Output      none

Return      none

Note        none



3.11.2.31.ScrDrLogoxy_Api(deprecated)
Prototype   public static void ScrDrLogoxy_Api(int LogoWighX, int LogoHightY,
                               int StartX, int StartY, byte[] Logo)

Function    display a logo array on screen at the spicified location

Input       LogoWighX - width of image
            LogoHightY - height of image
            StartX -[in]Displays the abscissa of the starting position,starts from 0,it should

            between 0 and 127
            StartY -[in]Displays the ordinate of the starting position, starts from 1,it should

            between 0 and 16
            Logo -[in]datas of logo

Output      none

Return      none

Note        none



3.11.2.32.ScrDrLogoxyRam_Api(deprecated)
Prototype   public static void ScrDrLogoxyRam_Api(int LogoWighX, int LogoHightY,
                                 int StartX, int StartY, byte[] Logo)

Function    display the buffer of logo array on screen at the spicified location

Input       LogoWighX -[in]width of image
            LogoHightY -[in]height of image
            StartX -[in]Displays the abscissae of the starting position,starts from 0,it should

            between 0 and 127
            StartY -[in]Displays the ordinate of the starting position, starts from 1,it should

            between 0 and 16
            Logo -[in]datas of logo

Output      none

Return      none

Note        none



3.11.2.33.ScrFontSet_Api(deprecated)
Prototype   public static void ScrFontSet_Api(int FontSize)

Function    set the font to be displayed

Input       FontSize -[in]size of font

            0--- ASCII: displayed by 6x12，Chinese characters displayed by 12x12


            1--- ASCI: displayed by 8x16，Chinese characters displayed by 16x16


            2--- ASCII: displayed by 12x24，Chinese characters displayed by 24x24
            3--- ASCII: displayed by 16x32，Chinese characters displayed by 32x32


            4--- ASCII: displayed by 24x48，Chinese characters displayed by 48x48

Output      none

Return      none

Note        none



3.11.2.34.ScrGray_Api(deprecated)
Prototype   public static void ScrGray_Api(int Mode)

Function    Set the contrast of the display screen

Input       Mode-[in]the level of contrast,the minum level is 0 means the darkest and the

            maxmum level is 7 means the brightest, the default level is 3

Output      none

Return      none

Note        none



3.11.2.35.ScrPlot_Api(deprecated)
Prototype   public static void ScrPlot_Api(int X, int Y, int Color)

Function    display a point on screen at the spicefied location,call it if you want to display it

            on screen

Input
            X -[in]the spicefied abscissae，dot array(0~127)


            Y - [in]the spicefied ordinate ，dot array(0~63)


            Color -[in]Specify the action, 1:draw a point，0:clear a point

Output      none

Return      none

Note        none
3.11.2.36.ScrPlotRam_Api(deprecated)
Prototype   public static void ScrPlotRam_Api(int X, int Y, int Color)

Function    draw a point on screen at the specified location,operate the display

            storage,ScrBrush_Api() should be called if you want to dispaly the point on

            screen

Input
            X -[in]the spicefied abscissae，dot array(0~127)


            Y - [in]the spicefied ordinate ，dot array(0~63)


            Color -[in]Specify the action, 1:draw a point，0:clear a point

Output      none

Return      none

Note        none



3.11.2.37.ShowPassWd
Prototype   public static void ShowPassWd(int row, int col, KeyListener keyListener,
                               java.lang.String amt)

Function    show a string

Input       row -[in]line
            col - [in]column
            keyListener -[in] keyListener
            amt - [in]amt

Output      none

Return      none

Note        none



3.11.2.38.ShowQrCode_Api
Prototype   public static void ShowQrCode_Api(int row, int col, byte[] buf, int atr)
Function    Display a QRQode

Input       row-[in]row
            col-[in]colume
            buf-[in]buffer
            atr-[in]attribute

Output      none

Return      none

Note        none



3.11.2.39.TextBoxSameRandom_Api
Prototype   public static void DrawSpinner_Api(int row, int col, int width, int height,
                                 java.lang.String[] text, int[] value,
                                 int atr, int isCheck, int orientation)

Function    show a spinner

Input       row -[in]line
            col -[in]column
            width -[in]width
            height -[in]height
            text -[in]the text of button
            value -[in]the value of button
            atr -[in]attribute(FDISP|CDISP)
            isCheck - [in]the value of button that being selected by default

            orientation - 0:horizontal，1:vertical

Output      none

Return      none

Note        none
3.11.Class PedApi
3.11.1.Private Constants
               Name                         Value                        Note

PEDPLACE_PUBLIC                      "PUBLIC"

PEDPLACE_PRIVATE                     “PRIVATE”

PEDKEYTYPE_MASTKEY                   1

PEDKEYTYPE_WORKKET                   2

MKEYMAXINDEX                         999

WKEYMAXINDEX                         2999

MKEYMAXINDEX_USE                     MKEYMAXINDEX-10

WKEYMAXINDEX_USE                     WKEYMAXINDEX

MKEY_21_3DES                         MKEYMAXINDEX_US

                                     E+1

MKEY_21_SM4                          MKEYMAXINDEX_US

                                     E+2

PED_TLK                              0x01

PED_TMK                              0x02

PED_TPK                              0x03

PED_TAK                              0x04

PED_TDK                              0x05

PED_TEK                              0x06

PED_TTK                              0x09



3.11.2.Interfaces
These APIs are for internal PINPAD


3.11.2.1.calcRSA_Api(deprecated)
Prototype    public static int calcRSA_Api(byte RSAKeyIndex, byte[] pucDataIn,
                           byte[] pucDataOut, byte[] pucKeyInfoOut)

Function     RSA data arithmetic with RSA keys stored in PED

Input        RSAKeyIndex - index of private key [1~10]
             pucDataIn -[in] 1K, Data that has been encrypted or decrypted, it has the same
            length with module

Output      pucDataOut - [out]1K, Data that has been encrypted or decrypted
            pucKeyInfoOut -[out]100B, the infomation of private key,it will not output

            anything if the key is null

Returns     0-success
            else-failed

Note        none



3.11.2.2.calcRSAEx_Api
Prototype   public static int calcRSAEx_Api(int RSAKeyIndex, int pucDataInLen,
                            byte[] pucDataIn, byte[] pucDataOut,
                            byte[] pucKeyInfoOut)

Function    encrypt or decrypt data

Input       RSAKeyIndex -[in] index of private key, 1~10
            pucDataInLen -[in] the length of cryptograph or proclaimed in writing
            pucDataIn - [in]cryptograph or proclaimed in writing

Output      pucDataOut - [out]Data that has been encrypted or decrypted
            pucKeyInfoOut -[out]the infomation of private key

Returns     <0-error code
            else-the length of data that has been encrypted or decrypted

Note        none



3.11.2.3.EDPPSetDesSmHdSoft_Api
Prototype   public static int EDPPSetDesSmHdSoft_Api(int DesSMMode,int HdOrSoft)

Function    Set the encryption algorithm of the password keyboard to Des or the state secret

            algorithm

Input       DesSMMode - [in] 0:DES 1:the state secret algorithm
            HdOrSoft - [in] 0:hardware encryption 1:software encryption

Output      none

Returns     0-success
            1-Mode error

Note        none



3.11.2.4.getFyTransKey_Api
Prototype   public static int getFyTransKey_Api(byte[] out)

Function    Get the transmission key

Input       none

Output      out-[out] the transmission key

Returns     none

Note        none



3.11.2.5.getgHdOrSoft
Prototype   public static int getgHdOrSoft()

Function    Gets the current software and hardware encryption

Input       none

Output      none

Returns     1-software encryption
            else-hardware encryption

Note        none



3.11.2.6.getPinDukptEx_Api
Prototype   public static int getPinDukptEx_Api(byte GroupIdx, byte mode,
                              java.lang.String pin,
                              java.lang.String data,
                              byte[] pinBlockOut,
                              byte[] ksnOut)

Function    Enter the plaintext Pin and calculate the pinblock of dukpt

Input
            GroupIdx - [in] DUKPT private key,（TIK）the index of group [1~10]
          mode-[in]Select the format of the PIN BLOCK
          00 ISO9564 format 0,KSN automatically adds 1
          01 ISO9564 format 1,KSN automatically adds 1
          02 ISO9564 format 3,KSN automatically adds 1
          03 retain
          20 ISO9564 format 0, KSN doesn't automatically add 1
          21 ISO9564 format 1, KSN doesn't automatically add 1
          22 ISO9564 format 3, KSN doesn't automatically add 1

          pin - [in]pin proclaimed in writing，it’s a string

          data - [in]25byte at most
          When Mode=0x00,DataIn points to the 16-bit master account generated by the

          card number shift.
          When Mode=0x01, the input parameter is the format of the PinBlock,8 bytes of

          data (according to the ISO9564 specification, this data can be a random number,

          transaction stream number or time stamp, etc.).
          hen Mode = 0 x02 DataIn point card number generated after displacement, 16

          master account DataIn + 16 points to participate in PinBlock formatted 8 bytes

          of data (according to the specification of ISO9564, the data can be a random

          number, serial number or timestamp, etc., but four each byte of four high and

          low, must be between 0 xa ~ 0 xf, so when the Mode is 0 x02, applications need

          to do this check the 8 bytes of data, if you do not meet the requirements will

          return an error).
          When Mode=0x03, is the transaction stream number ISN't [6 Bytes,ASCII

          code]

Output    pinBlockOut - [out]Ciphertext encrypted with the DUKPT key PINBLOCK, 8

          bytes
          ksnOut - [out]10byte, The KSN corresponding to the DUKPT key used

Returns   -1-error parameters
          0-success
              1-else-failed

Note          none



3.11.2.7.isKeyExist
Prototype     public static boolean isKeyExist(int keyType, int keyIndex)

Function      Determines whether the secret key exists

Input         keyType - [in] 1-master key 2-working key
              keyIndex - [in] index of private key

Output        none

Returns       true-exists
              false-do not exist

Note          none



3.11.2.8.PedCalcDESDukpt_Api
Function             int PedCalcDESDukpt_Api(byte GroupIdx, byte KeyVarType,
                                                   byte[] KpucIV, byte[] DataIn, byte Mode,
                                           byte[] DataOut, byte[] KsnOut)

Description          Use DUKPT key to encrypted data

Parameters[in]       GroupIdx       [1~10], DUKPT key group index

                     KeyVarTyp      which type of key will be used

                     e              0x00: DUKPT MAC KEY
                                    0x01: DUKPT DES KEY
                                    0X02:       DUKPT PIN KEY ECB encryption( if

                                    KeyVarType is 0x02, then mode can only be 0x01[ECB

                                    encryption])

                     pucIV          Initial vector(8 bytes). Necessary for CBC
                                    If is null,the default value(0x0000000000000000) will be

                                    used

                     DataIn         The data to be encrypted/decrypted (should <1024 bytess,
                                     sholud be mutiple of 8 bytes)

                      Mode           0x00:EBC decryption
                                     0x01:EBC encrytion
                                     0x02:CBC decryption
                                     0x03:CBC encryption

Parameters[out]       DataOut        Data out

                      KsnOut         The current KSN (10 bytes)

Return value          0              Success

                      1              DUKPT Index Over Range

                      2              Cancel

                      3              Timeout

                      4              Data Length Error

                      5              Other Error :

                      6              Reference Error

Remark




3.11.2.9.PEDDes_Api
Prototype      public static int PEDDes_Api(int KeyIndex, int Mode, int MorWFlag,
                             byte[] DataIn, int DataInLen, byte[] DataOut)

Function       DataIn is encrypted/decrypted in mode mode using the DES key specified by

               DESKeyID. The result is stored in DataOut.

Input          KeyIndex - [in] Index of the working key (0 - 99)
               Mode - [in] 0x01 DES Encryption
               0x02 SM4 encryption
               0x03 3DES encryption
               0x81 DES decryption
               0x82 SM4 decryption
               0x83 3DES decryption
               MorWFlag - [in] Whether to encrypt or decrypt the master key or the work key,

               0x01: Use the master key 0x02: Use the work key DataIn - [in] Data to encrypt
            [Input data]
            DataInLen - Data length of DataIn
            DataOut - [out] encryption result [output data]

Output      None

Returns     0 Successful
            1 Illegal key index
            2 Illegal encryption/decryption mode
            3 MorWFlag is illegal
            0xFF communication failed

Note        None



3.11.2.10.PEDDesCBC_Api
Prototype   public static int PEDDesCBC_Api(int KeyIndex, int Mode, int MorWFlag,
                              byte[] ivIn, int ivLen, byte[] DataIn,
                                               int DataInLen, byte[] DataOut)

Function    CBC operation

Input       KeyIndex - [in] index of private key
            Mode - [in] 0x01 DES Encryption
                           0x02 SM4 Encryption
                           0x03 3DES Encryption
                      0x81 DES Decryption
                      0x82 SM4 Decryption
                      0x83 3DES Decryption
            MorWFlag - [in]Encryption and decryption with the master or working key,

                               0x01:master key
                               0x02:working key
            ivIn - [in] The initial vector
            ivLen - [in] The length of initial vector
            DataIn - [in] Encryption or decryption data
            DataInLen - [in] the length of datas that to be encryped or decrupted

Output      DataOut - [out] datas that has been encryped or decrupted
Returns     0 -success
            1 - illegal private key index
            2 -illegal mode
            3 -illegal MorWFlag
            0xFF -Communicate failed

Note        none



3.11.2.11.PEDDisp_Api
Prototype   public static void PEDDisp_Api(int nLineIndex, byte[] strText, int nLength,
                              int nFlagSound)

Function    show the text of password borader

Input       nLineIndex - [in]the count of lines
            strText - [in] text to be shown
            nLength - [in] the length of content
            nFlagSound - [in] Play sound or not

Output      none

Returns     none

Note        none



3.11.2.12.PEDDisp_Api
Prototype   public static void PEDDisp_Api(java.lang.String strText)

Function    show the text of password borader

Input       strText - [in] text to be shown

Output      none

Returns     none

Note        none
3.11.2.13.PedDukptCalcSym_Api
Prototype   public static int PedDukptCalcSym_Api(byte GroupIdx,
                                   byte KeyVarType,
                                   int Inc,
                                   byte Mode,
                                   int len,
                                   byte[] KpucIV,
                                   byte[] DataOut,
                                   byte[] KsnOut)

Function    Use the current key region keyId corresponding to the DUKPT key, the data

            pucInOut DES/TDES, SM4, AES encryption and decryption operation, the

            results saved in pucInOut

Input       KeyId - [in]1~100, DUKPTKey group index number

            KeyVarType - [in] 0x01 ， 3DES/SM4/AES encryption operation was

            performed with the PIN key of DUKPT.Used to encrypt 8-byte clear text

            PINBLOCK

                           0x02 ，3DES/SM4/AES encryption and decryption operation is

            carried out with the data (Request Or Both Ways) key of DUKPT
                         0x03, 3DES/SM4/AES encryption and decryption were performed

            with the data (Response) key of DUKPT

            Inc - [in]0x00，After reading the DUKPT key, the corresponding KSN does not

            add 1.0x01, after reading the DUKPT key, the corresponding KSN plus 1.Other

            values are invalid.
            Mode - [in]0x00:DES/3DES ECB decryption
                         0x01:DES/3DES ECB encryption
                         0x10:DES/3DES CBC decryption
                         0x11:DES/3DES CBC encryption
                         0x20:Use the key of the KeyId to decrypt the AES ECB pucIn data
                           16 0x21:Do AES ECB encryption
                           0x30:Perform AES CBC decryption
                           0x31:AES CBC encryption
                           0x40:SM4 for ECB decryption
                           0x41:Do SM4 ECB encryption
                           0x50:SM4 CBC decryption
                           0x51:SM4 CBC encryption
              len - [in]8/16 ,The length of TIK, now DUKPT algorithm support 8/16 byte

              length of the key
              KpucIV - 8/16, The length of TIK, now DUKPT algorithm support 8/16 byte

              length of the key

Output        DataOut - [out]Less than 1024byte, data DES/3DES need to be processed for

              encryption and decryption, DataOut data length is 8 AES encryption and

              decryption, DataOut data length is 16 SM4 encryption and decryption, DataOut

              data length is 16
              KsnOut - [out]10 bytes The current KSN

Returns       0-success
              1-DUKPT index out of range
              2-The type is invalid
              3-the inc is invalid
              4-the mode is invalid
              5-Input data length error
              6-other errors

Note          none



3.11.2.14.PedDukptIncreaseKsn_Api
Function             int PedDukptIncreaseKsn_Api(byte GroupIdx)

Description          Increase KSN by 1

Parameters[in]       GroupIdx         [1~10], DUKPT key group index
Parameters[out]   None

Return value      0             Success

                  1             DUKPT Index Overrange

                  2             Key Index Number Error

                  3             Other Errors

Remark            The DUKPT key generated by a KSN can be used for 256 times.

                  PED_RET_ERR_DUKPT_NEED_INC_KSN will be returned if used more

                  than 256 times, then this API can be used for increasing KSN by 1.




3.11.2.15.PedDukptWriteTIK_Api
Function          int PedDukptWriteTIK_Api(byte GroupIdx, byte SrcKeyIdx, byte

                  KeyLen, byte[] KeyValueIn, byte[] KsnIn,
                                byte iCheckMode, byte[] aucCheckBuf)

Description

Parameters[in]    GroupIdx          [1~10], DUKPT key group index

                  SrcKeyIdx         [0~1], the index of the key for dispersing keys


                                    SrcKeyIdx = 0: KeyValueIn is the plain text of

                                    TIK/IPEK. TIK’s plain text can be loaded into

                                    terminal only when PED_TLK doesn’t exist in the

                                    termianl.
                                    SrcKeyIdx = 1: KeyValueIn is the encrypted text of

                                    TIK/IPEK, terminal will use TLK to decrypt

                                    KeyValueIn, and load the plain text of TIK/IPEK

                  KeyLen            the length of TIK/IPEK, support the key of 8/16 bytes

                                    now.

                  KeyValueIn        Key value of TIK/IPEK

                  KsnIn             KSN (10 bytes), DUKPT Initialization vector
                  iCheckMode    0x00:     no check value
                                0x01:     use plain key to DES/TDES encrypt

                                     (0x0000000000000000)
                                0x02:     check the plain key with odd verification, use

                                plain key to DES/TDES encrypt (\x12\x34\x56\x78\

                                x90\x12\x34\x56)
                                0x03:     transfer some data, such as KcvData, use

                                plain key to encrypt [aucDstKeyValue(encrypted text)

                                + KcvData] in some specific mode, MAC(8 bytes) will

                                be as KCV

                  aucCheckBuf   0x00:     Value is unusefull. Do not check it
                                0x01:     aucCheckBuf[0] : KCV length (KcvLen)
                                     aucCheckBuf[1]~aucCheckBuf[KcvLen] : KVC

                                value
                                0x02:     aucCheckBuf[0] : KCV length (KcvLen)
                                     aucCheckBuf[1]~aucCheckBuf[KcvLen] : KVC

                                value
                                0x03:     aucCheckBuf[0] : KcvData length

                                (KcvDataLen)
                                  aucCheckBuf[1]~aucCheckBuf[KcvDataLen] :

                                KcvData used for checking KCV
                                  aucCheckBuf[KcvDataLen+1] : MAC mode (refer

                                to PEDGetMac_Api)
                                  aucCheckBuf+KcvDataLen+3 : KCV

Parameters[out]   None

Return value      0             Success

                  1             DUKPT Index Out of Range

                  2             SrcKeyIdx Out of Range

                  3             Key Length error

                  4             Illegal Ciphertext Data
                   5                 KsnIn Parametric Error

                   6                 Illegal iCheckMode Verification Mode

                   7                 AucCheckBuf Empty

                   8                 Other Errors Not Supported by DUKPT Algorithms

Remark             GroupIdx in PedGetPinDukpt_Api/PedGetMacDukpt_Api should be the

                   same as the one in PEDWriteTIK_Api
                   there are two initial keys of dukpt, DK and IK. If it is DK, mode is 1.

                   First, it is converted to IK and then used.
                   If IK mode is 0, it can be used directly. DK is the root key and IK is the

                   newly generated key after the initialization of the root key




3.11.2.16.PedErase
Prototype   public static boolean PedErase()

Function    clear all private keys

Input       none

Output      none

Returns     true-success
            false-failed

Note        none



3.11.2.17.PedErase
Prototype   public static boolean PedErase(int KeyType,int index)

Function    clear a private key

Input       KeyType - [in] 1-master key 2-working key

            index - [in] 密钥类型

Output      none

Returns     true-success
            false-failed
Note           none



3.11.2.18.PedGetDukptKSN_Api
Function              int PedGetDukptKSN_Api(byte GroupIdx, byte[] KsnOut)
Description           Get the current KSN

Parameters[in]        GroupIdx      [1~10], DUKPT key group index


Parameters[out]       KsnOut        The current KSN (10 bytes)

Return value          0             Success

                      1             DUKPT Index Over Range

                      2             Reading Encryption Key MMK Error

                      3             Reading DUKPT Key Error

                      4             Key Index Number Error

                      5             Key HASH Value Check Error

                      6             Other Error

                      7             Reference Error Author

Remark




3.11.2.19.PEDGetDukptPin_Api
Function              int PEDGetDukptPin_Api(String disMsg, byte[] dataIn, int keyIndex,

                      byte[] pinLimit, int mode,
                                    int timeOut, final IGetDukptPinListener listenner)

Description           During the specified time, input the password and get the pinblock

Parameters[in]        disMsg        Tips

                      dataIn        Maximum length 25 bytes
                                    Mode=0x00 :

                                       DataIn (16 bytes): remove the last byte of card number, if

                                    still >=16 byte,then use the last 16 bytes, if <16 bytes, then

                                    fill 0x30 in the front of that
            Mode=0x01 :

               DataIn (8 bytes) .it can be a random number, trace

            number(ISN) , or timestamp



            Mode=0x02 :

                 DataIn~ DataIn+15 (16 bytes): remove the last byte of

            card number, if still >=16 byte,then use the last 16 bytes, if

            <16 bytes, then fill 0x30 in the front of that

                 DataIn+16~DataIn+23 (8 bytes): according to ISO9564

            standard, it can be a random number, trace number(ISN) , or

            timestamp; high 4 bit or low 4 bit of every bytes should be in

            0x0a~0x0f



            Mode=0x03

              Trace number(ISN) [6 Bytes,ASCII]

keyIndex    [1~10], DUKPT key group index

pinLimit    Enumeration of password’s length (0~12) you need.

            For example:

            “0,4,6” : the length of password can be 0/4/6

            “\0” : the length of password can only be 0

            “4” : the length of password can only be 4

            If the length of password is 0, then we can press enter key to

            continue without input any password

Mode        0 : ISO9564 format 0, KSN will be increased by 1

            1 : ISO9564 format 1, KSN will be increased by 1

            2 : ISO9564 format 3, KSN will be increased by 1

            20: ISO9564 format 0, KSN will not be increased

            21: ISO9564 format 1, KSN will not be increased

            22: ISO9564 format 3, KSN will not be increased

TimeoutMs   Timeout for typing password, millisecond

            If over than the maximum timeout (120000ms), the return
                                      value will be -321

                                      0: it’ll wait until password is input

                      IGetDukpt       Callback interface in which to get PINBLOCK

                      PinListener

Return value          0               Success

                      others          Failed

Remark




3.11.2.20.PEDGetEMVOfflinePin_Api
Prototype      public static int PEDGetEMVOfflinePin_Api(java.lang.String disMsg,
                                      int min, int max, int timeOut)

Function       Get the EMV offline plaintext pin

Input          disMsg - [in] Prompt information
               min - [in] Length limit
               max - [in] Length limit
               timeOut - [in] time-out period

Output         none

Returns        0:success
               1:min and max are illegal
               2:Service exceptions
               3:time out
               4:Password keyboard exception
               5:User cancelled
               10: no PIN

Note           None



3.11.2.21.PEDGetEMVOfflinePin_Api
Prototype      public static int PEDGetEMVOfflinePin_Api(java.lang.String disMsg,
                                           byte[] pinLimit,
                                           int timeOut)
Function    Get the EMV offline plaintext pin

Input       disMsg - [in]Prompt information
            min - [in]the minmum length
            max - [in]the maxmum length
            timeOut - [in]time-out period

Output      none

Returns     0: Success
            2: service exception
            3:time out
            4:Password keyboard exception
            5:User cancelled
            10: no PIN

Note        none



3.11.2.22.PEDGetExpress_Api
Prototype   public static int PEDGetExpress_Api(java.lang.String disMsg,
                               byte[] pinLimit, int timeOut,
                               com.vanstone.transex.ped.IGetPinResultListenner listenner)

Function    Get the offline plaintext pin

Input       disMsg - [in] Prompt information
            pinLimit - [in] length limit
            timeOut - [in] time-out peroid
            listenner - [in] callback

Output      none

Returns     0:success
            else:failed

Note        none



3.11.2.23.PEDGetLastError_Api
Prototype   public static java.lang.String PEDGetLastError_Api()
Function      Gets the last failure message for the password keyboard

Input         none

Output        none

Returns       Failed description information

Note          none



3.11.2.24.PedGetMacDukpt_Api
Function             int PedGetMacDukpt_Api(byte GroupIdx, byte Increase, byte[] DataIn,

                     int DataInLen, byte[] MacOut,
                                   byte[] KsnOut, byte Mode)

Description          Get DUKPT MAC

Parameters[in]       GroupIdx      [1~10], DUKPT key group index

                     Increase      0: KSN not changed after this API

                                   1: KSN increased by 1 after this API

                     DataIn        The data used to calculate MAC

                     DataInLen     The length of DataIn (should be <=1024).

                                   It must be multiple of 8 bytes

                     Mode          KSN will be increased by 1 (the key below means MAC

                                   key)

                                   00 : R1 = TDES(key, BLOCK1); R11 = XOR(R1 ,

                                   BLOCK2);

                                    R2 = TDES(key, R11); R21 = XOR(R2 , BLOCK3);

                                    .......

                                    R[n-1]=TDES(key,R[n-2]1);R[n-1]1=XOR(R[n-1],

                                   BLOCKn);

                                    Rn = TDES(key, R(n-1)1);

                                    Rn is the final result;

                                   01 : R1 = XOR(BLOCK1, BLOCK2);

                                          R2 = XOR(R1, BLOCK3);

                                          .....
                                       R[n-1] = XOR(R[n-2], BLOCKn);

                                       Rn = TDES(key, R[n-1]);

                                       Rn is the final result;

                               02: Only the last time use TDES, others use DES (select the

                               front 8 bytes of MAC key) , like this:

                                 R1 = DES(key, BLOCK1); R11 = XOR(R1 , BLOCK2);

                                 R2 = DES(key, R11); R21 = XOR(R2 , BLOCK3);

                                 .......

                                R[n-2]=DES(key,R[n-3]1);R[n-2]1=XOR(R[n-2],

                               BLOCK[n-1]);

                                 R[n-1]=DES(key,R[n-2]1);R[n-1]1=XOR(R[n-1],

                               BLOCK[n]);

                                 Rn = TDES(key, R[n-1]1);

                                 Rn is the final result;

                               03 : CMAC arithmetic



                               KSN will be not increased

                               20: arithmetic is the same as 00 , KSN will not be increased

                               21: arithmetic is the same as 01 , KSN will not be increased

                               22: arithmetic is the same as 02 , KSN will not be increased

                               23:

Parameters[out]   MacOut       Mac value (8 bytes)

                  KsnOut       Current KSN (10 bytes)

Return value      0            Success

                  others       Failed, please refer to [Error code of PED DUKPT] in

                               Appendix part
Remark            0: Success
                  3: Data Length Error
                  4: Key Index Error
                  5: Reading DUKPT Key from FLASH Error
                  6: Key Length Error
                     7: Reference Error
                     8: Other Errors



3.11.2.25,PEDGetPwd_Api
Prototype   public     static void PEDGetPwd_Api(String       disMsg,   byte[]      panBlock,

            byte[]pinLimit,
            int keyIndex, int timeOut, int mode, IGetPinResultListenner listener)

Function    Get the password for the 9.8 algorithm.

Input
            disMsg – message display

            panBlock - [in] card number, if the length is 0 does not participate in the card

            number operation
            pinLimit - Length limit for [in] pin input "\x00\x04\x06" Only length 0,4,6

            password can be input
            keyIndex - index of [in] pin key
            timeout-- timeout
            Mode - [in] 0x01 Key is a single DES key (8 bytes)
            0x02 Key is SM4 key (16 bytes)
            0x03 Key is 3DES key (16 bytes)
            listener - [in] password will be output with it

Output      None

Returns     None

Note        None



3.11.2.26.PEDGetPwd_Api
Prototype   public static void PEDGetPwd_Api(int wkindex,byte[] pinLimit,
                               java.lang.String CardNo, int mode,
                               IKeyBoard board,
                               PedApi.OnPedKeyListener pedKeyListener)

Function    Get the password of 9.8 algorithm
Input       wkindex - [in]The index of the pin key
            pinLimit - [in] The length limit "\x00\x04\x06" for pin input can only be the

            length of 0,4,6 password
            CardNo - [in] Card number, if the length is 0, it does not participate in card

            number operation
            mode - [in] 0x01, Key is single DES Key (8 bytes)
                          0x02 Key,Is the SM4 key (16 bytes)
                          0x03 Key,Is the 3DES key (16 bytes)
            board - [in] Password keyboard
            pedKeyListener - [in] Listen back to the interface

Output      none

Returns     none

Note        none



3.11.2.27.PEDGetPwd_Api
Prototype   public static int PEDGetPwd_Api(int wkindex, int min, int max, byte[] cardNo,
                              byte[] pin, int line, int mode)

Function    Get the password of 9.8 algorithm

Input       wkindex - [in] The index of the pin key
            min - [in]The minimum number of passwords to enter
            max - [in] The maximum number of passwords to enter
            cardNo - [in]Card number, if the length is 0, it does not participate in card

            number operation
            line - [in] which line to show on
            mode - [in] 0x01,Key is single DES Key (8 bytes)
                          0x02,Key is the SM4 Key (16 bytes)
                          0x03 ,Key is 3DES key (16 bytes)

Output      pin - [out]Encrypted pinblock

Returns     0-success
            else-failed
Note        none



3.11.2.28.PEDGetPwd_Api
Prototype   public static int PEDGetPwd_Api(int wkindex, int min, int max, byte[] cardNo,
                             byte[] pin, int line, int mode,
                                                PedListener pedListener)

Function    Get the password of 9.8 algorithm

Input       wkindex - [in] The index of the pin key
            min - [in]The minimum number of passwords to enter
            max - [in] The maximum number of passwords to enter
            cardNo - [in]Card number, if the length is 0, it does not participate in card

            number operation
            line - [in] which line to show on
            mode - [in] 0x01,Key is single DES Key (8 bytes)
            0x02,Key is the SM4 Key (16 bytes)
            0x03 ,Key is 3DES key (16 bytes)
            pedListener - [in] callback

Output      none

Returns     0-success
            else-failed

Note        none

3.11.2.30.PEDGetPwdzh_Api
Prototype   public static int PEDGetPwd_Api(java.lang.String disMsg,
                                byte[] panBlock,
                                byte[] pinLimit,
                                int keyIndex,
                                int timeOut,
                                 int mode,com.vanstone.transex.ped.IGetPinResultListenner

            listenner)

Function    Get the password of 9.8 algorithm
Input          wkindex - [in] The index of the pin key
               min - [in]The minimum number of passwords to enter
               max - [in] The maximum number of passwords to enter
               cardNo - [in]Card number, if the length is 0, it does not participate in card

               number operation
               line - [in] which line to show on
               mode - [in] 0x01,Key is single DES Key (8 bytes)
               0x02,Key is the SM4 Key (16 bytes)
               0x03 ,Key is 3DES key (16 bytes)

Output         pin - [out]Encrypted pinblock

Returns        0-success
               else-failed

Note           none



3.11.2.31.PEDHaveCallBack_Api(decrated / Empty)
Prototype      public static void PEDHaveCallBack_Api()

Function

Input

Output

Returns

Note



3.11.2.32.PEDMac_Api
       Function              int PEDMac_Api(int wkindex, int mode, byte []buf,
                                       short Len, byte []Out ,int flag)

       Description           The wkindex operation is performed by MAC, and the result is stored in

                             macout.
       Parameters[in]        wkindex
                             Index of storage key
                             mode:
                        MACAlgorithm for operation
                        0x01: DES Encryption
                        0x03: 3DES Encryption
                        Len
                        MAC [Len packet length <500]
                        Data
                        Data packets required for MAC operations
                        flag
                        0x00: ANSI X9.19(ICBC head office algorithm, when it is the working line

                        algorithm, mode does not work)
                        0x01: Union CBC algorithm
                        0x02:    Traffic bank algorithm

    Parameters[out]     N/A

    Return Value        0 Success
                        1 Timeout
                        2 Flag wrong
                        3 mode wrong
                        4 Illegal index
                        5 Illegal length
                        6 Password Key disk lock
                        7 The key does not exist
                        8 Other mistakes


    Remark              N/A



3.11.2.33.PEDReadPinPadSn_Api
Prototype    public static int PEDReadPinPadSn_Api(byte[] Sn)

Function     Read the password keyboard serial number.

Input        None

Output       Sn - the length of 2 bytes + the machine serial number If the machine serial
            number is 12345678, then sn = \x30\x38\x31\x32\x33\x34\x35\x36\x37\x38

Returns     0: write success
            Other: Failed

Note        None



3.11.2.34.PEDSavePinPadSn_Api
Prototype   public static int PEDSavePinPadSn_Api(byte[] Sn)

Function    Write the machine serial number to the password keyboard

Input       Sn - [in] serial number(40bytes)

Output      none

Returns     0-success
            else-failed

Note        none



3.11.2.35.PedSelectPlace_Api
Prototype   public static int PedSelectPlace_Api(java.lang.String Place)

Function    Select the master key store area

Input       Place - [in] Key areas
            PEDPLACE_PUBLIC :public area
            PEDPLACE_PRIVATE:private area

Output      none

Returns     0-success
            else-failed

Note        none



3.11.2.36.PEDSetContent_Api
Prototype   public static void PEDSetContent_Api(Context act)

Function    Setting context parameters

Input       act - [in]context
Output      none

Returns     none

Note        none



3.11.2.37.PEDSetDispAmt_Api
Prototype   public static void PEDSetDispAmt_Api(java.lang.String disAmt)

Function    Set display amount

Input       disAmt - [in] amount

Output      none

Returns     none

Note        none



3.11.2.38.PEDSetHdSoft_Api
Prototype   public   static   int   PEDSetHdSoft_Api(int     HdOrSoft)public   static   int

            PEDSetHdSoft_Api(int HdOrSoft)

Function    Set the hard and soft algorithms

Input       HdOrSoft - [in] 1: soft algorithms else:hard algorithms

Output      none

Returns     0-succecss

Note        none



3.11.2.39.PEDSetKeyType_Api
Prototype   public static void PEDSetKeyType_Api(int keyType)

Function    set the type of private key

Input       keyType - [in] the type of private key, Master key plaintext, ciphertext,

            transmission key,dukpt

Output      none

Returns     none

Note        none
3.11.2.40.PEDSetPinBoardStyle_Api
Prototype   public static void PEDSetPinBoardStyle_Api(int PinBoardType)

Function    Set the style of the interface for the input pin

Input       PinBoardType - [in] 1-half screen 2-full screen (English) 3-full screen(Chinese)

Output      none

Returns     none

Note        none



3.11.2.41.PEDSnMacOnly_Api
Prototype   public static int PEDSnMacOnly_Api(byte[] data, int dataLen, byte[] out, int

            mode)

Function    POS terminal hardware serial number encryption (unionpay algorithm)

Input       data - [in] Computed data
            dataLen - [in] the length of computed data
            mode - [in] 0x02-sm4, 0x03-3des

Output      out - [out] Output 8 bytes of ASCii MAB

Returns     0-success
            else-failed

Note        none



3.11.2.42.PedSubmit
Prototype   public static void PedSubmit(IKeyBoard board)

Function    To submit the password entry interface, press enter

Input       board - [in] keyboard

Output      none

Returns     none

Note        none
3.11.2.43.PEDWrite21Key_Api
Prototype   public static int PEDWrite21Key_Api(int mode, byte[] data)

Function    Write 21 text key plaintext interface

Input       mode - [in] mode: 0x02-sm4 0x03-3des
            data - [in] Key plaintext (16 bytes)

Output      none

Returns     0-success
            else-failed

Note        none



3.11.2.45.PEDWriteIcBcKey_Api
Prototype   public static int PEDWriteIcBcKey_Api(byte[] inbuf, int AKeyIndes,
                                 int MasteKeyIndes,
                                 int MacKeyIndes,
                                 int PinKeyIndes,
                                 int Flag28,
                                 byte[] BitMap)

Function    caculate the data from package Icbc 8583 domain 62

Input       inbuf - [in] Icbc's key ciphertext
            AKeyIndes - [in] the index of Akey
            MasteKeyIndes - [in] the index of master key
            MacKeyIndes - [in] the index of MacKey
            PinKeyIndes - [in] the index of PinKey
            Flag28 - [in] datas from server
            BitMap - [in] BitMap from server

Output      none

Returns     0:success
            1:error master key
            2:verify master key error
            3:update master key error
            4:MAC key error
            5:verify Mackey error
            6:update Mackey error
            7:error MAC key
            8:verify Mackey error
            9:update Mackey error

Note        none



3.11.2.46.PEDWriteKey_Api
Prototype   public static int PEDWriteKey_Api(int SKeyIndex,
                                int DKeyIndex,
                                byte[] DKey,
                                int DKeyType,
                                int mode,
                                byte[] KVRData)

Function    Write the master key or work key.

Input       SKeyIndex - [in] Source Key Index 0-99DKeyIndex - [in] Destination Key

            Index 0-99DKey - [in] Destination Key bufDKeyType - [in] Destination Key

            Type 1 - Master Key 2 - Work Key mode - [in] 0x10 Destination key is directly

            written in the form of DES plaintext (only when DKeyType=1)
            0x30 destination key is directly written in the form of 3DES plaintext (only

            when DKeyType=1)
            0x81 source key writes DES decryption to the destination key
            0x83 source key is decrypted after 3DES decryption of the destination key
            0x13 source key performs 3DES decryption on the destination key, and stores

            the result of encryption and decryption in the single DES area (mainly used for

            analyzing the key of the UnionPay)
            KVRData - [in] Key Verification Mode Grouping check data in order of 8 bytes
            [0]: Verification method
          0 (0x80) - ICBC algorithm
          Use the first 8 bytes of the source key (use 0x80 for the destination key) to des

          encrypt the data followed by the second set of data for XOR, and then encrypt

          the XORs until the last set of source keys (when 0x80 is used Secret key) data
          Get 8 byte results for DES/3DES encryption
          1 (0x81) - UnionPay algorithm
          The data is XORed in groups to obtain the result of the exclusive OR of the last

          8 bytes. The source key (when 0x81 is used as the destination key), the data is

          DES/3DES encrypted to get 8 bytes of result.
          2 (0x82) - Coding algorithm
          The DES/3DES encryption is performed on the 8 bytes using the source key

          (using the destination key when 0x82), and the result of the XOR is XORed

          with the latter set of data, and successively performed until the last 8 bytes.
          DES/3DES Encryption of 8 Bytes with Source Key (Use 0x82 with Destination

          Key)
          255 - not verified
          [1]: Check data length is a multiple of 8 len1
          [2]-[2+len1]: Data content to be checked
          [2+len1]: The length of the result data len2
          [2+len1+len2]: The result data content is compared with the calculated result.

Output    None

Returns   0: successful
          1: The source key index is illegal
          2: The destination key index is illegal
          3: illegal mode
          4: Password keyboard is locked
          5: illegal key
          6: The key does not exist
          7: Illegal DKeyType
          8: Check failed
               9: Other issues

Note           Mode: 0x00 The destination key is directly written in the form of a clear text

               (only if DKeyType=1), and KVRData is not checked



3.11.2.47.PEDWriteMKey_Api
Function              int PEDWriteMKey_Api(int mkindex, int mode , byte

                      []mkey)

Description           Load/write a master key into the terminal

Parameters[in]        mkindex

                      Index of storage master key
                      mode

                      0x01 Key for the DES key (8 bytes)
                      0x03 Key for the 3DES key (16 bytes)
                      mkey

                      Key value


Parameters[out]       N/A

Return value          0 Success
                      1 Timeout
                      2 Key index illegal
                      3 mode wrong
                      4 Password Key disk lock
                      5 Illegal key
                      6 Other errors


Remark                N/A



3.11.2.48.PEDWriteWKey_Api
Function              int    PEDWriteWKey_Api(int MkeyIndex, int WkeyIndex,

                                               int mode,      byte []wkey)

Description           After the mode method is used to decrypt wkey(encrypted) by
                     MkeyIndex, the result is stored in the working key area specified by

                     WkeyIndex.
Parameters[in]       MkeyIndex

                     Index of storage master key
                     WkeyIndex

                     Index of storage key
                     mode

                     0x01 DES Encryption
                     0x03 3DES Encryption
                     0x81 DES Decrypt
                     0x83 3DES Decrypt
                     0x13 3DES Decryption, and the encryption and decryption results are

                     stored in a single DES area (mainly for the key of the Union's key)
                     wkey

                     Key value

Parameters[out]      N/A

Return value         0 Success
                     1 Timeout
                     2 Illegal index
                     3 mode Illegal
                     4 Password Key disk lock
                     5 Illegal key
                     6 The key does not exist
                     7 Other errors


Remark               N/A




3.11.2.49.setAmountColor
Prototype      public static void setAmountColor(java.lang.String amountColor)

Function       Set password keypad amount font color
Input       textColor -[in] resource of color

Output      none

Returns     none

Note        none



3.11.2.50.setAmountFont
Prototype   public static void setAmountFont(java.lang.String amountFont)

Function    Set password keyboard amount font style

Input       textColor -[in] resource of style

Output      none

Returns     none

Note        none



3.11.2.51.setAmountSize
Prototype   public static void setAmountSize(float amountSize)

Function    Set the amount font size on the password keyboard

Input       textSize -[in]font size

Output      none

Returns     none

Note        none



3.11.2.53.setBottomFont
Prototype   public static void setBottomFont(java.lang.String bottomFont)

Function    Set the font style at the bottom of the password keyboard function key

Input       bottomFont -[in] font style

Output      none

Returns     none

Note        none
3.11.2.54.setBottomTextColor
Prototype   public static void setBottomTextColor(java.lang.String bottomTextColor)

Function    Set the font color at the bottom of the password keyboard function key

Input       bottomTextColor -[in]resource of color

Output      none

Returns     none

Note        none



3.11.2.55.setBottomTextSize
Prototype   public static void setBottomTextSize(float bottomTextSize)

Function    Set the font size at the bottom of the password keyboard function key

Input       bottomTextSize -[in]font size

Output      none

Returns     none

Note        none



3.11.2.56.setCardNo
Prototype   public static void setCardNo(java.lang.String cardNo)

Function    Card number input (display) when setting offline pin

Input       cardNo -[in]a string of card number

Output      none

Returns     none

Note        none



3.11.2.57.SetMkeyIndex_Api(deprecated)
Prototype   public static void SetMkeyIndex_Api(int MkeyIndex)

Function    set the index of master key

Input       MkeyIndex - [in]the index of master key

Output      none
Returns     none

Note        none



3.11.2.58.setNumColor
Prototype   public static void setNumColor(java.lang.String numColor)

Function    Set the font color of password keyboard numeric keys

Input       numColor -[in]resource of color

Output      none

Returns     none

Note        none



3.11.2.59.setNumFont
Prototype   public static void setNumFont(java.lang.String numFont)

Function    Sets the font style for the numeric keys on the password keyboard

Input       numSize -[in]resource of style

Output      none

Returns     none

Note        none



3.11.2.60.setNumSize
Prototype   public static void setNumSize(float numSize)

Function    Sets the font size of the numeric keys on the password keyboard

Input       numSize -[in]font size

Output      none

Returns     none

Note        none
3.11.2.61.setPinBoardFixed
Prototype   public static void setPinBoardFixed(boolean fixed)

Function    Set the order of the numbers on pinpad to fixed order or random order

Input       fixed: true - fixed oder false – random order

Output

Returns

Note



3.11.2.62.setTextColor
Prototype   public static void setTextColor(java.lang.String textColor)

Function    Sets the font color of the password keyboard text

Input       textColor -[in]resource of color

Output      none

Returns     none

Note        none



3.11.2.63.setTextFont
Prototype   public static void setTextFont(java.lang.String textFont)

Function    Set the password keyboard text font style

Input       textColor -[in]resource of style

Output      none

Returns     none

Note        none



3.11.2.64.setTextSize
Prototype   public static void setTextSize(float textSize)

Function    Sets the font size of the password keyboard text

Input       textSize -[in]font size

Output      none
Returns     none

Note        none



3.11.2.65.setTitleBackGroundColor
Prototype   public static void setTitleBackGroundColor(java.lang.String

                                                           titleBackGroundColor)

Function    Set the title color of the password keyboard

Input       titleBackGroundColor - the resource of color of title

Output      none

Returns     none

Note        none



3.11.2.66.WirteMkeyFY_Api
Prototype   public static int WirteMkeyFY_Api(byte[] Modul, int ModulLen, byte[] Exp,
                             int ExpLen, byte[] mkey, int mkeylen,
                             int mkindex)

Function    save the master key

Input       Modul - [in] public key modul
            ModulLen - [in] length
            Exp - [in] exponent
            ExpLen - [in]the length of exponent
            mkey - [in] master key ciphertext
            mkeylen - [in]the length of master key ciphertext

            mkindex - [in] the index of master key，it must be consistent with the transport

            key index

Output      none

Returns     0-success
            else-failed
Note        none



3.11.2.67.writeRSAKey_Api(deprecated)
Prototype   public static int writeRSAKey_Api(byte RSAKeyIndex,byte[] pstRsakeyIn)

Function    Inject RSA keys into PED

Input       RSAKeyIndex - the index of private key [1~10]
            pstRsakeyIn - 256byte RSA key

Output      none

Returns     0-success
            else-failed

Note        none



3.11.2.68.writeRSAKeyEx_Api
Prototype   public static int writeRSAKeyEx_Api(int RSAKeyIndex,
                                 int iModulusLen,
                                 byte[] aucModulus,
                                 int iExponentLen,
                                 byte[] aucExponent,
                                 byte[] aucKeyInfo)

Function    Write public key or private key of rsa, private key = private key index +

            mode,public key = public key index + module;

Input       RSAKeyIndex - the index of private key 1~10
            iModulusLen - The length of the mould
            aucModulus - mould
            iExponentLen - Public key (private key) exponential length
            aucExponent - Public key (private key) exponent
            aucKeyInfo - the infomation of private key

Output      none

Returns     0-success
            <0-error code
Note   none
3.12.Class PiccApi
3.12.1.User Permissions
<uses-permission android:name="android.permission.CLOUDPOS_CONTACTLESS_CARD"/>

3.12.2.Interfaces

3.12.2.1.CommCardCommand_Api
Prototype   public static int CommCardCommand_Api(byte[] cmdIn,int cmdLen,byte[]

            cmdResp)

Function    send datas directly to the card, and the desfire card sends data in a non-apdu

            format

Input       cmdIn - [in]the data to send
            cmdLen - [in] the length of data to send

Output      cmdResp - [out] the datas that card returns

Returns     If the data returned by the card is greater than zero, it indicates success; other data

            indicates failure

Note        none



3.12.2.2.M1Authority_Api
Prototype   public static int M1Authority_Api(int Type,int blkNo, byte[] Pwd)

Function    Verify the M1 card KEY

Input       Type - [in]Used to specify the password type to submit, the type is A if


            parameter Type is set to‘A’,‘a’or 0x0a and it is B if it is set



            to‘B’,‘b’ or 0x0b


            blkNo - [in] the block number，For 1K capacity M1 card, the effective range is

            0 to 15
            Pwd - [in]Points to the submitted password buffer

Output      none

Returns     -1:error card type
            -2:verify timeout
            -3:illegal parameters
            -4:other errors

Note        none



3.12.2.3.M1DecreaseValue_Api
Prototype   public static int M1DecreaseValue_Api(int blockNo,int value,int bkBlockNo)

Function    Block number reduction

Input       blockNo - [in] specifies the block number to access. For a 1K M1 card, the valid

            range is 0~3.
            Value - [in] reduced value
            bkBlockNo - [in] backed up block

Output      None

Returns     0 success;
            1 M1 read block timeout;
            2 parameter error;
            3 Other errors

Note        None



3.12.2.4.M1IncreaseValue_Api
Prototype   public static int M1IncreaseValue_Api(int blockNo,int value,int bkBlockNo)

Function    Increased block number

Input       blockNo - [in] specifies the block number to access. For a 1K M1 card, the valid

            range is 0~3.
            Value - [in] added value
            bkBlockNo - [in] backed up block

Output      None

Returns     0 success;
            1 M1 read block timeout;
            2 parameter error;
            3 Other errors

Note        None



3.12.2.5.M1ReadBlock_Api
Prototype   public static int M1ReadBlock_Api(int BlkNo, byte[] BlkValue)

Function    Read the contents of the M1 card (16 bytes in total)

Input       BlkNo - [in] Specifies the number of the accessed block. For a 1K M1 card, the

            valid range is 0~3.

Output      BlkValue - [out] The buffer's first address that points to the contents of the

            block to be accessed; the buffer should allocate at least 16 bytes

Returns     0 success;
            1M1 read block timeout;
            2 parameter error;
            3 other mistakes

Note        The wallet in the M1 card is also formed in a block in a specific format, and the

            reading balance is achieved by reading the block in which the wallet is located.

            The wallet format is as follows: BALANCE[4] + ^balance[4] + BALANCE[4]

            +BLK_NO+ ^blk_no+BLK_NO+ ^blk_no where BALANCE[4] - 4-byte

            balance (low byte first) in block The Chinese Communist Party deposits

            ^balance[4] twice -- the result of reversing the code of the remaining bytes in

            sequence. BLK_NO - the block number of the wallet; for a 1K capacity M1

            card, the valid range is 0 ~ 63; two are stored in the block. Sub ^blk_no - the

            inverse of the block number where the wallet resides; stored twice in the block



3.12.2.6.M1WriteBlock_Api
Prototype   public static int M1WriteBlock_Api(int BlkNo, byte[] BlkValue)

Function    Writes the specified block to the M1 card (16 bytes in total)

Input       BlkNo - [in] Specifies the number of the accessed block. For a 1K M1 card, the

            valid range is 0~3.
            BlkValue - [in] Pointer to the first buffer of the block to write

Output      None

Returns     0 success;
            1 M1 read block timeout;
            2 parameter error;
            3 Other errors

Note        If the write condition is satisfied (the corresponding password has been

            authenticated to pass), then calling this function can write the M1 card holder

            information (such as the card number) in the specified block, or write the wallet

            initial value, or other stream information. When the card is personalized, this

            function is also used to update the control block; At this point, it is necessary to

            ensure that the meaning of the 4-byte block control word and its check digit

            meet the requirements.

3.12.2.7.PiccCheck_Api
Prototype   public static int PiccCheck_Api(int Mode,byte[] CardType, byte[] SerialNo)

Function    Search for a PICC card in the specified mode; after the card is found, select it

            and activate it

Input       Mode - [in]
             0: Search for any type of card in the magnetic field:
            1, 'a', 'A', 0x0a: - Search for type A cards in the magnetic field
            2, 'b', 'B', 0x0b: - Search for B-type cards in a magnetic field
            3, 'm', 'M': Search for M1 card in magnetic field
            'i','I': Search ID



Output      CardType - [out]
            Card type byte buffer; currently return a two-byte type value:
            CardType[0] :
            'A' - search for type A card
            'B' - search for type B card
            CardType[1] :
            'C' - search for CPU card
            'M' - Search for M1 card


            SerialNo - [out]
            The buffer's first address of the card serial number information.
            This information in turn contains the contents of the serial number length and

            serial number content.
            The serial number of B type card and M1 card is 4 bytes;
            Type A card serial number is generally 4 bytes, there are 7 bytes or 10 bytes.
            Use byte SerialNo[0] to indicate the length of the serial number,
            SerialNo[1~10] holds the serial number (left-aligned).
            If you need to read the serial number and type A card, you need to use and

            determine the length byte.

Returns     0x00-success
            0x01 - Parameter error (Invalid Mode value)
            0x02 - Module is not turned on
            0x03 - Conflict Other - Exception Error

Note        None



3.12.2.8.PiccClose_Api
Prototype   public static int PiccClose_Api()

Function    Close the contactless card module and turn it off

Input       None

Output      None

Returns     0x00-success
            Other - abnormal error

Note        None



3.12.2.9.PiccGetCardInfo_Api
Prototype   public static int PiccGetCardInfo_Api(byte[] lenArray,byte[] atqa,byte[] ats,
            byte[] uid)

Function    Get the card information

Input       lenArray - 4 byte data
                   lenArray[0]:the length of atqa
                          lenArray[1]:the length of ats
                          lenArray[2]:the length of uid
                          lenArray[3]:the data of sak (1 byte)
            atqa - the data of atqa
            ats - the data of ats
            uid - the data fo uid

Output      none

Returns     1-susccess
            <0-error code

Note        none



3.12.2.10.PiccHalt_Api
Prototype   public static int PiccHalt_Api()

Function    Card hang

Input       None

Output      None

Returns     0-success
            Other - failed

Note        None



3.12.2.11.PiccIsoCommand_Api
Prototype   public                    static void PiccIsoCommand_Api(ApduSend apduSend,

            ApduResp apduResp)

Function    Sends APDU formatted data to card and receives response on specified channel

Input       apduSend - [in] Application Data Read and Write Operation Parameter Frames

            for Contact IC Cards are Basically the Same
Output      apduResp - [out] and contact IC card application data read and write operation

            parameter framework is basically the same

Returns     None

Note        None



3.12.2.13.PiccOpen_Api
Prototype   public static int PiccOpen_Api()

Function    Power on and reset the contactless card module, check whether the initial state

            of the module after reset is normal

Input       None

Output      None

Returns     0x00-success
            Other - abnormal error

Note        None



3.12.2.14.PiccRemove_Api
Prototype   public static int PiccRemove_Api()

Function    Determine whether the card has been removed from the sensing area.

Input       None

Output      None

Returns     0x00 - Success, the card has moved away from the sensing area
            0x01 - module is not turned on
            0x02 - The card has not moved the sensing area

Note        None



3.12.2.15.PiccRest_Api
Prototype   public static int PiccRest_Api(int mode, byte[] responseBuffer)

Function    Card to reset

Input       Mode - [in] 0: cold reset 1: hot reset
Output      responseBuffer - [out] reset return information

Returns     0-success
            Other - failed

Note        None



3.12.2.16.SidCardCommand_Api
Prototype   public static int SidCardCommand_Api(byte[] apduSend, int sendLen,
                                byte[] apduRecv)

Function    Id card interactive apdu

Input       apduSend - [in] the apdu data that sent
            sendLen - [in] the length of apdu

Output      apduRecv - [out] the datas that apdu returned

Returns     the effective length of the apduRecv that returns

Note        none
3.13.Class ScanApi
3.13.1.Private Constants
                  Name                          Value                           Note

BDL_SCAN_TOOLS                   “scan_tools”                  auto,zbar,... default is auto

BDL_SCAN_TIMEOUTS                “scan_timeouts”               time-out period

BDL_SCAN_FlASH                   “scan_flash”                  Whether to turn on the flash

BDL_SCAN_BUZZER                  “scan_buzzer”                 Whether to turn on the buzzer

BDL_SCAN_VIBRATE                 “scan_vibrate”                Whether to open vibration

BDL_SCAN_CAMERA_FORE             “scan_camera_fore”            Whether to set the front camera

BDL_SCAN_LAYOUT_TYPES            “scan_layout_type”            default,icbc,ccb...

BDL_SCAN_LAYOUT_TITLE            “scan_layout_title”           title

BDL_SCAN_LAYOUT_ESCBTN_TEXT      “scan_layout_escbtn_text”     the text of cancel button

BDL_SCAN_LAYOUT_ESCBTN_POSIT     “scan_layout_escbtn_posit”    the text of cancel button

BDL_SCAN_WIDTH                   “scan_width”                  The width of the scan box ,the

                                                               default is 632

BDL_SCAN_HEIGHT                  “scan_height”                 The height of the scan box ,the

                                                               default is 632

BDL_SCAN_LAYOUT_SUBTEXT          “scan_subtext”

BDL_SCAN_TOGGLE_ON               “scan_toggle_no”

BDL_SCAN_MODE                    “scan_mode”

BDL_SCAN_ONESHOT                 “scan_oneshot”

BDL_SCAN_CANINPUT                "can_input_barcode"           Whether manually entering a one-

                                                               dimensional code is aviliable

BDL_SCAN_DIALOGTITLE             "title_text"                  the title of dailog when manually

                                                               entering a one-dimensional code

BDL_SCAN_MULTTIME                "scan_multime"

BDL_SCAN_TIME_INTERVAL           "scan_time_interval"

BDL_SCAN_CUSTOM_TITLEBAR_COLOR   "scan_custom_title_bgcolor"   used for the customized pages of

BDL_SCAN_CUSTOM_TITLE_SIZE       "scan_custom_title_size"      Russian version

BDL_SCAN_CUSTOM_TITLE_COLOR      "scan_custom_title_color"

BDL_SCAN_CUSTOM_TITLE_FONT       "scan_custom_title_font"

BDL_SCAN_CUSTOM_SUM              "scan_custom_sum"
BDL_SCAN_CUSTOM_SUM_SIZE              "scan_custom_sum_color"

BDL_SCAN_CUSTOM_SUM_COLOR             "scan_custom_sum_color"

BDL_SCAN_CUSTOM_SUM_FONT              "scan_custom_sum_font"

BDL_SCAN_CUSTOM_WARM_SIZE             "scan_custom_warm_size"

BDL_SCAN_CUSTOM_WARM_COLOR            "scan_custom_warm_color"

BDL_SCAN_CUSTOM_WARM_FONT             "scan_custom_warm_font"

BDL_SCAN_CUSTOM_BTNTEXT               "scan_custom_btntext"

BDL_SCAN_CUSTOM_BTNTEXT_SIZE          "scan_custom_btntext_color"

BDL_SCAN_CUSTOM_BTNTEXT_COLOR         "scan_custom_btntext_color"

BDL_SCAN_CUSTOM_BTNTEXT_FONT          "scan_custom_btntext_font"

BDL_SCAN_CUSTOM_BUTTON_SHOW           “scan_custom_button_show”

BDL_SCAN_CUSTOM_TARGET_ACTIVITY       “scan_custom_target_activity”




3.13.2.Interfaces

3.13.1.1.ScanClose_Api
Prototype   public static int ScanOpen_Api(Bundle bundle,
                           com.vanstone.appsdk.api.interfaces.IScanResult scanCallback)

Function    Open the scanner and starting scanning

Input       bundle - [in]parameters that being passed to acticity
            scanCallback - [in]the callback of sacnning result

Output      none

Returns     0-ok

Note        none



3.13.1.2.ScanGetData_Api
Prototype   public static int ScanGetData_Api(byte[] barCodeOut)

Function    get the scanning result

Input       none

Output      barCodeOut-[out]the scanning result
Returns     0-ok

Note        none



3.13.1.3.ScanOpen_Api
Prototype   public static int ScanClose_Api()

Function    finish the scanning page

Input       none

Output      none

Returns     0-ok

Note        none
3.14.Class SignApi
3.13.1.Interfaces

3.13.1.1.getSignatureCompressData_Api
Prototype   public static byte[] getSignatureCompressData_Api()

Function    get signature compressed data

Input       none

Output      signData-[out]

Returns     the comoressed data

Note        none



3.13.1.2.getSignatureLength_Api
Prototype   public static int getSignatureLength_Api()

Function    Gets the length of the signature image compressed data

Input       none

Output      none

Returns     length

Note        none



3.13.1.3.getSignBmp_Api
Prototype   public static Bitmap getSignBmp_Api()

Function    get signed bitmap

Input       none

Output      none

Returns     signed bitmap

Note        none



3.13.1.4.isToastConfirm
Prototype   public static void isToastConfirm(boolean isToast)

Function    whether to show a confirm dialog when setting signature
Input
            isToast - true:show confirm dialog，false:do not show confirm dialog

Output      none

Returns     none

Note        none



3.13.1.5.setResignCount
Prototype   public static void setResignCount(int count)

Function    Sets the times you can resign

Input
            count - the times，-1 means there is no limit of times

Output      none

Returns     none

Note        none



3.13.1.6.setSignBoardStyle
Prototype   public static void setSignBoardStyle(int signBoardStyle)

Function    set the style of sign page

Input       signBoardStyle - [in] oritation:1-landscape 2-portrait screen

Output      none

Returns     none

Note        none



3.13.1.8.startSign_Api
Prototype   public static int startSign_Api(int time,java.lang.String signcode,
                     com.vanstone.sign.IStartSignListenner iStartSignListenner)

Function    Open the electronic signature board

Input
            time -[in]time-out period (s)，-1：no limit

            signcode - [in]feture code
            iStartSignListenner - [in]callback

Output      none

Returns     0-success
            else-failed

Note        none



3.13.1.9.stopSign_Api
Prototype   public static void stopSign_Api()

Function    Close the electronic signature board

Input       none

Output      none

Returns     none

Note        none
3.15.Class SystemApi
3.15.1.Private Constants
             Name            Value                       Note

APICORE_VERSION        “V0000C219032600”   the version of api, it should be

                                           update on each modification

MODULE_PRINTER         1

MODULE_MSCR            2

MODULE_PINPAD          3

MODULE_RFCARD          4

MODULE_ICCARD          5

MODULE_BUZZER          6

MODULE_PSAM            7

MODULE_BACKSRC         8

MODULE_SCREEN          9

MODULE_MIC             10

MODULE_SDCARD          11

MODULE_USB             12

MODULE_3G              13

MODULE_WIFI            14

MODULE_ETHERNET        15

MODULE_COM             16

MODULE_HDMI            17

MODULE_CAMERA          18

MODULE_OS              19

MODULE_STORAGE         20

MODULE_POWERON         21

MODULE_POWEROFF        22

MODULE_HIBERNATE       23

MODULE_WAKEUP          24

MODULE_STATUS_NORMAL   0

MODULE_STATUS_ERROR    1
MODULE_NOT_SUPPORT       -1

SYS_SN                   "sn"

SYS_TERMTYPE             "termType"             The terminal model of unionpay

SYS_MANUFACTURER         "manufacturer"         Manufacturer's model of unionpay

SYS_OTAVERSION           "otaVersion"           the versiono of OTA

SYS_IMEI                 "IMEI"

SYS_IMSI                 "IMSI"

SYS_ICCID                "ICCID"

SYS_MANUFACTURENAME      "ManufactureName"

SYS_MODEL                “model”

SYS_BANKNAME             “bankName”

SYS_ANDROID_OSVERSION    “androidOsVersion”

SYS_ANDROID_KERNELVERS   “androidKernelVersio

ION                      n”

SYS_FIRMWARE             “firmware”

SYS_HARDWARE             “hardware”

HARD_PRINTER             "printer"

HARD_MODEM               "modem"

HARD_LAN                 "lan";

HARD_GPRS                "gprs"

HARD_CDMA                "cdma"

HARD_WIFI                "wifi"

HARD_PICC                "picc"

HARD_IC                  "ic"

HARD_MAG                 "mag"

HARD_WCDMA               "wcdma"

HARD_BTH                 "bth"

HARD_GM                  "gm"

HARD_BEEP                "beep"

HARD_LED                 "led"
HARD_LED                           "location"



3.15.2.Interfaces

3.15.2.1.Beef_Api
Prototype   public static void Beef_Api(int ucMode, int DlyTime)

Function    Buzzer sounds at the specified frequency and duration

Input       ucMode - [in] Frequency setting, can be 0~6 value: 0 lowest frequency 6 most

            high frequency
            DlyTime - [in] Duration (in ms) (0~65535)

Output      None

Returns     None

Note        When the mode value is greater than 6, the function will use mode%7 as the

            sound frequency.



3.15.2.2.Beep_Api
Prototype   public static void Beep_Api(int flag)

Function    Send correct or wrong sound

Input       Flag - [in] 0 normal sound 1 wrong sound

Output      None

Returns     None

Note        None



3.15.2.3.Delay_Api
Prototype   public static void Delay_Api(int ms)

Function    Delay ms milliseconds

Input       Ms - delay time, unit: milliseconds.

Output      None

Returns     None

Note        None
3.15.2.4.deleteDir
Prototype   public static boolean deleteDir(java.io.File file)

Function    delete a system file

Input       file-[in]file

Output      none

Returns     true-success
            false-failed

Note        none



3.15.2.5.deleteFileInSe_Api
Prototype   public static int deleteFileInSe_Api(java.lang.String fileName)

Function    delete a file from se

Input       fileName-[in]the file to delete

Output      none

Returns     1-success
            <0-error code

Note        none



3.15.2.6.deleteFlashData_Api
Prototype   public static int deleteFlashData_Api(int addr, int deleteLen)

Function    delete the flash data from se

Input       addr - the start address
            deleteLen - the length of data

Output      none

Returns     1-success
            <0-error code

Note        none
3.15.2.7.DownLoadSn_Api
Prototype   public static int DownLoadSn_Api(int port)

Function    Download the machine serial number through the download tool

Input       port - [in]Serial Port

Output      none

Returns     0-success
            1-save machine serial number failed
            -1-send failed
            -2-time out
            -3-illegal serial port
            27-cancel

Note        none



3.15.2.8.FormatFileSystem_Api
Prototype   public static int FormatFileSystem_Api(int Flag)

Function    Formatting system files

Input       Flag - 0: delete multiple application files, depending on the download

            application 1: delete the current application file.

Output      None

Returns     0: success
            -1: failure
            1: marking error.

Note        None



3.15.2.9.GetAllVersion_Api
Prototype   public static Bundle GetAllVersion_Api()

Function    Get all version Numbers of the machine.

Input       None

Output      None

Returns     Bundle object
Note        None



3.15.2.10.GetEnv_Api
Prototype   public static int GetEnv_Api(java.lang.String szName, byte[] szValue, int flag,
                                 int bufsize, int Min, int Max)

Function    This algorithm first matches szName in the buffer and then searches the value in

            it. The file read must end with carriage return and line feed, and the contents

            read out are strings

Input       szName - [in]the parameter’s name in parameter file
            flag - [in]bit0-bit7, bit3 desids if the paramenter is indispensable, bit7Indicates

            whether the argument specified in the parameter file is greater than the expected

            string length, BufSize
            bufsize - the size of szValue
            Min - the minmum length
            Max - the maxmum length

Output      szValue - [out]result according to szName

Returns     1-has
            0-dosen’t have

Note        none



3.15.2.11.getFileListInSe_Api
Prototype   public      static     int   getFileListInSe_Api(java.util.ArrayList<java.lang.String>

            fileList)

Function    get the count of files according to file names

Input       fileList -[in] an array that stores file names

Output      none

Returns     >=0-the count of files
            <0-error code

Note        none
3.15.2.12.getSmartPosID
Prototype   public static int getSmartPosID(byte[] buffer)

Function    get customed datas of 128 bytes

Input       none

Output
            buffer - [out]the buffer of datas to read，can not greater than 128 bytes

Returns     0-success
            -1-get empty data
            -2-failed
            -3-error parameter

Note        none



3.15.2.13.GetSysTime_Api
Prototype   public static void GetSysTime_Api(byte[] Buf)

Function    Get system time

Input       Buf - [out]BCD time If the time is October 23, 2011 13:23:40, the time string of

            the week 1 is "\x20\x11\x10\x20\x13\x23\x40\x01"

Output      None

Returns     None

Note        Buf[7] is the day of the week, 0 to 6 1: Monday 2: Tuesday 3: Wednesday 4:

            Thursday 5: Friday 5: Saturday 0 means Sunday



3.15.2.14.GetTime_Api
Prototype   public static int GetTime_Api(DateUser Dt,
                                 TimeUser Tm)

Function    Get system time

Input       Dt - Date DateUser object
            Tm - Time TimeUser object

Output      None

Returns     0 Successful
            1 failed

Note        None



3.15.2.15.GetVersion_Api
Prototype   public static int GetVersion_Api(byte[] lpOut, byte[] VersionNum)

Function    get all version name of machine

Input       none

Output      lpOut - [out]20(mark)+1(length)+(content)+20(mark)+1(length)+...
            VersionNum - [out]count of versions that being got

Returns     0-success
            else-failed

Note        none



3.15.2.16.IsEnvParam_Api
Prototype   public static boolean IsEnvParam_Api()

Function    Whether hava parameters

Input       none

Output      none

Returns     1-have
            0-do not have

Note        none



3.15.2.17.IsHandleOnBase_Api
Prototype   public static int IsHandleOnBase_Api()

Function    Check whether the phone is on the base.

Input       None
Output      None

Returns     0: The phone is on the base
            1: The phone is not on the base

Note        None



3.15.2.18.PlaySound_Api
Prototype   public static void PlaySound_Api(int SoundNum, int SoundVolume)

Function    Play sound files

Input       SoundNum - Sound file number
            SoundVolume - The volume of the sound played, a total of 1-6 levels, 1 is the

            smallest, 6 is the maximum

Output      None

Returns     None

Note        None



3.15.2.19.PutEnv_Api
Prototype   public static int PutEnv_Api(java.lang.String szEvnName,
                                java.lang.String szEvnValue,
                                int EnvVaulueLen)

Function    write Env parameters

Input
            szEvnName - [in]parameter name, 20bytes at most，When this parameter value

            is "RECOVERENV", the parameter file's detection flag will be written on the

            first line of the parameter file, For names in excess of 20bytes, only the first

            20bytes are taken

            szEvnValue - [in]the value of parameter, 120bytes at most ， For names in

            excess of 20bytes, only the first 20bytes are taken
            EnvVaulueLen -[in]the length of value

Output      none
Returns     0-success
            1- szEvnName is illegal
            2-szEvnValue is illegal
            3-the file to be recoveried is not exists
            4-stroage is no enough
            5-other errors

Note        none



3.15.2.20.ReadAppInfo_Api(deprecated)
Prototype   public static int ReadAppInfo_Api(int AppNo, byte[] ai)

Function    Read infomations of multiple applications, each time read is the APP MSG

            structure

Input       AppNo -[in]the number of multiple applications, starts from 0
            ai -

Output      none

Returns     0-success
            else-failed

Note        none



3.15.2.21.readFileFromSE_Api
Prototype   public static int readFileFromSE_Api(java.lang.String fileName,
                                 byte[] dataOut,
                                 int offset,
                                 int dataLen)

Function    read datas from se

Input       fileName - [in]the file name of file that to be read
            offset - [in]address offset, it should be 0 or greater than 0
            dataLen - [in]the length that read

Output      dataOut -[out]the datas that read

Returns     >=0-the length of datas
            <0-error code

Note        none



3.15.2.22.readFlashData_Api
Prototype   public static int readFlashData_Api(int addr, byte[] buffer)

Function    get datas from se flash

Input       addr -[in] starting address
            buffer - [in]buffer

Output      none

Returns     >=0- the length of datas
            <0 -error code

Note        none



3.15.2.23.readNvRamFile_Api
Prototype   public static int readNvRamFile_Api(int offset, byte[] buf, int len)

Function    read nvram file

Input       offset - [in]offset
            buf -[in]buffer
            len - the length of datas,128bytes at most

Output      none

Returns     >0-the length of datas that been read actually
            <0-error code

Note        none



3.15.2.24.ReadPosSn
Prototype   public static java.lang.String ReadPosSn()

Function    Get the SN of the terminal

Input

Output
Returns     The SN of the terminal

Note



3.15.2.25.RunApp_Api(deprecated)
Prototype   public static int RunApp_Api(int AppNo)

Function    run multiple applications

Input       AppNo-[in]the number of multiple applications,starts from 0

Output      none

Returns     0-success
            else-failed

Note        none



3.15.2.26.SetBackParamFile_Api
Prototype   public static int SetBackParamFile_Api(java.lang.String fileName)

Function    Set the backup file path

Input       fileName-[in]Full file path

Output      none

Returns     none

Note        none



3.15.2.27.SetBaseBroadcast_Api
Prototype   public static void SetBaseBroadcast_Api(boolean open)

Function    Set whether to send a broadcast when the base state changes

Input       open -[in] true - send
                        false -do not send

Output      none

Returns     none

Note        none
3.15.2.28.setSmartPosID
Prototype   public static int setSmartPosID(byte[] data)

Function    write 128 bytes customed datas

Input
            data - [in]data to be written，128 bytes at most

Output      none

Returns     0-success
            -2-failed
            -3-error parameters

Note        none



3.15.2.29etSystemFunction
Prototype   public static boolean setSystemFunction(Bundle bundle)

Function    Set system function

Input       Bundle bundle
            Key: STATUSBARKEY
            Value: true – enable status bar       false – disable status bar
            Key: HOMEKEY
            Value: true – enable home key          false – disable home key
            Key: FUNCTIONKEY
            Value: true – enable function key       false – disable function key

Output

Returns

Note



3.15.2.30.SetTime_Api
Prototype   public static int SetTime_Api(DateUser Dt, TimeUser Tm)

Function    Set system time

Input       Dt - Date DateUser object
            Tm - Time TimeUser object
Output      None

Returns     0 Successful
            1 failed

Note        None



3.15.2.31.silentInstallApk_Api
Prototype   public static void silentInstallApk_Api(java.lang.String filePath,
                                                   java.lang.String pkgName,
                                SystemApi.IAppInstallResult result)

Function    install apk scliently

Input       filePath -[in]file path
            pkgName -[in]package name
            result -callback

Output      none

Returns     none

Note        none



3.15.2.32.silentUnInstallApk_Api
Prototype   public static void silentUnInstallApk_Api(java.lang.String pkgName,
                                    SystemApi.IAppUninstallResult result)

Function    uninstall apk scliently

Input       padName-[in]package name
            result-callback

Output      none

Returns     none

Note        none



3.15.2.33.silentUnInstallApk_Api
Prototype   public static void silentUnInstallApk_Api(java.lang.String pkgName)
Function    uninstall apk scliently

Input       padName-[in]package name

Output      none

Returns     none

Note        none



3.15.2.34.stopBeep_api
Prototype   public static void stopBeep_api()

Function    Stop the buzzer.

Input       None

Output      None

Returns     None

Note        None



3.15.2.35.SystemExit_Api
Prototype   public static void SystemExit_Api()

Function    Sdk resource release

Input       None

Output      None

Returns     None

Note        None



3.15.2.36.SystemInit_Api
Prototype   public static int SystemInit_Api(int argc,
                                   byte[] argr,
                                   Context context,
                                   ISdkStatue sdkStatue)

Function    Initialize SDK

Input       Argc - [in]number of argrs
            Argr - [in] path
            Context - [in] context cannot be null
            sdkStatue - [in] sdk initialization callback information

Output      None

Returns     None

Note        None



3.15.2.37.SystemInit_Api
Prototype   public static int SystemInit_Api(int argc, byte[] argr, Context context)

Function    Initialize SDK

Input       Argc - [in]number of argrs
            Argr - [in] path
            Context - [in] context cannot be null

Output

Returns

Note



3.15.2.38.SystemPowerOff_Api
Prototype   public static void SystemPowerOff_Api()

Function    power off system

Input       none

Output      none

Returns     none

Note        none



3.15.2.39.SystemReboot_Api
Prototype   public static void SystemReboot_Api()

Function    reboot system

Input       none
Output      none

Returns     none

Note        none



3.15.2.40.TimerCheck_Api
Prototype   public static int TimerCheck_Api(int Timeid, int ms)

Function    Check if the specified timer has timed out.

Input       Timeid - the ID of the timer (the ID returned when calling TimerSet_Api)
            Ms - time in milliseconds

Output      None

Returns     0 did not timeout
            1 timeout

Note        None



3.15.2.41.TimerSet_Api
Prototype   public static int TimerSet_Api()

Function    Start a user timer, the minimum timing unit is 1ms

Input       None

Output      None

Returns     Timer ID number

Note        None



3.15.2.42.writeFileToSE_Api
Prototype   public static int writeFileToSE_Api(java.lang.String fileName,
                                   byte[] data,
                                   int offset,
                                   int dataLen)

Function    write datas to se

Input       fileName-[in]the name of the file to be written in
            data - [in]the datas to be written
            offset - [in]address offset, it should be 0 or greater than 0
            dataLen - [in]the length of datas

Output      none

Returns     1-success
            <0-error code

Note        none



3.15.2.43.writeFlashData_Api
Prototype   public static int writeFlashData_Api(int addr, byte[] data)

Function    write datas to se flash

Input       addr-[in]starting address
            data-[in]data

Output      none

Returns     1-success
            else-error code

Note        none



3.15.2.44.writeNvRamFile_Api
Prototype   public static int writeNvRamFile_Api(int offset, byte[] data, int len)

Function    write nvram in

Input       offset -[in]address offset
            data - datas to be written
            len - the length of datas,128 bytes at most

Output      none

Returns     >0-the length of datas that to be written actually
            <-0-error code

Note        none
3.16.Class MagCardApi
3.16.1.User Permissions
<uses-permission android:name="android.permission.CLOUDPOS_MSR"/>

3.16.2.Private Constants
                 Name                           Value                         Note

FIRST_TRACK                         1                       the first track

SECOND_TRACK                        2                       the second track

THIRD_TRACK                         3                       the third track



3.16.3.Interfaces
     These APIs are for A90/A70, not for A70SV because A70SV not have hardware module for

dealing with magnetic strip card.


3.16.3.1.MagOpen_Api
Prototype     public static int MagOpen_Api()

Function      The magnetic stripe module is powered on

Input         None

Output        None

Returns       0-success
              Other - failed

Note          None



3.16.3.2.MagClose_Api
Prototype     public static int MagClose_Api()

Function      The magnetic stripe module is powered off

Input         None

Output        None

Returns       0-success
              Other - failed

Note          None
3.16.3.3.MagReset_Api
Prototype   public static void MagReset_Api()

Function    Clears the magnetic card buffer data.

Input       None

Output      None

Returns     None

Note        None



3.16.3.4.MagSwiped_Api
Prototype   public static int MagSwiped_Api()

Function    Check if the card has been brushed.

Input       None

Output      None

Returns     0x00 Credit card
            0xff cardless

Note        None



3.16.3.5.MagRead_Api
Prototype   public static int MagRead_Api(byte[] RBuf,
                                byte[] RLen)

Function    Read the data of 1, 2 and 3 tracks of the magnetic card buffer.

Input       None

Output      RBuf - [out] Holds 1, 2, 3 track data
            RLen - [out] Stores the length of 1, 2, 3 track data

Returns     0x31 - Correct credit card
            0x00 - Not swiped
            0x37-Reading card error

Note        None
3.16.3.6.MagGetTradCode_Api
Prototype   public static int MagGetTradCode_Api(int tradNo)

Function    Determine whether the track data is normal

Input       tradNo - [in] 1-track 1 2-track 2 3-track 3

Output      None

Returns     1-parameter error
            0 - No data
            1-track data is correct
            2-track data error

Note        None



3.16.3.7.MagSetCheckLrc_Api
Prototype   public static int MagSetCheckLrc_Api(boolean enable)

Function    Set whether to check LRC.

Input       Enable - [in] true: check LRC false: no LRC.

Output      None

Returns     None

Note        None



3.16.3.8.getTrackData_Api
Prototype   public static byte[] getTrackData_Api(int track)

Function    get the datas of a track

Input       track-[in]the              track               to               get       data


            from（FIRST_TRACK，SECOND_TRACK，THIRD_TRACK）

Output      None

Returns     the datas

Note        there is no data or brush card error if it returns null or an empty str
3.17 Rs232Api
3.17.1 Interfaces

3.17.1.1. PortOpen_Api
Prototype   public static int PortOpen_Api(int comport)

Function    Open the specific port

Input       comport-[int] the port NO. of the port that need to be open

Output      None

Returns     0-success
            -1-failed

Note        None



3.17.1.2. PortClose_Api
Prototype   public static int PortClose_Api(int comport)

Function    Close the specific port

Input       comport-[int] the port NO. of the port that need to be closed

Output      None

Returns     0-success
            -1-failed

Note        None



3.17.1.3. PortSetBaud_Api
Prototype   public static int PortSetBaud_Api(int comport, int baud, int databits, int parity,
             int stopbits)

Function    Set the baud rate of the port

Input       comport-[int] the port NO. of the port that need to set baud rate
            baud-[int] the baud rate that need to be changed to
            databits-[int] data bits
            parity-[int] varication type
            stopbits-[int] stop bits

Output      None
Returns     0-success
            -1-failed

Note        None



3.17.1.4. PortSends_Api
Prototype   public static int PortSends_Api(int comport, byte[] buf, int len)

Function    Send data through the specific port

Input       comport-[int] the port NO. of the port that is used to send data
            buf-[byte[]] the data that need to be sent
            len-[int] the length of the data that need to be sent

Output      None

Returns     0-success
            -1-failed

Note        None



3.17.1.5. PortRecv_Api
Prototype   public static int PortRecv_Api(int comport, byte[] buf,
                            int len, int ms)

Function    Receive data through the specific port

Input       comport-[int] the port NO. of the port that is used to receive data
            len-[int] the length of the data that expect to receive

Output      buf-[byte[]] the data that is received

Returns     -1-failed
            else-the length of data that is received

Note        None

3.17.1.6. PortIsEmpty
Prototype   public static int PortIsEmpty(int comport)

Function    Check whether the buffer of the port is empty

Input       comport-[int] the port NO. of the port that need to be checked
Output    None

Returns   0-empty
          else-not empty

Note      None
4.Core Package – Structures (com.vanstone.trans.api.struct)

4.1.Class ApduResp
                 Field Name                                       Definition

byte readCardDataOk                         Card data exchange result.

                                            1: OK

                                            0xAA: Failure

short lenOut                                Length of data returned from card.

byte[] dataOut                              Data returned from card.

byte sWA                                    First status word.

byte sWB                                    Second status word.
4.2.Class ApduSend
                 Field Name                        Definition

byte[] Command                INS, CLA, P1, P2

short Lc                      Lc

byte[] DataIn                 Data to be sent

short Le                      Le

byte EnableCancel             Whether pressing cancle button to return is allowed
5.Addon Package – Utilities
(com.vanstone.utils)
5.1.Class DesUtils
5.1.1.decrypt
Prototype   public static byte[] decrypt(byte[] source, byte[] key)

Function    decryption

Input       source -[in]the data need to be decrypted
            key -[in]privare key, 16bytes

Output      none

Returns     the data that has been decrypted

Note        none



5.1.2.decrypt
Prototype   public static java.lang.String decrypt(java.lang.String source,java.lang.String

            key)

Function    decryption

Input       source -[in]the data need to be decrypted, a hexadecimal string
            key - private key, a hexadecimal string, 16bytes

Output      none

Returns     the data that has been decryped,a hexadecimal string

Note        none



5.1.3.decryptDes
Prototype   public static byte[] decryptDes(byte[] keyByte, java.lang.String srcData)

Function    single DES decryption

Input       keyByte -[in]private key, 8 bytes
            srcData - [in]the data need to be decrypted

Output      none

Returns     the data that has been decryped

Note        none
5.1.4.decryptTDes
Prototype   public static byte[] decryptTDes(byte[] keyByte,java.lang.String srcData)

Function    3 DES decryption

Input       keyByte -[in]private key, 16 bytes
            srcData -[in]the data need to be decrypted

Output      none

Returns     the data that has been decryped

Note        none



5.1.5.encrypt
Prototype   public static byte[] encrypt(byte[] source, byte[] key)

Function    encrypt

Input       source -[in]the data need to be encrypted
            key -[in]private key, 16 bytes

Output      none

Returns     the data that has been encrypted

Note        none



5.1.6.encrypt
Prototype   public static java.lang.String encrypt(java.lang.String source,
                                     java.lang.String key)

Function    encrypt

Input       source -[in]the data need to be encrypted
            key -[in]private key, a hexadecimal string,16 bytes

Output      none

Returns     the data that has been encrypted

Note        none
5.1.7.encryptDes
Prototype   public static byte[] encryptDes(byte[] keyByte, java.lang.String srcData)

Function    single DES encrypted

Input       keyByte -[in]private key,8 bytes
            srcData -[in]the data that need to be encrypted

Output      none

Returns     the data that has been encrypted

Note        none



5.1.8.encryptTDes
Prototype   public static byte[] decryptDes(byte[] keyByte, java.lang.String srcData)

Function    3 DES encrypted

Input       keyByte -[in]private key,16 bytes
            srcData -[in]the data that need to be encrypted

Output      none

Returns     the data that has been encrypted

Note        none



5.1.9.Xor
Prototype   public static byte[] Xor(byte[] data1, byte[] data2)

Function    xor

Input       data1 -[in]Datas that participates in the xor operation
            data2 - [in]the lengthes of datas that participates in the xor operation

Output      none

Returns     the result

Note        none



5.1.10.XorCalc_Api
Prototype   public static int XorCalc_Api(byte[] Inbuf, int Len)

Function    xor

Input       Inbuf -[in]Datas that participates in the xor operation
          Len -[in]the lengthes of datas that participates in the xor operation

Output    none

Returns   the result

Note      none
5.2.Class QrcodeUtils
5.2.1.createQRImage
Prototype   public static Bitmap createQRImage(java.lang.String url,

                                  int desiredWidth,

                                  int desiredHeight)

Function    Generate a qr code

Input       url-[in]the content of qr code
            desiredWidth-[in]width of qr code
            desiredHeight-[in]height of qr code

Output      none

Returns     a bitmap of qr code

Note        none



5.2.2.creatBarcode
Prototype   public static Bitmap creatBarcode(Context context,
                              java.lang.String contents,
                              int desiredWidth,
                              int desiredHeight,
                           com.google.zxing.BarcodeFormat barcodeFormat,
                              boolean displayCode)

Function    Generate one-dimensional code

Input       context-[in]context
            contents-[in]the content of one-dimensional code
            desiredWidth-[in]width
            desiredHeight-[in]height
            barcodeFormat-[in]the format of barcode
            displayCode-[in]whether to display the code

Output      none

Returns     a bitmap of one-dimensional code

Note        none
5.2.3.decode
Prototype   public static java.lang.String decode(Bitmap bitmap)

Function    Parsing bitmap

Input       bitmap –[in] bitmap object

Output      none

Returns     Parsed data of bitmap

Note        none
5.3.Class ByteUtils
5.3.1.bytesToStructs
Prototype   public static int bytesToStructs(byte[] buff, StructInterface[] sts)

Function    change byte array to struct array

Input       buff -[in]byte array
            sts -[in]struct object

Output      none

Returns     0-success
            1-failed

Note        none



5.3.2.getMax
Prototype   public static int getMax(byte[] arr)

Function    Get the largest number in a byte array

Input       arr –[in] array

Output      none

Returns     The largest number

Note        none



5.3.3.initStructs
Prototype   public static int initStructs(StructInterface[] sts)

Function    Instantiates an array of structs

Input       sts -[in]struct array

Output      none

Returns     0-success
            1-failed

Note        none



5.3.4.isByteEmpty
Prototype   public static boolean isByteEmpty(byte[] data)

Function    determin whether the byte array is empty
Input       data -[in]the byte array

Output      none

Returns     true-empty
            false-is not empty

Note        none



5.3.5.isdigit
Prototype   public static boolean isdigit(byte data)

Function    ditermin whether it is a digit

Input       none

Output      none

Returns     true-is a digit
            false-is not a digit

Note        none



5.3.6.memcmp
Prototype   public static int memcmp(byte[] data1, int pos1, byte[] data2, int pos2, int len)

Function    Determines whether two byte[] are equal

Input       data1 -[in] byte array
            pos1 -[in]position
            data2 -[in]byte array
            pos2 -[in]pisiton
            len -[in]length

Output      none

Returns     0-equal
            1-data1>data2
            -1-data1

Note        none



5.3.7.memcmp
Prototype   public static int memcmp(byte[] data1, byte[] data2, int len)
Function    Determines whether two byte[] are equal

Input       data1-[in]byte array
            data2-[in]byte array
            len-[in]length

Output      none

Returns     0-equal
            1-data1>data2
            -1-data1

Note        none



5.3.8.memcmpHex
Prototype   public static int memcmpHex(byte[] data1, java.lang.String dataHex, int len)

Function    Determines whether two byte[] are equal

Input       data1 -[in]byte array
            dataHex -[in]a string
            len -[in]length

Output      none

Returns     0-equal
            1-data1>data2
            -1-data1

Note        none



5.3.9.memcpy
Prototype   public static void memcpy(byte[] dest, byte[] src)

Function    copy a byte[]

Input       dest -[in]destination
            src - [in]source

Output      none

Returns     none

Note        none
5.3.10.memcpy
Prototype   public static void memcpy(byte[] dest, java.lang.String src)

Function    copy a byte[]

Input       dest -[in]destination
            src - [in]source

Output      none

Returns     none

Note        none



5.3.11.memcpy
Prototype   public static void memcpy(byte[] dest, java.lang.String src, int len)

Function    copy a byte[]

Input       dest -[in]destination
            src - [in]source
            len -[in]length

Output      none

Returns     none

Note        none



5.3.12.memcpy
Prototype   public static void memcpy(byte[] dest, int destbegin, byte[] src,
                              int srcbegin, int len)

Function    copy a byte[]

Input       dest -[in]destination

            destbegin -[in]the start index of target byte array

            src -[in]source

            srcbegin -[in]the start index of source byte array

            len -[in]length

Output      none

Returns     none

Note        none
5.3.13.memcpy
Prototype   public static void memcpy(byte[] dest, int destbegin, java.lang.String src,
                              int srcbegin, int len)

Function    copy an array

Input       dest -[in]destination

            destbegin -[in]the start index of target byte array

            src -[in]source

            srcbegin -[in]the start index of source byte array

            len -[in]length

Output      none

Returns     none

Note        none



5.3.14.memcpy
Prototype   public static void memcpy(byte[] dest, byte[] src, int len)

Function    copy an array

Input       dest -[in]destination
            src -[in]source
            len -[in]length

Output      none

Returns     none

Note        none



5.3.15.memcpyHex
Prototype   public static void memcpyHex(byte[] buf, java.lang.String data, int len)

Function    copy hexadecima datas to byte []

Input       buf -[in]buffer
            data -[in]a hexadecimal string like “0503”
            len -[in]length

Output      none
Returns     none

Note        none



5.3.16.memcpyHex
Prototype   public static void memcpyHex(byte[] buf,
                                java.lang.String data,
                                java.lang.String target,
                                java.lang.String replacement,
                                int len)

Function    copy hexadecima datas to byte []

Input       data -[in] a hexadecimal data
            target -[in]charactor that need to be replaced
            replacement -[in]charactor that used to replace target
            len -[in]length

Output      buf - [out]buffer

Returns     none

Note        none



5.3.17.memmove
Prototype   public static void memmove(byte[] data, int to, int from, int len)

Function    Move a byte array to another index

Input       data -[in] the byte array need to be moved
            to -[in] the destination index
            from –[in] the original index
            len -[in] the length of the byte array

Output      none

Returns     none

Note        none



5.3.18.memset
Prototype   public static void memset(byte[] data, int start, char ch, int len)
Function    insert a character from an index of a byte array

Input       data- [in] byte array
            start- [in] the start index
            ch- [in] the character that need to be inserted
            len- [in] length

Output      none

Returns     none

Note        none



5.3.19.mergeByte
Prototype   public static byte[] mergeByte(byte[] begin ,byte[] end)

Function    Merge byte array

Input       begin -[in]byte arrary to be merged
            end-[in]byte arrary to be merged

Output      none

Returns     the byte array after merged

Note        none



5.3.20.strcat
Prototype   public static void strcat(byte[] dest, byte[] src)

Function    copy a byte array

Input       dest -[in]target byte array
            src -[in]source byte array

Output      none

Returns     none

Note        none



5.3.21.strcat
Prototype   public static void strcat(byte[] dest, java.lang.String src)

Function    copy a byte array

Input       dest -[in]target byte array
            src -[in]source byte array

Output      none

Returns     none

Note        none



5.3.22.strchr
Prototype   public static byte[] strchr(byte[] buf, char ch)

Function    return datas that start with ch from buffer,null will returned if none of the

            condition is met

Input       buf -[in] byte array
            ch -[in]character

Output      none

Returns     success-the datas that start with ch
            failed-null

Note        none



5.3.23.strchr
Prototype   public static byte[] strchr(byte[] buf, char ch, byte[] lenBuf)

Function    return datas that start with ch from buffer,null will returned if none of the

            condition is met

Input       buf -[in] byte array
            ch -[in]character
            lenBuf -[in]byte array

Output      none

Returns     success-the datas that start with ch
            failed-null

Note        none



5.3.24.strcmp
Prototype   public static int strcmp(byte[] data1, byte[] data2)

Function    determine if two bytes are consistent when converted to a string
Input       data1-[in]byte array
            data2-[in]byte array

Output      none

Returns     true-consistent
            false-not consistent

Note        none



5.3.25.strcmp
Prototype   public static int strcmp(byte[] data1, java.lang.String data2)

Function    determine if the byte array is consistent with data2 when converted t a string

Input       data1-[in]byte array
            data2-[in]string

Output      none

Returns     true-consistent
            false-not consistent

Note        none



5.3.36.strcpy
Prototype   public static void strcpy(byte[] dest, byte[] src, int len)

Function    copy to a byte array

Input       dest -[in]target byte array
            src -[in]source byte array
            len -[in]length

Output      none

Returns     none

Note        none



5.3.27.strcpy
Prototype   public static void strcpy(byte[] dest, byte[] src)

Function    copy to a byte array

Input       dest -[in]target byte array
            src -[in]source byte array

Output      none

Returns     none

Note        none



5.3.28.strcpy
Prototype   public static void strcpy(byte[] dest, java.lang.String src, int len)

Function    copy to a byte array

Input       dest -[in]target byte array
            src -[in]source string
            len -[in]length

Output      none

Returns     none

Note        none



5.3.29.strcpy
Prototype   public static void strcpy(byte[] dest, java.lang.String src)

Function    copy to a byte array

Input       dest -[in]target byte array
            src -[in]source string

Output      none

Returns     none

Note        none



5.3.30.strcpy
Prototype   public static void strcpy(byte[] dest, int destbegin, byte[] src,
                         int srcbegin, int len)

Function    copy to a byte array

Input       dest -[in]target byte array
            destbegin -[in]start index
            src -[in]source byte array
            srcbegin -[in]source byte array
            len -length

Output      none

Returns     none

Note        none



5.3.31.strcpy
Prototype   public static void strcpy(byte[] dest, int destbegin, java.lang.String src,
                          int srcbegin,int len)

Function    copy to a byte array

Input       dest -[in]target byte array
            destbegin -[in]start index
            src -[in]source byte array
            srcbegin -[in]start index
            len -[in]length

Output      none

Returns     none

Note        none



5.3.32.strlen
Prototype   public static int strlen(byte[] buf)

Function    get the actual length of byte[]

Input       buf-[in]byte array

Output      none

Returns     none

Note        none



5.3.33.strlen
Prototype   public static int strlen(byte[] buf,int begin)

Function    get the actual length of byte[]

Input       buf -[in]byte array
            begin -[in]start index

Output      none

Returns     none

Note        none



5.3.34.strncpy
Prototype   public static byte[] strncpy(byte[] dest, byte[] src, int num)

Function    Copy the contents of SRC (characters, Numbers, Chinese characters...(to dest,

            the number of copies is determined by the value of num, and returns a pointer to

            dest.If a null character is encountered ('\0') and no num character has been

            reached yet, use (num - n).

Input       dest -[in]target byte array
            src -[in]source byte array
            num -[in]length

Output      none

Returns     none

Note        none



5.3.35.strtok
Prototype   public static byte[] strtok(byte[] buf, java.lang.String delim)

Function    Break a string into a set of strings.Buf is the string to be decomposed, delim is

            the delimiter string.

Input       buf -[in]byte array
            delim -[in]string

Output      none

Returns     a byte array stores string datas

Note        none



5.3.36.structsToBytes
Prototype   public static byte[] structsToBytes(StructInterface[] sts)

Function    convert a struct array to a byte array
Input       sts -[in]struct array

Output      none

Returns     failed-null
            success-a byte array

Note        none



5.3.37.subBytes
Prototype   public static byte[] subBytes(byte[] src, int begin)

Function    Truncate a byte array

Input       src -[in]souce byte array
            begin-[in]start index

Output      none

Returns     a byte array that truncated

Note        none



5.3.38.subBytes
Prototype   public static byte[] subBytes(byte[] src, int begin, int len)

Function    Truncate a byte array

Input       src -[in] source byte[]
            begin -[in]start index
            len -[in]length

Output      none

Returns     a byte array that truncated

Note        none



5.3.39.subBytesToString
Prototype   public static java.lang.String subBytesToString(byte[] src,int begin,int len)

Function    truncate a byte and convert the result to string

Input       src -[in] source byte[]

            begin -[in]start index

            len -[in]length
Output      none

Returns     a string

Note        none



5.3.40.subBytesToString
Prototype   public static java.lang.String subBytesToString(byte[] src, int begin)

Function    truncate a byte and convert the result to string

Input       src -[in] source byte[]
            begin -[in]start index
            len -[in]length

Output      none

Returns     a string

Note        none
5.4.Class CommonConvert
5.4.1.ascStringToBCD
Prototype   public static byte[] ascStringToBCD(java.lang.String ascString)

Function    Convert ASC string to BCD fomat

Input       ascString: ASC String

Output

Returns     BCD byte array

Note        byte[] bcd = CommonConvert.ascStringToBCD("F8765432100000000000")



5.4.2.ascStringToBCD
Prototype   public static byte[] ascStringToBCD(java.lang.String ascString, int len)

Function    Convert ASC string to BCD fomat

Input       ascString: ASC String
            len: expect length.
            len < length of ascString / 2, the final length will be the length of ascString / 2
            len >= length of ascString / 2, the final length will be len, padding “0”s on the

            left

Output

Returns     BCD byte array

Note



5.4.3.ascStringToBCD
Prototype   public static byte[] ascStringToBCD(java.lang.String s,
                                  java.lang.String alignment)

Function    Convert ASC string to BCD fomat

Input       ascString: ASC String
            alignment: “left”–padding “0”s on the right “right”–padding “0”s on the left

Output

Returns     BCD byte array

Note
5.4.4.BCDFToAmtConvert
Prototype   public static java.lang.String BCDFToAmtConvert(byte[] pSrc)

Function    format BCD amount, ####.00

Input       pSrc -[in]

Output      none

Returns     the formated amount

Note        none



5.4.5.bcdToASCString
Prototype   public static java.lang.String bcdToASCString(byte[] bytes)

Function    Convert BCD byte array to ASC string

Input       Byte[] bytes: BCD byte array

Output

Returns     ASC string

Note        byte[] bcd = new byte[]{0x12, 0x23, 0x34, 0x45, 0x56, 0x67, 0x78};
            String s = CommonConvert.bcdToASCString(bcd);
            s: 12233445566778



5.4.9.bcdToINT
Prototype   public static int bcdToINT(byte[] data)

Function    Convert BCD byte array to int

Input       byte[] data: BCD byte array

Output

Returns     int value that convernt from the BCD byte array

Note        int i = CommonConvert.bcdToINT(new byte[]{0x12, 0x34});
            s: 1234



5.4.10.binaryStringToBytes
Prototype   public static byte[] binaryStringToBytes(java.lang.String binary)

Function    Convert binary to byte array

Input       Binary string
Output

Returns     byte array

Note        Length of binary should be multiple of 8



5.4.12.byte2HexString
Prototype   public static java.lang.String byte2HexString(byte b)

Function    convert byte to a hexadecimal data

Input       b -[in]byte that to be converted

Output      none

Returns     a string data that convert from b

Note        none



5.4.14.bytesToHexString
Prototype   public static java.lang.String bytesToHexString(byte[] bArray)

Function    Convert byte array to HEX string

Input       Byte array

Output

Returns     HEX string

Note



5.4.15.bytesToInt
Prototype   public static int bytesToInt(byte[] data)

Function    convert a 4 bytes data to a data with type of integer

Input       data-[in]data that to be converted

Output      none

Returns     a integer data

Note        none



5.4.16.bytesToIntValue
Prototype   public static int bytesToIntValue(byte[] array)

Function    Convert byte array to a int value
Input       byte array

Output

Returns     a int value

Note        The length of the byte array should be 4 bytes
            int i = CommonConvert.bytesToInt(new byte[]{12,12,23,23});
            i: 387386380



5.4.17.bytesToLong
Prototype   public static long bytesToLong(byte[] data)

Function    convert a 4 bytes data to a data with type of long

Input       data-[in]data that to be converted

Output      none

Returns     a data with type of long

Note        none



5.4.18.bytesToShort
Prototype   public static short bytesToShort(byte[] data)

Function    convert a 2 bytes data to a data with type of short

Input       data-[in]the data that to be converted

Output      none

Returns     a short data with type of short

Note        none



5.4.19.BytesToString
Prototype   public static java.lang.String BytesToString(byte[] buf)

Function    convert data’s type from byte to string

Input       buf-[in]data that to be converted

Output      none

Returns     none

Note        none
5.4.20.bytesToString
Prototype   public static java.lang.String bytesToString(byte[] buffer, int offset, int len)

Function    Convert byte array to string

Input       byte[] buffer: the byte array that need to be converted
            int offset: the index that start to convert
            int len: expect length

Output

Returns     The string value that is converted from the byte array

Note



5.4.21.bytesToString
Prototype   public static java.lang.String bytesToString(byte[] buffer, int offset,
                                     int len, java.lang.String charset)

Function    Convert byte array to string

Input       byte[] buffer: the byte array that need to be converted
            int offset: the index that start to convert
            int len: expect length
            String charset: charset

Output

Returns     The string value that is converted from the byte array

Note



5.4.22.bytesToString
Prototype   public static java.lang.String bytesToString(byte[] buffer, int offset, int len,
                                     java.lang.String charset,
                                                             java.lang.String defaultValue)

Function    Convert byte array to string

Input       byte[] buffer: the byte array that need to be converted
            int offset: the index that start to convert
            int len: expect length
            String charset: charset
            String defaultValue: default value

Output

Returns     The string value that is converted from the byte array

Note



5.4.23.bytesToString
Prototype   public static java.lang.String bytesToString(byte[] buffer,
                                   java.lang.String charset)

Function    Convert byte array to string

Input       byte[] buffer: the byte array that need to be converted
            String defaultValue: default value

Output

Returns     The string value that is converted from the byte array

Note



5.4.26.FillStr
Prototype   public static byte[] FillStr(java.lang.String desc, char ch, int len)

Function    fill a string

Input       desc -[in]The original data
            ch -[in]the charactor to be filled in desc
            len -[in]the length after being filled

Output      none

Returns     a byte array after being filled

Note        none



5.4.27.FillStr
Prototype   public static byte[] FillStr(int desc, char ch, int len)

Function    Fill in a charactor

Input       desc -[in]The original data
            ch -[in]the charactor to be filled in desc
            len -[in]the length after being filled
Output

Returns     A byte array after being filled

Note



5.4.37.hexStringToByte
Prototype   public static byte[] hexStringToByte(java.lang.String src)

Function    Convert HEX string to byte array

Input       HEX string

Output

Returns     The byte array that is converted from the HEX string

Note



5.4.38.intToBCD
Prototype   public static byte[] intToBCD(int iVal)

Function    convert data of type int to data of type BCD

Input       iVal-[in]data that to be converted

Output      none

Returns     a byte array

Note        none



5.4.39.intToBCD
Prototype   public static byte[] intToBCD(int iVal, int len)

Function    convert data of type int to data of type BCD

Input       iVal-[in]data that to be converted
            len-[in]length

Output      none

Returns     a byte array

Note        none



5.4.40.intToBytes
Prototype   public static byte[] intToBytes(int n)
Function    convert data of type integer to data of type byte[]

Input       n-[in]data that to be converted

Output      none

Returns     a byte array

Note        none



5.4.41.longToBytes
Prototype   public static byte[] longToBytes(long n)

Function    convert dataa of type long to a 4 bytes data

Input       n-[in]data that to be converted

Output      none

Returns     a byte array

Note        none




5.4.44.shortToBytes
Prototype   public static byte[] shortToBytes(short data)

Function    convert data of type short to a 2 bytes data

Input       none

Output      none

Returns     a byte array

Note        none



5.4.45.StringFToAmtConvert
Prototype   public static java.lang.String StringFToAmtConvert(java.lang.String desc)

Function    fomat amount of type string,####.00

Input       desc-[in]

Output      none

Returns     data after formated

Note        none
5.4.46.StringToBytes
Prototype   public static byte[] StringToBytes(java.lang.String str)

Function    convert a data of type string to a data of type of byte

Input       str-[in]the data that to be converted

Output      none

Returns     a byte array

Note        none



5.4.47.StringToBytes
Prototype   public static byte[] StringToBytes(java.lang.String str,
                              java.lang.String encoding)

Function    convert a data of type string to a data of type of byte

Input       str-[in]the data that to be converted
            encoding-[in]encoding

Output      none

Returns     a byte array

Note        none



5.5.Class DateUtils
5.5.1.addCurDate
Prototype   public static java.lang.String addCurDate(java.lang.String format,int days)

Function    get current date and days

Input       format - [in]date format
            days -[in]days

Output      none

Returns     the date

Note        none



5.5.2.format
Prototype   public static java.lang.String format(java.util.Date date,
                               java.lang.String format)

Function    format a date according to the given pattern
Input       date-[in]date
            format-[in]pattern

Output      none

Returns     a string

Note        none



5.5.3.format
Prototype   public static java.lang.String format(java.lang.String date,
                                 java.lang.String org_format,
                                 java.lang.String dest_format)

Function    change a date’s format

Input       date -[in]the date that to be parsed
            org_format -[in]the original format
            dest_format -[in]the target format

Output      none

Returns     the date after parsed

Note        none



5.5.4.getCurDate
Prototype   public static java.lang.String getCurDate(java.lang.String format)

Function    get current date of the given pattern

Input       format-[in]pattern

Output      none

Returns     current date

Note        none



5.5.5.parse
Prototype   public static java.util.Date parse(java.lang.String data,
                             java.lang.String format)

Function    get the date according to the given pattern based on the string
Input     data-[in]the string
          format-[in]pattern

Output    none

Returns   date

Note      none
5.6.Class FileUtils
5.6.1.ReadFileLine
Prototype   public static java.util.List ReadFileLine(java.lang.String fileName)

Function    Read the file line by line and store into a list

Input       fileName-[in]file name or directory name,both of the should contain the

            absolute path

Output      none

Returns     a list

Note        none



5.6.2.SaveFile
Prototype   public static int SaveFile(java.lang.Object obj, java.lang.String filePath)

Function    save a file

Input       obj -[in]object
            filePath -[in]file path

Output      none

Returns     0-success
            1-failed

Note        none



5.6.3.WriteFileLine
Prototype   public static void WriteFileLine(java.lang.String fileName,
                                   java.lang.String content)

Function    Write file line by line

Input       file- [in] file name
            content- [in] the content to be written to files

Output      none

Returns     none

Note        none
5.7.Class ImageTools
5.7.1.Bitmap2Bmp
Prototype   public static byte[] Bitmap2Bmp(Bitmap bitmap)

Function    Save bitmap as BMP image

Input       bitmap-[in]bitmap

Output      none

Returns     0-succecss
            <0-failed

Note        none



5.7.2.convertToBlackWhite
Prototype   public static Bitmap convertToBlackWhite(Bitmap bmp)

Function    Converts a color image to a black and white image

Input       bmp-[in]bmp

Output      none

Returns     a bitmap

Note        none



5.7.3.getBitMap
Prototype   public static Bitmap getBitMap(java.lang.String HexSign)

Function    Get bitmap

Input       HexSign- [in] data used to generate bitmap

Output      none

Returns     bitmap

Note        none



5.7.4.getBitMap
Prototype   public static Bitmap getBitMap(byte[] SignBuf)

Function    Get bitmap

Input       SignBuf- [in] data used to generate bitmap

Output      none
Returns     bitmap

Note        none



5.7.5.readImage
Prototype   public static Bitmap readImage(java.lang.String filename)

Function    convert an image to a bitmap

Input       filename-[in]bitmap path

Output      none

Returns     bitmap

Note        none



5.7.6.saveImage
Prototype   public static int saveImage(java.lang.String filename, Bitmap bitmap)

Function    save bitmap as png image

Input       filename-[in]path
            bitmap-[in]image name

Output      none

Returns     0-success
            1-failed

Note        none
5.19.Class ZipUtils
5.19.1.getEntriesEnumeration
Prototype   public     static   java.util.Enumeration<?>     getEntriesEnumeration(java.io.File

            zipFile) throws java.util.zip.ZipException,java.io.IOException

Function    get the zip file object within the zip file to get its properties

Input       zipFile -[in]zip file

Output      none

Returns     success-a list of zip files
            java.util.zip.ZipException - the compressed file format is incorrect
            java.io.IOException - IO-Wrong operation

Note        none



5.19.2.getEntriesNames
Prototype   public static java.util.ArrayList<java.lang.String> getEntriesNames(java.io.File

            zipFile) throws java.util.zip.ZipException, java.io.IOException

Function    get the file list in a zip file

Input       zipFile -[in]zip file

Output      none

Returns     a list of file names that get from zip file

Note        none



5.19.3.getEntryComment
Prototype   public static java.lang.String getEntryComment(java.util.zip.ZipEntry entry)
                     throws java.io.UnsupportedEncodingException

Function    Gets a comment of the compressed file object

Input       entry - [in]compressed file object

Output      none

Returns     the comment of the compressed file object

Note        none
5.19.4.getEntryName
Prototype   public static java.lang.String getEntryName(java.util.zip.ZipEntry entry)
                   throws java.io.UnsupportedEncodingException

Function    get the name of compressed file object

Input       entry -[in]the compressed file object

Output      none

Returns     the name

Note        none



5.19.5.upZipFile
Prototype   public static void upZipFile(java.io.File zipFile, java.lang.String folderPath)
                    throws java.util.zip.ZipException, java.io.IOException

Function    unzip a file

Input       zipFile -[in]zip file
            folderPath -[in]the target directory

Output      none

Returns     java.io.IOException - Thrown when the decompression process fails
            java.util.zip.ZipException

Note        none



5.19.6.upZipSelectedFile
Prototype   public static java.util.ArrayList<java.io.File> upZipSelectedFile(java.io.File

            zipFile, java.lang.String folderPath, java.lang.String nameContains)
                     throws java.util.zip.ZipException, java.io.IOException

Function    Unzip the file name containing the file with the incoming text

Input       zipFile -[in]zip file
            folderPath -[in]the target directory
            nameContains -[in]The file matching name is passed in

Output      none

Returns     java.util.zip.ZipException - Thrown if the compression format is incorrect
            java.io.IOException -IO error thrown
Note        none



5.19.7.zipFiles
Prototype   public static void zipFiles(java.util.Collection<java.io.File> resFileList,
                    java.io.File zipFile) throws java.io.IOException

Function    Batch compressed files or directories

Input       resFileList -[in] the list of files or directories

Output      zipFile-[out]the zip file after compressed

Returns     java.io.IOException - Thrown when the compression process fails

Note        none



5.19.8.zipFiles
Prototype   public static void zipFiles(java.util.Collection<java.io.File> resFileList,
                               java.io.File zipFile,
                               java.lang.String comment)
                          throws java.io.IOException

Function    Batch compressed files or directories

Input       resFileList -[in] the list of files or directories
            comment-[in]Compressed file comments

Output      zipFile-[out]the zip file after compressed

Returns     java.io.IOException - Thrown when the compression process fails

Note        none
6.Miscellaneous
6.1.System Initialization
     When we build a new project, it is necessary to initialize the system first. After that the other

functions can be called.

  “SystemApi.SystemInit_Api” is the API for system initialization, we should call it in the

start of the project. Such as we add it in MainActivity.java of our demo, refer to in Fig.1.




                                                 Fig1

6.2.Permissions
6.2.1.led lights permission
  If you want to control the led lights you need to add the following permission:

          <uses-permission android:name="android.permission.CLOUDPOS_LED" />

6.2.2.smart card permissioon
  The following permission is used for smart card:

          <uses-permission android:name="android.permission.CLOUDPOS_SMARTCARD"/>

6.3.Library Dependencies
libA90JavahCore.so & AppSdkAidl.jar, vanstoneSdkClient-noemv.jar: These are library and

jar package for others, such as system function, swipe cards, printer, and so on.
