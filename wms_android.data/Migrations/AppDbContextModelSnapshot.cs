// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.data.Data;

#nullable disable

namespace wms_android.data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.data.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("efdaf52d-2786-48c4-8384-890218ec2a2d"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("fc89d46e-c4f1-4f30-9151-3e67a428ee02"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("685492fb-b1c0-4ec3-94eb-100646e925f9"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("f4c15012-42f9-4745-997c-d39821591fa9"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("5d88ffb3-28b9-4f05-8e33-6a94641b56b2"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("5f0e81c8-7366-406d-83fe-9adc7aefb7f3"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("c5b61f40-f37d-449b-981f-d0cd39e5afd5"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("447a934e-9e8d-4575-ad2e-ffbe7c883ea6"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("df811e7a-b41f-4443-91cb-39706c386fdb"),
                            FirstName = "Charles",
                            Initials = "SK",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("8d29cb2e-41ab-4d12-9bb7-2538739f19f2"),
                            FirstName = "James",
                            Initials = "SK",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@example.com",
                            Password = "admin123",
                            PasswordHash = new byte[] { 133, 113, 203, 72, 213, 106, 75, 245, 244, 105, 29, 236, 174, 60, 36, 98, 175, 3, 169, 155, 175, 184, 166, 49, 106, 192, 30, 44, 188, 31, 3, 128, 91, 113, 191, 91, 2, 156, 217, 147, 212, 96, 46, 25, 94, 28, 149, 216, 199, 204, 112, 177, 210, 138, 134, 84, 188, 23, 249, 90, 5, 177, 225, 6 },
                            PasswordSalt = new byte[] { 205, 132, 216, 242, 47, 42, 129, 252, 25, 82, 51, 106, 50, 221, 167, 185, 91, 8, 231, 230, 120, 144, 167, 235, 211, 248, 9, 225, 248, 36, 127, 125, 144, 116, 70, 149, 78, 5, 229, 225, 246, 157, 11, 57, 59, 58, 27, 89, 69, 151, 165, 89, 177, 17, 236, 166, 57, 214, 133, 194, 200, 44, 108, 139, 164, 14, 249, 15, 73, 159, 234, 43, 176, 208, 71, 139, 182, 69, 221, 190, 211, 8, 176, 213, 62, 97, 49, 225, 26, 83, 188, 49, 183, 86, 233, 77, 190, 128, 95, 24, 81, 79, 212, 232, 41, 206, 24, 155, 253, 197, 96, 80, 193, 6, 245, 96, 86, 218, 221, 22, 29, 44, 28, 73, 88, 89, 232, 142 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "manager@example.com",
                            Password = "manager123",
                            PasswordHash = new byte[] { 133, 113, 203, 72, 213, 106, 75, 245, 244, 105, 29, 236, 174, 60, 36, 98, 175, 3, 169, 155, 175, 184, 166, 49, 106, 192, 30, 44, 188, 31, 3, 128, 91, 113, 191, 91, 2, 156, 217, 147, 212, 96, 46, 25, 94, 28, 149, 216, 199, 204, 112, 177, 210, 138, 134, 84, 188, 23, 249, 90, 5, 177, 225, 6 },
                            PasswordSalt = new byte[] { 205, 132, 216, 242, 47, 42, 129, 252, 25, 82, 51, 106, 50, 221, 167, 185, 91, 8, 231, 230, 120, 144, 167, 235, 211, 248, 9, 225, 248, 36, 127, 125, 144, 116, 70, 149, 78, 5, 229, 225, 246, 157, 11, 57, 59, 58, 27, 89, 69, 151, 165, 89, 177, 17, 236, 166, 57, 214, 133, 194, 200, 44, 108, 139, 164, 14, 249, 15, 73, 159, 234, 43, 176, 208, 71, 139, 182, 69, 221, 190, 211, 8, 176, 213, 62, 97, 49, 225, 26, 83, 188, 49, 183, 86, 233, 77, 190, 128, 95, 24, 81, 79, 212, 232, 41, 206, 24, 155, 253, 197, 96, 80, 193, 6, 245, 96, 86, 218, 221, 22, 29, 44, 28, 73, 88, 89, 232, 142 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "clerk1@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 133, 113, 203, 72, 213, 106, 75, 245, 244, 105, 29, 236, 174, 60, 36, 98, 175, 3, 169, 155, 175, 184, 166, 49, 106, 192, 30, 44, 188, 31, 3, 128, 91, 113, 191, 91, 2, 156, 217, 147, 212, 96, 46, 25, 94, 28, 149, 216, 199, 204, 112, 177, 210, 138, 134, 84, 188, 23, 249, 90, 5, 177, 225, 6 },
                            PasswordSalt = new byte[] { 205, 132, 216, 242, 47, 42, 129, 252, 25, 82, 51, 106, 50, 221, 167, 185, 91, 8, 231, 230, 120, 144, 167, 235, 211, 248, 9, 225, 248, 36, 127, 125, 144, 116, 70, 149, 78, 5, 229, 225, 246, 157, 11, 57, 59, 58, 27, 89, 69, 151, 165, 89, 177, 17, 236, 166, 57, 214, 133, 194, 200, 44, 108, 139, 164, 14, 249, 15, 73, 159, 234, 43, 176, 208, 71, 139, 182, 69, 221, 190, 211, 8, 176, 213, 62, 97, 49, 225, 26, 83, 188, 49, 183, 86, 233, 77, 190, 128, 95, 24, 81, 79, 212, 232, 41, 206, 24, 155, 253, 197, 96, 80, 193, 6, 245, 96, 86, 218, 221, 22, 29, 44, 28, 73, 88, 89, 232, 142 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "clerk2@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 133, 113, 203, 72, 213, 106, 75, 245, 244, 105, 29, 236, 174, 60, 36, 98, 175, 3, 169, 155, 175, 184, 166, 49, 106, 192, 30, 44, 188, 31, 3, 128, 91, 113, 191, 91, 2, 156, 217, 147, 212, 96, 46, 25, 94, 28, 149, 216, 199, 204, 112, 177, 210, 138, 134, 84, 188, 23, 249, 90, 5, 177, 225, 6 },
                            PasswordSalt = new byte[] { 205, 132, 216, 242, 47, 42, 129, 252, 25, 82, 51, 106, 50, 221, 167, 185, 91, 8, 231, 230, 120, 144, 167, 235, 211, 248, 9, 225, 248, 36, 127, 125, 144, 116, 70, 149, 78, 5, 229, 225, 246, 157, 11, 57, 59, 58, 27, 89, 69, 151, 165, 89, 177, 17, 236, 166, 57, 214, 133, 194, 200, 44, 108, 139, 164, 14, 249, 15, 73, 159, 234, 43, 176, 208, 71, 139, 182, 69, 221, 190, 211, 8, 176, 213, 62, 97, 49, 225, 26, 83, 188, 49, 183, 86, 233, 77, 190, 128, 95, 24, 81, 79, 212, 232, 41, 206, 24, 155, 253, 197, 96, 80, 193, 6, 245, 96, 86, 218, 221, 22, 29, 44, 28, 73, 88, 89, 232, 142 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "client1@example.com",
                            Password = "client123",
                            PasswordHash = new byte[] { 133, 113, 203, 72, 213, 106, 75, 245, 244, 105, 29, 236, 174, 60, 36, 98, 175, 3, 169, 155, 175, 184, 166, 49, 106, 192, 30, 44, 188, 31, 3, 128, 91, 113, 191, 91, 2, 156, 217, 147, 212, 96, 46, 25, 94, 28, 149, 216, 199, 204, 112, 177, 210, 138, 134, 84, 188, 23, 249, 90, 5, 177, 225, 6 },
                            PasswordSalt = new byte[] { 205, 132, 216, 242, 47, 42, 129, 252, 25, 82, 51, 106, 50, 221, 167, 185, 91, 8, 231, 230, 120, 144, 167, 235, 211, 248, 9, 225, 248, 36, 127, 125, 144, 116, 70, 149, 78, 5, 229, 225, 246, 157, 11, 57, 59, 58, 27, 89, 69, 151, 165, 89, 177, 17, 236, 166, 57, 214, 133, 194, 200, 44, 108, 139, 164, 14, 249, 15, 73, 159, 234, 43, 176, 208, 71, 139, 182, 69, 221, 190, 211, 8, 176, 213, 62, 97, 49, 225, 26, 83, 188, 49, 183, 86, 233, 77, 190, 128, 95, 24, 81, 79, 212, 232, 41, 206, 24, 155, 253, 197, 96, 80, 193, 6, 245, 96, 86, 218, 221, 22, 29, 44, 28, 73, 88, 89, 232, 142 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc9a3d77-25a4-4615-acc4-151907c7a127"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("6f95459d-35cc-4d8b-9444-75f77baca095"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("e553472d-ee1f-41a0-a2e6-65a57b080274"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("b2c2a35a-ddab-4a3c-be23-4a8cfccd4fdf"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("36aaf54b-311e-493a-9bf0-8ea6273b3775"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("c12d5275-f632-44bd-bc75-4d9ef302b9c8"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("630fe42d-7171-4b5f-8f04-d67ecfd225b2"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.User", b =>
                {
                    b.HasOne("wms_android.data.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
