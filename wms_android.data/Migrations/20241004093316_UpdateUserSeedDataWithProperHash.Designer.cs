// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.data.Data;

#nullable disable

namespace wms_android.data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241004093316_UpdateUserSeedDataWithProperHash")]
    partial class UpdateUserSeedDataWithProperHash
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.data.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4345ae39-6c57-46a5-9379-79226e2e0884"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("4944f6dd-f65e-4cbf-ab80-6e15536f8523"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("ca98ce76-0923-4a30-b67a-5dd5fd5d6b15"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("563e12d1-808b-4aed-9109-c6a99472c17b"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("8973ab59-ecf9-4765-a50e-b976745d001c"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("4fa2c80e-b1a8-4793-b7d1-0c906becac48"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("af1b8bc2-d29f-4a5b-97c2-b4f0e92afa66"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("8b2f5372-2dfa-481a-a512-5d17553517ac"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("f7df347d-07bd-4a26-bd5b-1e2b7ec43a60"),
                            FirstName = "Charles",
                            Initials = "SK",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("2c1acc53-f918-4d52-be58-f03fa4b385ac"),
                            FirstName = "James",
                            Initials = "SK",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@example.com",
                            Password = "admin123",
                            PasswordHash = new byte[] { 21, 140, 200, 27, 49, 174, 104, 10, 127, 96, 124, 245, 57, 251, 255, 197, 11, 25, 240, 85, 105, 226, 236, 188, 64, 1, 4, 23, 64, 126, 94, 92, 161, 216, 64, 84, 194, 20, 107, 18, 90, 203, 159, 26, 30, 157, 126, 80, 136, 92, 116, 81, 37, 6, 82, 154, 80, 73, 101, 134, 241, 162, 2, 16 },
                            PasswordSalt = new byte[] { 145, 192, 223, 184, 57, 115, 216, 185, 98, 75, 12, 193, 55, 255, 215, 8, 108, 86, 90, 217, 120, 174, 189, 232, 243, 14, 108, 164, 230, 91, 202, 44, 157, 207, 222, 28, 132, 255, 70, 191, 241, 147, 128, 88, 182, 195, 71, 186, 103, 189, 220, 114, 215, 205, 199, 3, 45, 199, 117, 177, 115, 219, 186, 180, 69, 217, 8, 161, 106, 236, 69, 154, 151, 138, 2, 220, 85, 153, 181, 119, 36, 75, 184, 132, 73, 50, 127, 23, 219, 161, 109, 33, 43, 29, 208, 26, 12, 23, 214, 135, 20, 88, 236, 180, 14, 238, 150, 7, 16, 88, 125, 241, 172, 84, 139, 20, 45, 129, 189, 217, 66, 242, 162, 32, 20, 24, 151, 182 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "manager@example.com",
                            Password = "manager123",
                            PasswordHash = new byte[] { 21, 140, 200, 27, 49, 174, 104, 10, 127, 96, 124, 245, 57, 251, 255, 197, 11, 25, 240, 85, 105, 226, 236, 188, 64, 1, 4, 23, 64, 126, 94, 92, 161, 216, 64, 84, 194, 20, 107, 18, 90, 203, 159, 26, 30, 157, 126, 80, 136, 92, 116, 81, 37, 6, 82, 154, 80, 73, 101, 134, 241, 162, 2, 16 },
                            PasswordSalt = new byte[] { 145, 192, 223, 184, 57, 115, 216, 185, 98, 75, 12, 193, 55, 255, 215, 8, 108, 86, 90, 217, 120, 174, 189, 232, 243, 14, 108, 164, 230, 91, 202, 44, 157, 207, 222, 28, 132, 255, 70, 191, 241, 147, 128, 88, 182, 195, 71, 186, 103, 189, 220, 114, 215, 205, 199, 3, 45, 199, 117, 177, 115, 219, 186, 180, 69, 217, 8, 161, 106, 236, 69, 154, 151, 138, 2, 220, 85, 153, 181, 119, 36, 75, 184, 132, 73, 50, 127, 23, 219, 161, 109, 33, 43, 29, 208, 26, 12, 23, 214, 135, 20, 88, 236, 180, 14, 238, 150, 7, 16, 88, 125, 241, 172, 84, 139, 20, 45, 129, 189, 217, 66, 242, 162, 32, 20, 24, 151, 182 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "clerk1@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 21, 140, 200, 27, 49, 174, 104, 10, 127, 96, 124, 245, 57, 251, 255, 197, 11, 25, 240, 85, 105, 226, 236, 188, 64, 1, 4, 23, 64, 126, 94, 92, 161, 216, 64, 84, 194, 20, 107, 18, 90, 203, 159, 26, 30, 157, 126, 80, 136, 92, 116, 81, 37, 6, 82, 154, 80, 73, 101, 134, 241, 162, 2, 16 },
                            PasswordSalt = new byte[] { 145, 192, 223, 184, 57, 115, 216, 185, 98, 75, 12, 193, 55, 255, 215, 8, 108, 86, 90, 217, 120, 174, 189, 232, 243, 14, 108, 164, 230, 91, 202, 44, 157, 207, 222, 28, 132, 255, 70, 191, 241, 147, 128, 88, 182, 195, 71, 186, 103, 189, 220, 114, 215, 205, 199, 3, 45, 199, 117, 177, 115, 219, 186, 180, 69, 217, 8, 161, 106, 236, 69, 154, 151, 138, 2, 220, 85, 153, 181, 119, 36, 75, 184, 132, 73, 50, 127, 23, 219, 161, 109, 33, 43, 29, 208, 26, 12, 23, 214, 135, 20, 88, 236, 180, 14, 238, 150, 7, 16, 88, 125, 241, 172, 84, 139, 20, 45, 129, 189, 217, 66, 242, 162, 32, 20, 24, 151, 182 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "clerk2@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 21, 140, 200, 27, 49, 174, 104, 10, 127, 96, 124, 245, 57, 251, 255, 197, 11, 25, 240, 85, 105, 226, 236, 188, 64, 1, 4, 23, 64, 126, 94, 92, 161, 216, 64, 84, 194, 20, 107, 18, 90, 203, 159, 26, 30, 157, 126, 80, 136, 92, 116, 81, 37, 6, 82, 154, 80, 73, 101, 134, 241, 162, 2, 16 },
                            PasswordSalt = new byte[] { 145, 192, 223, 184, 57, 115, 216, 185, 98, 75, 12, 193, 55, 255, 215, 8, 108, 86, 90, 217, 120, 174, 189, 232, 243, 14, 108, 164, 230, 91, 202, 44, 157, 207, 222, 28, 132, 255, 70, 191, 241, 147, 128, 88, 182, 195, 71, 186, 103, 189, 220, 114, 215, 205, 199, 3, 45, 199, 117, 177, 115, 219, 186, 180, 69, 217, 8, 161, 106, 236, 69, 154, 151, 138, 2, 220, 85, 153, 181, 119, 36, 75, 184, 132, 73, 50, 127, 23, 219, 161, 109, 33, 43, 29, 208, 26, 12, 23, 214, 135, 20, 88, 236, 180, 14, 238, 150, 7, 16, 88, 125, 241, 172, 84, 139, 20, 45, 129, 189, 217, 66, 242, 162, 32, 20, 24, 151, 182 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "client1@example.com",
                            Password = "client123",
                            PasswordHash = new byte[] { 21, 140, 200, 27, 49, 174, 104, 10, 127, 96, 124, 245, 57, 251, 255, 197, 11, 25, 240, 85, 105, 226, 236, 188, 64, 1, 4, 23, 64, 126, 94, 92, 161, 216, 64, 84, 194, 20, 107, 18, 90, 203, 159, 26, 30, 157, 126, 80, 136, 92, 116, 81, 37, 6, 82, 154, 80, 73, 101, 134, 241, 162, 2, 16 },
                            PasswordSalt = new byte[] { 145, 192, 223, 184, 57, 115, 216, 185, 98, 75, 12, 193, 55, 255, 215, 8, 108, 86, 90, 217, 120, 174, 189, 232, 243, 14, 108, 164, 230, 91, 202, 44, 157, 207, 222, 28, 132, 255, 70, 191, 241, 147, 128, 88, 182, 195, 71, 186, 103, 189, 220, 114, 215, 205, 199, 3, 45, 199, 117, 177, 115, 219, 186, 180, 69, 217, 8, 161, 106, 236, 69, 154, 151, 138, 2, 220, 85, 153, 181, 119, 36, 75, 184, 132, 73, 50, 127, 23, 219, 161, 109, 33, 43, 29, 208, 26, 12, 23, 214, 135, 20, 88, 236, 180, 14, 238, 150, 7, 16, 88, 125, 241, 172, 84, 139, 20, 45, 129, 189, 217, 66, 242, 162, 32, 20, 24, 151, 182 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79901738-395a-4e06-a38c-6ac4961b3790"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("d04ea495-aa7c-443c-bf1d-af06a27b6fd8"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("27ac1a43-65a5-4a85-9948-7723f24bd979"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("c681a498-9424-4b19-8b2a-93e58b3acfcb"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("3b2c2adb-09f6-4315-b01b-51d549dfca44"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("0f0ea35a-fd23-472b-9bec-086613687b3b"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("35849df7-7218-4dbb-8613-81ec50d400e9"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.User", b =>
                {
                    b.HasOne("wms_android.data.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
