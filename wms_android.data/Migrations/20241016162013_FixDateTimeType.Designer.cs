// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.data.Data;

#nullable disable

namespace wms_android.data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241016162013_FixDateTimeType")]
    partial class FixDateTimeType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.data.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("504ae303-b8cf-4416-84a7-e51736d45a72"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("1cc71fff-97b3-4b72-8c4f-bcf66fb82880"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("8db8838e-49bf-4c52-b350-c641d8cebc94"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("11ceabc4-4d8d-4fbd-85d0-5abe53881797"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("9ca13f45-a62a-49cd-b4c5-d75e59896213"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("1cabcf11-bfa9-4e32-9db5-10630fc66568"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("c00e9133-8a7f-4174-9d7a-5d8957ca8e33"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("289d13f6-b87c-475c-b8d2-49735ddcddfd"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("c6cbc754-c6b5-4ecd-919d-b1840502df91"),
                            FirstName = "Charles",
                            Initials = "SK",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("3a3c514d-767f-4ef7-b6ba-2adacdbd318a"),
                            FirstName = "James",
                            Initials = "SK",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@example.com",
                            Password = "admin123",
                            PasswordHash = new byte[] { 16, 16, 102, 101, 105, 40, 158, 175, 226, 84, 198, 37, 233, 104, 167, 3, 110, 253, 139, 252, 140, 44, 104, 35, 36, 243, 91, 51, 105, 45, 142, 73, 49, 158, 154, 181, 64, 99, 227, 26, 216, 79, 80, 240, 209, 74, 0, 71, 182, 128, 184, 23, 207, 136, 105, 47, 50, 122, 67, 78, 39, 124, 178, 19 },
                            PasswordSalt = new byte[] { 10, 7, 102, 234, 22, 210, 29, 156, 82, 95, 102, 89, 180, 28, 190, 48, 66, 24, 9, 25, 98, 219, 138, 255, 44, 154, 60, 218, 228, 117, 157, 186, 194, 63, 169, 168, 225, 90, 135, 196, 95, 116, 58, 22, 110, 145, 180, 135, 207, 184, 46, 6, 47, 23, 186, 149, 123, 33, 14, 97, 193, 176, 5, 6, 171, 3, 174, 118, 239, 130, 147, 111, 212, 34, 139, 180, 66, 123, 181, 2, 80, 192, 152, 237, 139, 139, 139, 79, 147, 117, 214, 5, 57, 235, 69, 241, 125, 36, 65, 226, 29, 147, 124, 26, 43, 235, 190, 230, 4, 169, 7, 161, 143, 150, 208, 227, 231, 90, 136, 48, 95, 81, 139, 235, 22, 52, 12, 137 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "manager@example.com",
                            Password = "manager123",
                            PasswordHash = new byte[] { 16, 16, 102, 101, 105, 40, 158, 175, 226, 84, 198, 37, 233, 104, 167, 3, 110, 253, 139, 252, 140, 44, 104, 35, 36, 243, 91, 51, 105, 45, 142, 73, 49, 158, 154, 181, 64, 99, 227, 26, 216, 79, 80, 240, 209, 74, 0, 71, 182, 128, 184, 23, 207, 136, 105, 47, 50, 122, 67, 78, 39, 124, 178, 19 },
                            PasswordSalt = new byte[] { 10, 7, 102, 234, 22, 210, 29, 156, 82, 95, 102, 89, 180, 28, 190, 48, 66, 24, 9, 25, 98, 219, 138, 255, 44, 154, 60, 218, 228, 117, 157, 186, 194, 63, 169, 168, 225, 90, 135, 196, 95, 116, 58, 22, 110, 145, 180, 135, 207, 184, 46, 6, 47, 23, 186, 149, 123, 33, 14, 97, 193, 176, 5, 6, 171, 3, 174, 118, 239, 130, 147, 111, 212, 34, 139, 180, 66, 123, 181, 2, 80, 192, 152, 237, 139, 139, 139, 79, 147, 117, 214, 5, 57, 235, 69, 241, 125, 36, 65, 226, 29, 147, 124, 26, 43, 235, 190, 230, 4, 169, 7, 161, 143, 150, 208, 227, 231, 90, 136, 48, 95, 81, 139, 235, 22, 52, 12, 137 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "clerk1@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 16, 16, 102, 101, 105, 40, 158, 175, 226, 84, 198, 37, 233, 104, 167, 3, 110, 253, 139, 252, 140, 44, 104, 35, 36, 243, 91, 51, 105, 45, 142, 73, 49, 158, 154, 181, 64, 99, 227, 26, 216, 79, 80, 240, 209, 74, 0, 71, 182, 128, 184, 23, 207, 136, 105, 47, 50, 122, 67, 78, 39, 124, 178, 19 },
                            PasswordSalt = new byte[] { 10, 7, 102, 234, 22, 210, 29, 156, 82, 95, 102, 89, 180, 28, 190, 48, 66, 24, 9, 25, 98, 219, 138, 255, 44, 154, 60, 218, 228, 117, 157, 186, 194, 63, 169, 168, 225, 90, 135, 196, 95, 116, 58, 22, 110, 145, 180, 135, 207, 184, 46, 6, 47, 23, 186, 149, 123, 33, 14, 97, 193, 176, 5, 6, 171, 3, 174, 118, 239, 130, 147, 111, 212, 34, 139, 180, 66, 123, 181, 2, 80, 192, 152, 237, 139, 139, 139, 79, 147, 117, 214, 5, 57, 235, 69, 241, 125, 36, 65, 226, 29, 147, 124, 26, 43, 235, 190, 230, 4, 169, 7, 161, 143, 150, 208, 227, 231, 90, 136, 48, 95, 81, 139, 235, 22, 52, 12, 137 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "clerk2@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 16, 16, 102, 101, 105, 40, 158, 175, 226, 84, 198, 37, 233, 104, 167, 3, 110, 253, 139, 252, 140, 44, 104, 35, 36, 243, 91, 51, 105, 45, 142, 73, 49, 158, 154, 181, 64, 99, 227, 26, 216, 79, 80, 240, 209, 74, 0, 71, 182, 128, 184, 23, 207, 136, 105, 47, 50, 122, 67, 78, 39, 124, 178, 19 },
                            PasswordSalt = new byte[] { 10, 7, 102, 234, 22, 210, 29, 156, 82, 95, 102, 89, 180, 28, 190, 48, 66, 24, 9, 25, 98, 219, 138, 255, 44, 154, 60, 218, 228, 117, 157, 186, 194, 63, 169, 168, 225, 90, 135, 196, 95, 116, 58, 22, 110, 145, 180, 135, 207, 184, 46, 6, 47, 23, 186, 149, 123, 33, 14, 97, 193, 176, 5, 6, 171, 3, 174, 118, 239, 130, 147, 111, 212, 34, 139, 180, 66, 123, 181, 2, 80, 192, 152, 237, 139, 139, 139, 79, 147, 117, 214, 5, 57, 235, 69, 241, 125, 36, 65, 226, 29, 147, 124, 26, 43, 235, 190, 230, 4, 169, 7, 161, 143, 150, 208, 227, 231, 90, 136, 48, 95, 81, 139, 235, 22, 52, 12, 137 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "client1@example.com",
                            Password = "client123",
                            PasswordHash = new byte[] { 16, 16, 102, 101, 105, 40, 158, 175, 226, 84, 198, 37, 233, 104, 167, 3, 110, 253, 139, 252, 140, 44, 104, 35, 36, 243, 91, 51, 105, 45, 142, 73, 49, 158, 154, 181, 64, 99, 227, 26, 216, 79, 80, 240, 209, 74, 0, 71, 182, 128, 184, 23, 207, 136, 105, 47, 50, 122, 67, 78, 39, 124, 178, 19 },
                            PasswordSalt = new byte[] { 10, 7, 102, 234, 22, 210, 29, 156, 82, 95, 102, 89, 180, 28, 190, 48, 66, 24, 9, 25, 98, 219, 138, 255, 44, 154, 60, 218, 228, 117, 157, 186, 194, 63, 169, 168, 225, 90, 135, 196, 95, 116, 58, 22, 110, 145, 180, 135, 207, 184, 46, 6, 47, 23, 186, 149, 123, 33, 14, 97, 193, 176, 5, 6, 171, 3, 174, 118, 239, 130, 147, 111, 212, 34, 139, 180, 66, 123, 181, 2, 80, 192, 152, 237, 139, 139, 139, 79, 147, 117, 214, 5, 57, 235, 69, 241, 125, 36, 65, 226, 29, 147, 124, 26, 43, 235, 190, 230, 4, 169, 7, 161, 143, 150, 208, 227, 231, 90, 136, 48, 95, 81, 139, 235, 22, 52, 12, 137 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79b2a1b1-29fd-444c-8540-fbba94f8e330"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("526365ca-b37a-4b43-b1b8-876b2055e028"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("11b5e0dd-8699-4432-b216-bd2799408716"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("d17f4e37-01ed-4956-80fe-e50121a15e9e"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("f4ab06a0-a204-4d3b-b15e-ed01418e7943"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("8dbb49a8-4f67-4480-8339-451de202fe32"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("826b498f-94af-423f-afcb-f5d5edc146ec"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.User", b =>
                {
                    b.HasOne("wms_android.data.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
