// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.data.Data;

#nullable disable

namespace wms_android.data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241016155812_UpdateParcelTimestamps")]
    partial class UpdateParcelTimestamps
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.data.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("105c578f-600e-4a74-9fbd-7283744d0e89"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("63b78ec9-bff0-4749-a1bc-42f0ce7aa84c"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("3b8babf8-e509-4ebc-9a9a-7dec49bfbcff"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("bc8144dd-c544-4b62-8a1f-da8948091017"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("052e6db7-f980-4c64-9b2b-bdefabf8a9ec"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("07311cdc-2cf0-42f3-ba76-7cdd8413e3af"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("7deb66c6-d1a1-4375-8cc4-c223dc7b0dff"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("ab1ee34b-ad82-4d5a-8127-ab50f8f1c616"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("fe53e419-32a5-4c6a-956a-20b3b4d313ab"),
                            FirstName = "Charles",
                            Initials = "SK",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("c8233bdf-e9a2-41e0-a8ec-1b294de63806"),
                            FirstName = "James",
                            Initials = "SK",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@example.com",
                            Password = "admin123",
                            PasswordHash = new byte[] { 176, 237, 163, 41, 115, 114, 170, 224, 236, 233, 171, 241, 29, 2, 90, 93, 208, 80, 101, 130, 46, 4, 147, 120, 146, 46, 14, 193, 28, 195, 54, 170, 60, 162, 7, 128, 184, 49, 248, 77, 135, 255, 16, 189, 211, 59, 227, 58, 173, 12, 32, 211, 1, 197, 160, 177, 96, 105, 238, 205, 108, 196, 98, 40 },
                            PasswordSalt = new byte[] { 92, 113, 74, 74, 107, 163, 142, 158, 22, 88, 51, 20, 60, 207, 205, 209, 21, 77, 211, 249, 173, 231, 78, 100, 220, 177, 171, 53, 248, 25, 94, 154, 67, 235, 91, 236, 152, 251, 189, 73, 197, 98, 118, 67, 56, 209, 114, 158, 84, 171, 14, 152, 80, 24, 175, 15, 242, 126, 224, 161, 123, 0, 167, 159, 51, 224, 134, 128, 232, 21, 254, 133, 105, 68, 28, 172, 95, 84, 243, 200, 81, 11, 230, 118, 7, 172, 22, 249, 64, 197, 204, 182, 21, 63, 222, 170, 10, 114, 117, 206, 232, 90, 5, 77, 176, 146, 123, 219, 21, 73, 64, 32, 82, 227, 20, 96, 146, 5, 145, 236, 45, 18, 104, 213, 242, 134, 71, 216 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "manager@example.com",
                            Password = "manager123",
                            PasswordHash = new byte[] { 176, 237, 163, 41, 115, 114, 170, 224, 236, 233, 171, 241, 29, 2, 90, 93, 208, 80, 101, 130, 46, 4, 147, 120, 146, 46, 14, 193, 28, 195, 54, 170, 60, 162, 7, 128, 184, 49, 248, 77, 135, 255, 16, 189, 211, 59, 227, 58, 173, 12, 32, 211, 1, 197, 160, 177, 96, 105, 238, 205, 108, 196, 98, 40 },
                            PasswordSalt = new byte[] { 92, 113, 74, 74, 107, 163, 142, 158, 22, 88, 51, 20, 60, 207, 205, 209, 21, 77, 211, 249, 173, 231, 78, 100, 220, 177, 171, 53, 248, 25, 94, 154, 67, 235, 91, 236, 152, 251, 189, 73, 197, 98, 118, 67, 56, 209, 114, 158, 84, 171, 14, 152, 80, 24, 175, 15, 242, 126, 224, 161, 123, 0, 167, 159, 51, 224, 134, 128, 232, 21, 254, 133, 105, 68, 28, 172, 95, 84, 243, 200, 81, 11, 230, 118, 7, 172, 22, 249, 64, 197, 204, 182, 21, 63, 222, 170, 10, 114, 117, 206, 232, 90, 5, 77, 176, 146, 123, 219, 21, 73, 64, 32, 82, 227, 20, 96, 146, 5, 145, 236, 45, 18, 104, 213, 242, 134, 71, 216 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "clerk1@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 176, 237, 163, 41, 115, 114, 170, 224, 236, 233, 171, 241, 29, 2, 90, 93, 208, 80, 101, 130, 46, 4, 147, 120, 146, 46, 14, 193, 28, 195, 54, 170, 60, 162, 7, 128, 184, 49, 248, 77, 135, 255, 16, 189, 211, 59, 227, 58, 173, 12, 32, 211, 1, 197, 160, 177, 96, 105, 238, 205, 108, 196, 98, 40 },
                            PasswordSalt = new byte[] { 92, 113, 74, 74, 107, 163, 142, 158, 22, 88, 51, 20, 60, 207, 205, 209, 21, 77, 211, 249, 173, 231, 78, 100, 220, 177, 171, 53, 248, 25, 94, 154, 67, 235, 91, 236, 152, 251, 189, 73, 197, 98, 118, 67, 56, 209, 114, 158, 84, 171, 14, 152, 80, 24, 175, 15, 242, 126, 224, 161, 123, 0, 167, 159, 51, 224, 134, 128, 232, 21, 254, 133, 105, 68, 28, 172, 95, 84, 243, 200, 81, 11, 230, 118, 7, 172, 22, 249, 64, 197, 204, 182, 21, 63, 222, 170, 10, 114, 117, 206, 232, 90, 5, 77, 176, 146, 123, 219, 21, 73, 64, 32, 82, 227, 20, 96, 146, 5, 145, 236, 45, 18, 104, 213, 242, 134, 71, 216 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "clerk2@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 176, 237, 163, 41, 115, 114, 170, 224, 236, 233, 171, 241, 29, 2, 90, 93, 208, 80, 101, 130, 46, 4, 147, 120, 146, 46, 14, 193, 28, 195, 54, 170, 60, 162, 7, 128, 184, 49, 248, 77, 135, 255, 16, 189, 211, 59, 227, 58, 173, 12, 32, 211, 1, 197, 160, 177, 96, 105, 238, 205, 108, 196, 98, 40 },
                            PasswordSalt = new byte[] { 92, 113, 74, 74, 107, 163, 142, 158, 22, 88, 51, 20, 60, 207, 205, 209, 21, 77, 211, 249, 173, 231, 78, 100, 220, 177, 171, 53, 248, 25, 94, 154, 67, 235, 91, 236, 152, 251, 189, 73, 197, 98, 118, 67, 56, 209, 114, 158, 84, 171, 14, 152, 80, 24, 175, 15, 242, 126, 224, 161, 123, 0, 167, 159, 51, 224, 134, 128, 232, 21, 254, 133, 105, 68, 28, 172, 95, 84, 243, 200, 81, 11, 230, 118, 7, 172, 22, 249, 64, 197, 204, 182, 21, 63, 222, 170, 10, 114, 117, 206, 232, 90, 5, 77, 176, 146, 123, 219, 21, 73, 64, 32, 82, 227, 20, 96, 146, 5, 145, 236, 45, 18, 104, 213, 242, 134, 71, 216 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "client1@example.com",
                            Password = "client123",
                            PasswordHash = new byte[] { 176, 237, 163, 41, 115, 114, 170, 224, 236, 233, 171, 241, 29, 2, 90, 93, 208, 80, 101, 130, 46, 4, 147, 120, 146, 46, 14, 193, 28, 195, 54, 170, 60, 162, 7, 128, 184, 49, 248, 77, 135, 255, 16, 189, 211, 59, 227, 58, 173, 12, 32, 211, 1, 197, 160, 177, 96, 105, 238, 205, 108, 196, 98, 40 },
                            PasswordSalt = new byte[] { 92, 113, 74, 74, 107, 163, 142, 158, 22, 88, 51, 20, 60, 207, 205, 209, 21, 77, 211, 249, 173, 231, 78, 100, 220, 177, 171, 53, 248, 25, 94, 154, 67, 235, 91, 236, 152, 251, 189, 73, 197, 98, 118, 67, 56, 209, 114, 158, 84, 171, 14, 152, 80, 24, 175, 15, 242, 126, 224, 161, 123, 0, 167, 159, 51, 224, 134, 128, 232, 21, 254, 133, 105, 68, 28, 172, 95, 84, 243, 200, 81, 11, 230, 118, 7, 172, 22, 249, 64, 197, 204, 182, 21, 63, 222, 170, 10, 114, 117, 206, 232, 90, 5, 77, 176, 146, 123, 219, 21, 73, 64, 32, 82, 227, 20, 96, 146, 5, 145, 236, 45, 18, 104, 213, 242, 134, 71, 216 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c2ba133-bc28-4bfe-81b6-5880a493e742"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("a4f281dd-c9f4-400e-8244-8e4604c347d5"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("9283a6dc-6b1e-40bb-badc-7c1b67201d4e"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("1d5fd780-4bc4-40ca-b1ed-3338db4fece2"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("56a0a490-ddc6-44c9-a5a9-c3a7d95223a7"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("d5011e71-bbcf-463b-b797-c3092fb51816"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("6a80a127-61f0-4a4a-b52e-bb0bb3752447"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.User", b =>
                {
                    b.HasOne("wms_android.data.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
